{"version":3,"file":"static/js/127.ea1954a4.chunk.js","mappings":"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","sources":["stores/CreateModal.js","services/usersService.js","stores/UsersStore.js","components/modals/usersModals/ChangePassModal.jsx","components/modals/usersModals/ProfileInfModal.jsx","components/modals/usersModals/ResetPassModal.jsx","components/verifyAction/DoneMessage.jsx","components/verifyAction/VerifyAction.jsx","components/modals/usersModals/EditUserModal.jsx","components/modals/usersModals/UsersModal.jsx","components/modals/usersModals/CreateNewUserModal.jsx","components/modals/rolesModals/EditRoleModal.jsx","components/modals/rolesModals/UsersRolesModal.jsx","components/modals/rolesModals/CreateNewRoleModal.jsx","components/modals/management/Management.jsx","components/nav/Nav.jsx","components/modals/modalsDisplay/ModalsDisplay.jsx","services/stationService.js","stores/StationsStore.js","components/modals/stationsModals/StationsTable.jsx","components/modals/stationsModals/EditStationModal.jsx","components/modals/stationsModals/StationsChart.jsx","utils/statusFormatter.js","components/modals/stationsModals/InfDataTable.jsx","components/modals/stationsModals/CrossSectionChart.jsx","components/modals/stationsModals/GaugeChart.jsx","components/modals/stationsModals/StationsModal.jsx","components/home/displayStations/waterLevels/WaterLevelsStations.jsx","components/home/displayStations/filterLayer/FilterLayer.jsx","components/home/displayStations/rain/RainStations.jsx","components/home/displayStations/sewer/SewerStations.jsx","utils/tableConfig.js","components/home/displayStations/stationsSidePanel/StationsDataTable.jsx","components/home/displayStations/stationsSidePanel/StationsSidePanel.jsx","components/home/displayStations/floodNtc/FloodNtcStations.jsx","components/home/displayStations/citiesList/CountiesDropDown.jsx","components/home/Home.jsx"],"sourcesContent":["import { makeAutoObservable, observable } from \"mobx\";\r\n\r\nclass CreateModal {\r\n  modalStack = [];\r\n\r\n  constructor() {\r\n    // autoBind ensures 'this' is preserved; modalStack shallow so React elements aren't proxied\r\n    makeAutoObservable(\r\n      this,\r\n      { modalStack: observable.shallow },\r\n      { autoBind: true }\r\n    );\r\n  }\r\n\r\n  get isOpen() {\r\n    return this.modalStack.length > 0;\r\n  }\r\n\r\n  open(modal) {\r\n    this.modalStack.push(modal);\r\n  }\r\n\r\n  close() {\r\n    this.modalStack.pop();\r\n  }\r\n\r\n  clear() {\r\n    this.modalStack = [];\r\n  }\r\n}\r\n\r\nconst createModal = new CreateModal();\r\nexport default createModal;","import apiClient from \"./apiClient\";\r\n\r\nfunction authHeaders(token) {\r\n  return token ? { Authorization: `Bearer ${token}` } : undefined;\r\n}\r\n\r\nasync function getUser(id, token) {\r\n    return apiClient.get(`/api/services/app/User/Get`,\r\n        {params: { Id: id },headers: authHeaders(token),}\r\n    );\r\n}\r\n\r\nasync function getAllUsers(token) {\r\n      return apiClient.get(`/api/services/app/User/GetAll`,\r\n        {headers: authHeaders(token)}\r\n      );\r\n}\r\n\r\nasync function createNewUser(data, token) {\r\n  return apiClient.post(`/api/services/app/User/Create`, data, {\r\n    headers: authHeaders(token),\r\n  });\r\n}\r\n\r\nasync function editUser(data, token) {\r\n  return apiClient.put(`/api/services/app/User/Update`, data, {\r\n    headers: authHeaders(token),\r\n  });\r\n}\r\n\r\nasync function deleteUser(id, token) {\r\n  return apiClient.delete(`/api/services/app/User/Delete`, {\r\n    params: { Id: id },\r\n    headers: authHeaders(token),\r\n  });\r\n}\r\n\r\nasync function active(id, token) {\r\n  return apiClient.post(`/api/services/app/User/Activate`, {id: id}, {\r\n    headers: authHeaders(token),\r\n  });\r\n}\r\n\r\nasync function deactivate(id, token) {\r\n  return apiClient.post(`/api/services/app/User/DeActivate`, {id: id}, {\r\n    headers: authHeaders(token),\r\n  });\r\n}\r\n\r\nasync function resetPassword(passwordInf, token) {\r\n  return apiClient.post(`/api/services/app/User/ResetPassword`, passwordInf, {\r\n    headers: authHeaders(token),\r\n  });\r\n}\r\n\r\nasync function changePassword(passwordInf, token) {\r\n  return apiClient.post(`/api/services/app/User/ChangePassword`, passwordInf, {\r\n    headers: authHeaders(token),\r\n  });\r\n}\r\n\r\nconst usersService = {\r\n  getUser,\r\n  getAllUsers,\r\n  createNewUser,\r\n  editUser,\r\n  deleteUser,\r\n  active,\r\n  deactivate,\r\n  resetPassword,\r\n  changePassword,\r\n};\r\n\r\nexport default usersService;\r\n","import { makeAutoObservable } from \"mobx\";\r\nimport usersService from \"../services/usersService\";\r\n\r\nclass UsersStore {\r\n  error = null;\r\n  doneMsg = null;\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  // get user\r\n\r\n  userData = null;\r\n  userRoles = null;\r\n  async getUser(id, token) {\r\n    try {\r\n      const response = await usersService.getUser(id, token);\r\n\r\n      this.userData = response.data.result;\r\n      this.userRoles = this.userData.roleNames;\r\n    } catch (error) {\r\n      this.error = error.response?.data?.message;\r\n      console.log(this.error);\r\n    }\r\n  }\r\n\r\n  // get all users\r\n  allUsers = null;\r\n  async getAllUsers(token) {\r\n    try {\r\n      const response = await usersService.getAllUsers(token)\r\n\r\n      this.allUsers = response.data.result.items;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  // create new user\r\n\r\n  async createNewUser(data, token) {\r\n    this.loading = true;\r\n    try {\r\n      await usersService.createNewUser(data, token);\r\n\r\n      this.doneMsg = \"Created!\";\r\n      this.loading = false;\r\n    } catch (error) {\r\n      this.error = error.response.data.error.message;\r\n\r\n      this.loading = false;\r\n    }\r\n  }\r\n  // create new user\r\n\r\n  async editUser(inf, token) {\r\n    try {\r\n      await usersService.editUser(inf, token);\r\n      this.doneMsg = \"Change successfully\";\r\n    } catch (error) {\r\n      console.log(error);\r\n      \r\n    }\r\n  }\r\n  // delete user\r\n  async deleteUser(id, token) {\r\n    try {\r\n      await usersService.deleteUser(id, token);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  // active user\r\n  async active(id, token) {\r\n    try {\r\n      await usersService.active(id, token);\r\n    } catch (error) {\r\n      this.error = error.response?.data?.message;\r\n      console.log(error);\r\n    }\r\n  }\r\n  // deactivate user\r\n  async deactivate(id, token) {\r\n    try {\r\n      await usersService.deactivate(id, token);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  // reset password\r\n  async resetPassword(passwordInf, token) {\r\n    this.loading = true;\r\n    try {\r\n      await usersService.resetPassword(passwordInf, token);\r\n      this.doneMsg = \"Reset completed successfully\";\r\n      this.loading = false;\r\n    } catch (error) {\r\n      console.log(error);\r\n      \r\n\r\n      this.loading = false;\r\n    }\r\n  }\r\n  // change password\r\n  async changePassword(passwordInf, token) {\r\n    this.loading = true;\r\n    try {\r\n      await usersService.changePassword(passwordInf, token);\r\n\r\n      this.doneMsg = \"Change Password successfully\";\r\n      this.loading = false;\r\n    } catch (error) {\r\n      this.error = error.response.data.error.message;\r\n\r\n      this.loading = false;\r\n    }\r\n  }\r\n}\r\nconst userStore = new UsersStore();\r\n\r\nexport default userStore;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"flowbite-react\";\r\nimport { observer } from \"mobx-react\";\r\nimport authStore from \"../../../stores/AuthStore\";\r\nimport userStore from \"../../../stores/UsersStore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSpinner,\r\n  faTriangleExclamation,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ChangePassModal = observer(({ close }) => {\r\n  const {t} = useTranslation()\r\n  const initialFormValue = {\r\n    currentPassword: \"\",\r\n    newPassword: \"\",\r\n  };\r\n\r\n  const [changePassData, setChangePassData] = useState(initialFormValue);\r\n\r\n  async function handleChangeForm(e) {\r\n    e.preventDefault();\r\n    userStore.doneMsg = null;\r\n    userStore.error = null;\r\n    await userStore.changePassword(changePassData, authStore.token);\r\n    userStore.doneMsg ? (userStore.error = null) : (userStore.doneMsg = null);\r\n  }\r\n  function closeModal() {\r\n    close();\r\n    userStore.doneMsg = null;\r\n    userStore.error = null;\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={true}\r\n      onClose={() => {\r\n        closeModal();\r\n      }}\r\n      size=\"sm\"\r\n      popup\r\n      className=\"nav\"\r\n    >\r\n      <Modal.Header>{t(\"ChangePassword.header\")}</Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"space-y-6\">\r\n          <div className=\"handel-actions\">\r\n            <div\r\n              className={`font-bold text-red-600 mt-3 ${\r\n                userStore.error ? \"\" : \"hidden\"\r\n              }  text-center`}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faTriangleExclamation}\r\n                beat\r\n                style={{ color: \"#c70000\" }}\r\n              />{\" \"}\r\n              {userStore.error}\r\n            </div>\r\n            <div\r\n              className={`font-bold ${\r\n                userStore.doneMsg ? \"\" : \"hidden\"\r\n              } text-green-600 mt-3 text-center`}\r\n            >\r\n              {userStore.doneMsg && userStore.doneMsg}\r\n            </div>\r\n          </div>\r\n          <form onSubmit={(e) => handleChangeForm(e)}>\r\n            {/* currentPassword  */}\r\n            <div>\r\n              <label\r\n                htmlFor=\"currentPassword\"\r\n                className=\"block text-sm/6 font-medium \"\r\n              >\r\n                {t(\"ChangePassword.currentPassword\")}\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"currentPassword\"\r\n                  name=\"currentPassword\"\r\n                  type=\"text\"\r\n                  required\r\n                  autoComplete=\"currentPassword\"\r\n                  className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base  outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                  onChange={(event) =>\r\n                    setChangePassData((prev) => ({\r\n                      ...prev,\r\n                      currentPassword: event.target.value,\r\n                    }))\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* newPassword */}\r\n            <div>\r\n              <label\r\n                htmlFor=\"newPassword\"\r\n                className=\"block text-sm/6 font-medium \"\r\n              >\r\n                {t(\"ChangePassword.newPassword\")}\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"newPassword\"\r\n                  name=\"newPassword\"\r\n                  type=\"text\"\r\n                  required\r\n                  autoComplete=\"newPassword\"\r\n                  className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base  outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                  onChange={(event) =>\r\n                    setChangePassData((prev) => ({\r\n                      ...prev,\r\n                      newPassword: event.target.value,\r\n                    }))\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              className=\"flex w-full justify-center rounded-md bg-blue-600 px-3 py-1.5 text-sm/6 font-semibold text-white shadow-sm hover:bg-blue-500 hover:cursor-pointer focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 mt-3\"\r\n              type=\"submit\"\r\n            >\r\n              {userStore.loading ? (\r\n                <FontAwesomeIcon\r\n                  className=\"text-xl font-bold\"\r\n                  icon={faSpinner}\r\n                  spin\r\n                />\r\n              ) : (\r\n                \"Change\"\r\n              )}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default ChangePassModal;\r\n","import React, { useEffect } from \"react\";\r\nimport { Modal } from \"flowbite-react\";\r\nimport { observer } from \"mobx-react\";\r\nimport authStore from \"../../../stores/AuthStore\";\r\nimport userStore from \"../../../stores/UsersStore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSpinner,\r\n  faTriangleExclamation,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ProfileInfModal = observer(({ close }) => {\r\n  const {t} = useTranslation()\r\n  async function getUser() {\r\n    userStore.loading = true;\r\n    await userStore.getUser(authStore.userId, authStore.token);\r\n  }\r\n\r\n  async function handleEditUser(e) {\r\n    e.preventDefault();\r\n    userStore.loading = true;\r\n    userStore.doneMsg = null;\r\n    userStore.error = null;\r\n\r\n    const form = e.target;\r\n\r\n    const updatedUser = {\r\n      name: form.name.value,\r\n      id: form.id.value,\r\n      emailAddress: form.emailAddress.value,\r\n      userName: form.userName.value,\r\n    };\r\n\r\n    userStore.userData = {\r\n      ...userStore.userData,\r\n      ...updatedUser,\r\n    };\r\n\r\n    await userStore.editUser(userStore.userData, authStore.token);\r\n\r\n    userStore.loading = false;\r\n    userStore.doneMsg ? (userStore.error = null) : (userStore.doneMsg = null);\r\n  }\r\n\r\n  function closeModal() {\r\n    close();\r\n    userStore.doneMsg = null;\r\n    userStore.error = null;\r\n  }\r\n\r\n  useEffect(() => {\r\n    userStore.loading = true;\r\n    getUser();\r\n    userStore.loading = false;\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {userStore.userData ? (\r\n        <Modal\r\n          show={true}\r\n          onClose={() => {\r\n            closeModal();\r\n          }}\r\n          size=\"md\"\r\n          popup\r\n          className=\"nav\"\r\n        >\r\n          <Modal.Header>{t(\"ProfileInformation.header\")}</Modal.Header>\r\n\r\n          {authStore.userId && (\r\n            <Modal.Body>\r\n              <div className=\"space-y-6\">\r\n                <div className=\"handel-actions\">\r\n                  <div\r\n                    className={`font-bold text-red-600 mt-3 ${\r\n                      userStore.error ? \"\" : \"hidden\"\r\n                    }  text-center`}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={faTriangleExclamation}\r\n                      beat\r\n                      style={{ color: \"#c70000\" }}\r\n                    />{\" \"}\r\n                    {userStore.error}\r\n                  </div>\r\n                  <div\r\n                    className={`font-bold ${\r\n                      userStore.doneMsg ? \"\" : \"hidden\"\r\n                    } text-green-600 mt-3  text-center`}\r\n                  >\r\n                    {userStore.doneMsg && userStore.doneMsg}\r\n                  </div>\r\n                </div>\r\n                <form onSubmit={(e) => handleEditUser(e)}>\r\n                  {/* user-name  */}\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"user-name\"\r\n                      className=\"block text-sm/6 font-medium \"\r\n                    >\r\n                      {t(\"ProfileInformation.userName\")}\r\n                    </label>\r\n                    <div className=\"mt-2\">\r\n                      <input\r\n                        id=\"user-name\"\r\n                        name=\"userName\"\r\n                        type=\"text\"\r\n                        required\r\n                        autoComplete=\"user-name\"\r\n                        className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base  outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                        defaultValue={userStore.userData.userName}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {/* name  */}\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"name\"\r\n                      className=\"block text-sm/6 font-medium \"\r\n                    >\r\n                      {t(\"ProfileInformation.name\")}\r\n                    </label>\r\n                    <div className=\"mt-2\">\r\n                      <input\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        required\r\n                        autoComplete=\"name\"\r\n                        className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base  outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                        defaultValue={userStore.userData.name}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {/* Id */}\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"id\"\r\n                      className=\"block text-sm/6 font-medium \"\r\n                    >\r\n                      {t(\"ProfileInformation.id\")}\r\n                    </label>\r\n                    <div className=\"mt-2\">\r\n                      <input\r\n                        id=\"id\"\r\n                        name=\"id\"\r\n                        type=\"text\"\r\n                        required\r\n                        autoComplete=\"id\"\r\n                        className=\"block w-full text-black rounded-md bg-slate-400 px-3 py-1.5 text-base  outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6 hover:cursor-not-allowed\"\r\n                        defaultValue={userStore.userData.id}\r\n                        disabled\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {/* email */}\r\n                  <div>\r\n                    <label\r\n                      htmlFor=\"emailAddress\"\r\n                      className=\"block text-sm/6 font-medium \"\r\n                    >\r\n                      {t(\"ProfileInformation.email\")}\r\n                    </label>\r\n                    <div className=\"mt-2\">\r\n                      <input\r\n                        id=\"emailAddress\"\r\n                        name=\"emailAddress\"\r\n                        type=\"emailAddress\"\r\n                        required\r\n                        autoComplete=\"emailAddress\"\r\n                        className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base  outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                        defaultValue={userStore.userData.emailAddress}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* change btn start */}\r\n                  {userStore.loading ? (\r\n                    <FontAwesomeIcon\r\n                      className=\"text-xl font-bold\"\r\n                      icon={faSpinner}\r\n                      spin\r\n                    />\r\n                  ) : (\r\n                    <button\r\n                      className=\"flex w-full justify-center rounded-md bg-blue-600 px-3 py-1.5 text-sm/6 font-semibold text-white shadow-sm hover:bg-blue-500 hover:cursor-pointer focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 mt-3\"\r\n                      type=\"submit\"\r\n                    >\r\n                      {t(\"ProfileInformation.change\")}\r\n                    </button>\r\n                  )}\r\n                  {/* change btn end */}\r\n                </form>\r\n              </div>\r\n            </Modal.Body>\r\n          )}\r\n        </Modal>\r\n      ) : (\r\n        <div>Loading...</div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ProfileInfModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal } from \"flowbite-react\";\r\nimport { observer } from \"mobx-react\";\r\nimport authStore from \"../../../stores/AuthStore\";\r\nimport userStore from \"../../../stores/UsersStore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEye,\r\n  faEyeSlash,\r\n  faSpinner,\r\n  faTriangleExclamation,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ProtectedRoute from \"../../protected/ProtectedRoute\";\r\n\r\n\r\nconst ResetPassModal = observer(({ close }) => {\r\n  const {t}=useTranslation()\r\n\r\n  const [showPasswordOne, setShowPasswordOne] = useState(false);\r\n  const [showPasswordTwo, setShowPasswordTwo] = useState(false);\r\n\r\n  const initialFormValue = {\r\n    adminPassword: \"\",\r\n    newPassword: \"\",\r\n    userId: null,\r\n  };\r\n\r\n  const [changePassData, setChangePassData] = useState(initialFormValue);\r\n\r\n  async function handleChangeForm(e) {\r\n    e.preventDefault();\r\n    userStore.doneMsg = null;\r\n    userStore.error = null;\r\n    await userStore.resetPassword(changePassData, authStore.token);\r\n    userStore.doneMsg ? (userStore.error = null) : (userStore.doneMsg = null);\r\n  }\r\n\r\n  function closeModal() {\r\n    close();\r\n    userStore.doneMsg = null;\r\n    userStore.error = null;\r\n  }\r\n\r\n  useEffect(() => {\r\n    userStore.error = null;\r\n  }, []);\r\n\r\n  return (\r\n    <ProtectedRoute permission={[\"Users.ResetPassword\"]}>\r\n      <Modal\r\n        show={true}\r\n        onClose={() => {\r\n          closeModal();\r\n        }}\r\n        size=\"sm\"\r\n        popup\r\n        className=\"nav\"\r\n      >\r\n      <Modal.Header>{t(\"ResetPassword.header\")}</Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"space-y-6\">\r\n            <div className=\"handel-actions\">\r\n              <div\r\n                className={`font-bold text-red-600 mt-3 ${\r\n                  userStore.error ? \"\" : \"hidden\"\r\n                }  text-center`}\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faTriangleExclamation}\r\n                  beat\r\n                  style={{ color: \"#c70000\" }}\r\n                />{\" \"}\r\n                {userStore.error}\r\n              </div>\r\n              <div\r\n                className={`font-bold ${\r\n                  userStore.doneMsg ? \"\" : \"hidden\"\r\n                }  text-center text-green-600 mt-3`}\r\n              >\r\n                {userStore.doneMsg && userStore.doneMsg}\r\n              </div>\r\n            </div>\r\n\r\n            <form onSubmit={(e) => handleChangeForm(e)}>\r\n              {/* adminPassword  */}\r\n              <div>\r\n                <label\r\n                  htmlFor=\"adminPassword\"\r\n                  className=\"block text-sm/6 font-medium \"\r\n                >\r\n                  {t(\"ResetPassword.adminPassword\")}\r\n                </label>\r\n                <div className=\"mt-2 flex items-center\">\r\n                  <input\r\n                    id=\"adminPassword\"\r\n                    name=\"adminPassword\"\r\n                    type={showPasswordOne ? \"text\" : \"password\"}\r\n                    required\r\n                    autoComplete=\"adminPassword\"\r\n                    className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base  outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                    onChange={(event) =>\r\n                      setChangePassData((prev) => ({\r\n                        ...prev,\r\n                        adminPassword: event.target.value,\r\n                      }))\r\n                    }\r\n                  />\r\n                  <span\r\n                    className=\"hover:cursor-pointer ms-1\"\r\n                    onClick={() => {\r\n                      setShowPasswordOne(!showPasswordOne);\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={showPasswordOne ? faEye : faEyeSlash}\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              {/* newPassword */}\r\n              <div>\r\n                <label\r\n                  htmlFor=\"newPassword\"\r\n                  className=\"block text-sm/6 font-medium \"\r\n                >\r\n                  {t(\"ResetPassword.newPassword\")}\r\n                </label>\r\n                <div className=\"mt-2 flex items-center \">\r\n                  <input\r\n                    id=\"newPassword\"\r\n                    name=\"newPassword\"\r\n                    type={showPasswordTwo ? \"text\" : \"password\"}\r\n                    required\r\n                    autoComplete=\"newPassword\"\r\n                    className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base  outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                    onChange={(event) =>\r\n                      setChangePassData((prev) => ({\r\n                        ...prev,\r\n                        newPassword: event.target.value,\r\n                      }))\r\n                    }\r\n                  />\r\n                  <span\r\n                    className=\"hover:cursor-pointer ms-1\"\r\n                    onClick={() => {\r\n                      setShowPasswordTwo(!showPasswordTwo);\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={showPasswordTwo ? faEye : faEyeSlash}\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              {/* userId */}\r\n              <div>\r\n                <label htmlFor=\"userId\" className=\"block text-sm/6 font-medium \">\r\n                  {t(\"ResetPassword.id\")}\r\n                </label>\r\n                <div className=\"mt-2\">\r\n                  <input\r\n                    id=\"userId\"\r\n                    name=\"userId\"\r\n                    type=\"text\"\r\n                    required\r\n                    autoComplete=\"userId\"\r\n                    className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base  outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                    onChange={(event) =>\r\n                      setChangePassData((prev) => ({\r\n                        ...prev,\r\n                        userId: +event.target.value,\r\n                      }))\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button\r\n                className=\"flex w-full justify-center rounded-md bg-blue-600 px-3 py-1.5 text-sm/6 font-semibold text-white shadow-sm hover:bg-blue-500 hover:cursor-pointer focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 mt-3\"\r\n                type=\"submit\"\r\n              >\r\n                {userStore.loading ? (\r\n                  <FontAwesomeIcon\r\n                    className=\"text-xl font-bold\"\r\n                    icon={faSpinner}\r\n                    spin\r\n                  />\r\n                ) : (\r\n                  `${t(\"ResetPassword.change\")}`\r\n                )}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </ProtectedRoute>\r\n  );\r\n});\r\n\r\nexport default ResetPassModal;\r\n","import { Button, Modal } from \"flowbite-react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { faCheckCircle} from \"@fortawesome/free-solid-svg-icons\"; // Add this icon package if not present\r\nimport createModal from \"../../stores/CreateModal\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { useTranslation } from \"react-i18next\";\r\n\r\nconst DoneMessage = observer(({ action, close, id }) => {\r\n  //   const { t } = useTranslation();\r\n\r\n  return (\r\n    <Modal size=\"md\" show={true} onClose={close} className=\"nav\" popup>\r\n      <Modal.Header />\r\n      <Modal.Body className=\"flex flex-col items-center justify-center py-6\">\r\n        {/* <CheckCircleIcon className=\"w-16 h-16 text-green-500 mb-4\" /> */}\r\n        <FontAwesomeIcon\r\n            icon={faCheckCircle} className=\"w-16 h-16 text-green-500 mb-4\"/>\r\n        <div className=\"text-xl font-semibold text-center mb-2\">\r\n          Action <span className=\"inline-block bg-red-100 text-red-800 px-2 py-1 rounded\">{action}</span> completed successfully!\r\n        </div>\r\n        <div className=\"text-gray-500 text-sm mb-4\">\r\n          Reference ID: <span className=\"font-mono\">{id}</span>\r\n        </div>\r\n        <Button\r\n          onClick={async () => {\r\n            createModal.clear();\r\n          }}\r\n          className=\"w-32 bg-green-600 hover:bg-green-700 focus:ring-4 focus:ring-green-300 transition\"\r\n        >\r\n          OK\r\n        </Button>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default DoneMessage;","import { Button, Modal } from \"flowbite-react\";\r\nimport { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport createModal from \"../../stores/CreateModal\";\r\nimport DoneMessage from \"./DoneMessage\";\r\nimport { useTranslation } from \"react-i18next\";  // ✅ i18n hook\r\n\r\nconst VerifyAction = observer(({ action, actionFunc, close, id, token, afterActionFunc, type }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Modal size=\"md\" show={true} onClose={close} className=\"nav\" popup>\r\n      <Modal.Header />\r\n      <Modal.Body className=\"flex flex-col items-center justify-center\">\r\n        <div className=\"font-bold\">\r\n          {t(\"verifyAction.title\", { action })}\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <Button\r\n            onClick={() => {\r\n              close();\r\n            }}\r\n            className=\"my-3 modal-btn bg-gray-400\"\r\n          >\r\n            {t(\"verifyAction.no\")}\r\n          </Button>\r\n          <Button\r\n            onClick={async () => {\r\n              await actionFunc(id, token);\r\n              await afterActionFunc(type);\r\n              createModal.clear();\r\n              createModal.open(\r\n                  <DoneMessage\r\n                  close={() => createModal.close()}\r\n                  id = {id}\r\n                  action = {action}\r\n                  />\r\n                )\r\n            }}\r\n            className=\"my-3 modal-btn bg-blue-600\"\r\n          >\r\n            {t(\"verifyAction.yes\")}\r\n          </Button>\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default VerifyAction;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal } from \"flowbite-react\";\r\nimport { observer } from \"mobx-react\";\r\nimport authStore from \"../../../stores/AuthStore\";\r\nimport userStore from \"../../../stores/UsersStore\";\r\nimport createModal from \"../../../stores/CreateModal\";\r\nimport VerifyAction from \"../../verifyAction/VerifyAction\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSpinner,\r\n  faTriangleExclamation,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n\r\nconst EditUserModal = observer(\r\n  ({ close, usersArray, index, element }) => {\r\n    const { t } = useTranslation();\r\n\r\n    console.log(\"from edit user\");\r\n\r\n    const [userRoles, setUserRoles] = useState(usersArray[index].roleNames);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    function handelRoles(e) {\r\n      const { value, checked } = e.target;\r\n      setUserRoles((prev) =>\r\n        checked ? [...prev, value] : prev.filter((role) => role !== value)\r\n      );\r\n    }\r\n\r\n    function displayRoles() {\r\n      if (!authStore.roles) {\r\n        return [];\r\n      }\r\n\r\n      // Group roles by category if they have one, otherwise show as \"General\"\r\n      const groupedRoles = authStore.roles.reduce((acc, role) => {\r\n        const category = role.category || t(\"editUserModal.roles.general\");\r\n        if (!acc[category]) {\r\n          acc[category] = [];\r\n        }\r\n        acc[category].push(role);\r\n        return acc;\r\n      }, {});\r\n\r\n      return Object.entries(groupedRoles).map(([category, roles]) => (\r\n        <div key={category} className=\"mb-6\">\r\n          <h4 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3 pb-2 border-b border-gray-200 dark:border-gray-600\">\r\n            {category}\r\n          </h4>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n            {roles.map((role, index) => (\r\n              <div \r\n                key={`${category}-${index}`} \r\n                className=\"flex items-center p-3 bg-gray-50 dark:bg-gray-800 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200\"\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={userRoles.includes(role.normalizedName)}\r\n                  value={role.normalizedName}\r\n                  id={`${category}-${role.name}`}\r\n                  onChange={handelRoles}\r\n                  className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\r\n                />\r\n                <label \r\n                  className=\"ms-3 text-sm font-medium text-gray-700 dark:text-gray-300 cursor-pointer flex-1\"\r\n                  htmlFor={`${category}-${role.name}`}\r\n                >\r\n                  <div className=\"font-medium\">{role.displayName || role.name}</div>\r\n                  {role.description && (\r\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                      {role.description}\r\n                    </div>\r\n                  )}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ));\r\n    }\r\n\r\n    async function deleteUser(id) {\r\n      setLoading(true);\r\n      await userStore.deleteUser(id, authStore.token);\r\n      close();\r\n    }\r\n\r\n    async function deactivate(id) {\r\n      setLoading(true);\r\n      await userStore.deactivate(id, authStore.token);\r\n      userStore.getAllUsers(authStore.token);\r\n      close();\r\n    }\r\n\r\n    async function active(id, token) {\r\n      setLoading(true);\r\n      await userStore.active(id, token);\r\n      userStore.getAllUsers(authStore.token);\r\n      close();\r\n    }\r\n\r\n    async function handleEditUser(e, usersArray, i) {\r\n      e.preventDefault();\r\n      setLoading(true);\r\n      userStore.doneMsg = null;\r\n      userStore.error = null;\r\n\r\n      const form = e.target;\r\n\r\n      const updatedUser = {\r\n        name: form.name.value,\r\n        surname: form.surname.value,\r\n        emailAddress: form.emailAddress.value,\r\n        userName: form.userName.value,\r\n        roleNames: userRoles,\r\n      };\r\n\r\n      usersArray[i] = {\r\n        ...usersArray[i],\r\n        ...updatedUser,\r\n      };\r\n\r\n      await userStore.editUser(usersArray[i], authStore.token);\r\n\r\n      userStore.doneMsg ? (userStore.error = null) : (userStore.doneMsg = null);\r\n      setLoading(false);\r\n      userStore.getAllUsers(authStore.token);\r\n    }\r\n\r\n    async function getAllRoles() {\r\n      await authStore.getRoles(authStore.token);\r\n    }\r\n\r\n    function closeModal() {\r\n      close();\r\n      userStore.doneMsg = null;\r\n      userStore.error = null;\r\n    }\r\n\r\n    useEffect(() => {\r\n      getAllRoles();\r\n    }, []);\r\n\r\n    return (\r\n      <Modal\r\n        show={true}\r\n        onClose={() => {\r\n          closeModal();\r\n        }}\r\n        size=\"md\"\r\n        popup\r\n        className=\"nav\"\r\n      >\r\n        <Modal.Header />\r\n        <Modal.Body className=\"min-h-[78vh]\">\r\n          {authStore.roles ? (\r\n            <div className=\"space-y-6\">\r\n              <h3 className=\"text-xl font-medium text-gray-900 dark:text-white\">\r\n                {t(\"editUserModal.header\", { name: element.name })}\r\n              </h3>\r\n\r\n              <div className=\"handel-actions\">\r\n                <div\r\n                  className={`font-bold text-red-600 mt-3 ${\r\n                    userStore.error ? \"\" : \"hidden\"\r\n                  } text-center`}\r\n                >\r\n                  <FontAwesomeIcon\r\n                    icon={faTriangleExclamation}\r\n                    beat\r\n                    style={{ color: \"#c70000\" }}\r\n                  />{\" \"}\r\n                  {userStore.error}\r\n                </div>\r\n                <div\r\n                  className={`font-bold ${\r\n                    userStore.doneMsg ? \"\" : \"hidden\"\r\n                  } text-green-600 mt-3 text-center`}\r\n                >\r\n                  {userStore.doneMsg && userStore.doneMsg}\r\n                </div>\r\n              </div>\r\n\r\n              <form onSubmit={(e) => handleEditUser(e, usersArray, index)}>\r\n                {/* user-name */}\r\n                <div>\r\n                  <label>{t(\"editUserModal.form.labels.userName\")}</label>\r\n                  <div className=\"mt-2\">\r\n                    <input\r\n                      id=\"user-name\"\r\n                      name=\"userName\"\r\n                      type=\"text\"\r\n                      required\r\n                      autoComplete=\"user-name\"\r\n                      className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                      defaultValue={element.userName}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* name */}\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"name\"\r\n                    className=\"block text-sm/6 font-medium\"\r\n                  >\r\n                    {t(\"editUserModal.form.labels.name\")}\r\n                  </label>\r\n                  <div className=\"mt-2\">\r\n                    <input\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      type=\"text\"\r\n                      required\r\n                      autoComplete=\"name\"\r\n                      className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                      defaultValue={element.name}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* surname */}\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"surname\"\r\n                    className=\"block text-sm/6 font-medium\"\r\n                  >\r\n                    {t(\"editUserModal.form.labels.surname\")}\r\n                  </label>\r\n                  <div className=\"mt-2\">\r\n                    <input\r\n                      id=\"surname\"\r\n                      name=\"surname\"\r\n                      type=\"text\"\r\n                      required\r\n                      autoComplete=\"surname\"\r\n                      className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                      defaultValue={element.surname}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* email */}\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"emailAddress\"\r\n                    className=\"block text-sm/6 font-medium\"\r\n                  >\r\n                    {t(\"editUserModal.form.labels.email\")}\r\n                  </label>\r\n                  <div className=\"mt-2\">\r\n                    <input\r\n                      id=\"emailAddress\"\r\n                      name=\"emailAddress\"\r\n                      type=\"email\"\r\n                      required\r\n                      autoComplete=\"emailAddress\"\r\n                      className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                      defaultValue={element.emailAddress}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Roles Section */}\r\n                <div className=\"mt-6\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                      {t(\"editUserModal.roles.header\")}\r\n                    </h3>\r\n                    <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                      {t(\"editUserModal.roles.selected\", {\r\n                        count: userRoles.length,\r\n                        total: authStore.roles?.length || 0,\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Quick Actions */}\r\n                  <div className=\"flex gap-2 mb-4\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => setUserRoles(authStore.roles?.map(r => r.normalizedName) || [])}\r\n                      className=\"px-3 py-1.5 text-xs font-medium text-blue-600 bg-blue-50 border border-blue-200 rounded-md hover:bg-blue-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1 transition-colors duration-200\"\r\n                    >\r\n                      {t(\"editUserModal.roles.selectAll\")}\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => setUserRoles([])}\r\n                      className=\"px-3 py-1.5 text-xs font-medium text-gray-600 bg-gray-50 border border-gray-200 rounded-md hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-1 transition-colors duration-200\"\r\n                    >\r\n                      {t(\"editUserModal.roles.clearAll\")}\r\n                    </button>\r\n                  </div>\r\n\r\n                  {/* Roles List */}\r\n                  <div className=\"bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-700 rounded-lg p-4 max-h-96 overflow-y-auto\">\r\n                    {displayRoles()}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* btns start */}\r\n                {loading ? (\r\n                  <FontAwesomeIcon\r\n                    className=\"text-xl font-bold\"\r\n                    icon={faSpinner}\r\n                    spin\r\n                  />\r\n                ) : (\r\n                  <div className=\"btns\">\r\n                    {/* done btn */}\r\n                    <button\r\n                      className=\"flex w-full justify-center rounded-md bg-blue-600 px-3 py-1.5 text-sm/6 font-semibold text-white shadow-sm hover:bg-blue-500 hover:cursor-pointer focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 mt-3\"\r\n                      type=\"submit\"\r\n                    >\r\n                      {t(\"editUserModal.form.buttons.done\")}\r\n                    </button>\r\n                    {/* delete btn */}\r\n                    <button\r\n                      className=\"flex w-full justify-center rounded-md bg-red-600 px-3 py-1.5 text-sm/6 font-semibold text-white shadow-sm hover:bg-red-500 hover:cursor-pointer focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 mt-3\"\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        createModal.open(\r\n                        <VerifyAction\r\n                          close={() => createModal.close()}\r\n                          action={\"delete\"}\r\n                          actionFunc={(id) => deleteUser(id)}\r\n                          id={element.id}\r\n                          token={authStore.token}\r\n                          afterActionFunc={(type) => userStore.getAllUsers(type)}\r\n                          type={authStore.token}\r\n                        />\r\n                      );\r\n                        \r\n                        \r\n                      }}\r\n              \r\n                    >\r\n                      {t(\"editUserModal.form.buttons.delete\")}\r\n                    </button>\r\n                    {/* activate btns */}\r\n                    {element.isActive ? (\r\n                      <button\r\n                        className=\"flex w-full justify-center rounded-md bg-yellow-600 px-3 py-1.5 text-sm/6 font-semibold text-white shadow-sm hover:bg-yellow-500 hover:cursor-pointer focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 mt-3\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          deactivate(element.id, authStore.token);\r\n                        }}\r\n                      >\r\n                        {t(\"editUserModal.form.buttons.deactivate\")}\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        className=\"flex w-full justify-center rounded-md bg-green-600 px-3 py-1.5 text-sm/6 font-semibold text-white shadow-sm hover:bg-green-500 hover:cursor-pointer focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 mt-3\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          active(element.id, authStore.token);\r\n                        }}\r\n                      >\r\n                        {t(\"editUserModal.form.buttons.activate\")}\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                {/* btns end */}\r\n              </form>\r\n            </div>\r\n          ) : (\r\n            <FontAwesomeIcon\r\n              className=\"flex justify-center items-center\"\r\n              icon={faSpinner}\r\n            />\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditUserModal;","import {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n} from \"flowbite-react\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport authStore from \"../../../stores/AuthStore\";\r\nimport userStore from \"../../../stores/UsersStore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner, faPenToSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { observer } from \"mobx-react\";\r\nimport createModal from \"../../../stores/CreateModal\";\r\nimport EditUserModal from \"./EditUserModal\";\r\nimport ProtectedRoute from \"../../protected/ProtectedRoute\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst UsersModal = observer((prop) => {\r\n  const { t } = useTranslation(); \r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const displayAllUsers = useCallback(\r\n    (usersArray) => {\r\n      return usersArray.map((e, i) => (\r\n        <TableRow\r\n          key={i}\r\n          className=\"bg-white dark:border-gray-700 dark:bg-gray-800\"\r\n        >\r\n          <TableCell className=\"font-medium text-gray-900 dark:text-white\">\r\n            <Button\r\n              onClick={() =>\r\n                createModal.open(\r\n                  <EditUserModal\r\n                    close={() => createModal.close()}\r\n                    usersArray={usersArray}\r\n                    index={i}\r\n                    element={e}\r\n                  />\r\n                )\r\n              }\r\n              className=\"my-3 modal-btn\"\r\n            >\r\n              <FontAwesomeIcon icon={faPenToSquare} />\r\n            </Button>\r\n          </TableCell>\r\n          <TableCell className=\"font-medium text-gray-900 dark:text-white\">\r\n            {e.name}\r\n          </TableCell>\r\n          <TableCell className=\"font-medium text-gray-900 dark:text-white\">\r\n            {e.userName}\r\n          </TableCell>\r\n          <TableCell className=\"font-medium text-gray-900 dark:text-white\">\r\n            {e.emailAddress}\r\n          </TableCell>\r\n          <TableCell className=\"font-medium text-gray-900 dark:text-white\">\r\n            {e.isActive\r\n              ? t(\"usersModal.userStatus.active\")\r\n              : t(\"usersModal.userStatus.deactivate\")}\r\n          </TableCell>\r\n        </TableRow>\r\n      ));\r\n    },\r\n    [t]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    userStore.getAllUsers(authStore.token);\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  return (\r\n    <ProtectedRoute permission={[\"Pages.Users\"]}>\r\n          <div className=\"show-users mt-10\">\r\n            <div className=\"overflow-x-auto\">\r\n              <Table hoverable>\r\n                <TableBody className=\"divide-y\">\r\n                  <TableRow>\r\n                    <TableCell> </TableCell>\r\n                    <TableCell className=\"whitespace-nowrap font-medium text-gray-900 dark:text-white\">\r\n                      {t(\"usersModal.table.headers.name\")}\r\n                    </TableCell>\r\n                    <TableCell className=\"whitespace-nowrap font-medium text-gray-900 dark:text-white\">\r\n                      {t(\"usersModal.table.headers.userName\")}\r\n                    </TableCell>\r\n                    <TableCell className=\"whitespace-nowrap font-medium text-gray-900 dark:text-white\">\r\n                      {t(\"usersModal.table.headers.email\")}\r\n                    </TableCell>\r\n                    <TableCell className=\"whitespace-nowrap font-medium text-gray-900 dark:text-white\">\r\n                      {t(\"usersModal.table.headers.state\")}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  {loading ? (\r\n                    <TableRow>\r\n                      <TableCell colSpan={5}>\r\n                        <div className=\"flex justify-center items-center h-full\">\r\n                          {t(\"usersModal.table.loading\")}\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ) : userStore.allUsers ? (\r\n                    displayAllUsers(userStore.allUsers)\r\n                  ) : (\r\n                    <TableRow>\r\n                      <TableCell colSpan={5}>\r\n                        <FontAwesomeIcon\r\n                          className=\"text-xl font-bold\"\r\n                          icon={faSpinner}\r\n                          spin\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          </div>\r\n    </ProtectedRoute>\r\n  );\r\n});\r\n\r\nexport default UsersModal;","import React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport authStore from \"../../../stores/AuthStore\";\r\nimport userStore from \"../../../stores/UsersStore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSpinner,\r\n  faTriangleExclamation,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst CreateNewUserModal = observer(({ close }) => {\r\n  const { t } = useTranslation(); \r\n\r\n  console.log(\"from create new user\");\r\n\r\n  const initialFormValue = {\r\n    userName: \"\",\r\n    name: \"\",\r\n    surname: \"\",\r\n    emailAddress: \"\",\r\n    roleNames: [],\r\n    password: \"\",\r\n  };\r\n\r\n  const [createUserData, setCreateUserData] = useState(initialFormValue);\r\n\r\n  function handelRoles(e) {\r\n    const { value, checked } = e.target;\r\n    setCreateUserData((prev) => ({\r\n      ...prev,\r\n      roleNames: checked\r\n        ? [...prev.roleNames, value]\r\n        : prev.roleNames.filter((role) => role !== value),\r\n    }));\r\n  }\r\n\r\n\r\n  async function handleCreateNewUser(e) {\r\n    e.preventDefault();\r\n    userStore.doneMsg = null;\r\n    userStore.error = null;\r\n\r\n    await userStore.createNewUser(createUserData, authStore.token);\r\n    userStore.doneMsg ? (userStore.error = null) : (userStore.doneMsg = null);\r\n    setCreateUserData(initialFormValue);\r\n  }\r\n\r\n  async function getAllRoles() {\r\n    await authStore.getRoles(authStore.token);\r\n  }\r\n\r\n  function displayRoles() {\r\n    if (!authStore.roles) {\r\n      return [];\r\n    }\r\n\r\n    // Group roles by category if they have one, otherwise show as \"General\"\r\n    const groupedRoles = authStore.roles.reduce((acc, role) => {\r\n      const category = role.category || `${t(\"createNewUserModal.form.roles.General\")}`;\r\n      if (!acc[category]) {\r\n        acc[category] = [];\r\n      }\r\n      acc[category].push(role);\r\n      return acc;\r\n    }, {});\r\n\r\n    return Object.entries(groupedRoles).map(([category, roles]) => (\r\n      <div key={category} className=\"mb-6\">\r\n        <h4 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3 pb-2 border-b border-gray-200 dark:border-gray-600\">\r\n          {category}\r\n        </h4>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n          {roles.map((role, index) => (\r\n            <div \r\n              key={`${category}-${index}`} \r\n              className=\"flex items-center p-3 bg-gray-50 dark:bg-gray-800 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200\"\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={createUserData.roleNames.includes(role.normalizedName)}\r\n                value={role.normalizedName}\r\n                id={`${category}-${role.name}`}\r\n                onChange={handelRoles}\r\n                className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\r\n              />\r\n              <label \r\n                className=\"ms-3 text-sm font-medium text-gray-700 dark:text-gray-300 cursor-pointer flex-1\"\r\n                htmlFor={`${category}-${role.name}`}\r\n              >\r\n                <div className=\"font-medium\">{role.displayName || role.name}</div>\r\n                {role.description && (\r\n                  <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                    {role.description}\r\n                  </div>\r\n                )}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  function closeModal() {\r\n    userStore.doneMsg = null;\r\n    userStore.error = null;\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllRoles();\r\n    return () => {\r\n      closeModal();\r\n  \t};\r\n  }, []);\r\n\r\n  return (\r\n        <div className=\"w-full md:w-3/4\">\r\n          <h3 className=\"text-xl font-medium text-gray-900 dark:text-white\">\r\n            {t(\"createNewUserModal.header\")}\r\n          </h3>\r\n          <div className=\"handel-actions\">\r\n            <div\r\n              className={`font-bold text-red-600 mt-3 ${\r\n                userStore.error ? \"\" : \"hidden\"\r\n              } text-center`}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faTriangleExclamation}\r\n                beat\r\n                style={{ color: \"#c70000\" }}\r\n              />{\" \"}\r\n              {userStore.error}\r\n            </div>\r\n            <div\r\n              className={`font-bold ${\r\n                userStore.doneMsg ? \"\" : \"hidden\"\r\n              } text-green-600 mt-3 text-center`}\r\n            >\r\n              {userStore.doneMsg && userStore.doneMsg}\r\n            </div>\r\n          </div>\r\n          <form className=\"px-3\" onSubmit={(e) => handleCreateNewUser(e)}>\r\n            <div className=\"flex justify-between items-center flex-col md:flex-row md:gap-[100px]\">\r\n              {/* Inputs section  */}\r\n              <div className=\"flex-grow\">\r\n                {/* name */}\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"name\"\r\n                    className=\"block text-sm/6 font-medium\"\r\n                  >\r\n                    {t(\"createNewUserModal.form.labels.name\")}\r\n                  </label>\r\n                  <div className=\"mt-2\">\r\n                    <input\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      type=\"text\"\r\n                      required\r\n                      autoComplete=\"name\"\r\n                      className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                      value={createUserData.name}\r\n                      onChange={(event) =>\r\n                        setCreateUserData((prev) => ({\r\n                          ...prev,\r\n                          name: event.target.value,\r\n                        }))\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* surname */}\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"surname\"\r\n                    className=\"block text-sm/6 font-medium\"\r\n                  >\r\n                    {t(\"createNewUserModal.form.labels.surname\")}\r\n                  </label>\r\n                  <div className=\"mt-2\">\r\n                    <input\r\n                      id=\"surname\"\r\n                      name=\"surname\"\r\n                      type=\"text\"\r\n                      required\r\n                      autoComplete=\"surname\"\r\n                      value={createUserData.surname}\r\n                      className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                      onChange={(event) =>\r\n                        setCreateUserData((prev) => ({\r\n                          ...prev,\r\n                          surname: event.target.value,\r\n                        }))\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* email */}\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"email\"\r\n                    className=\"block text-sm/6 font-medium\"\r\n                  >\r\n                    {t(\"createNewUserModal.form.labels.email\")}\r\n                  </label>\r\n                  <div className=\"mt-2\">\r\n                    <input\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      required\r\n                      autoComplete=\"email\"\r\n                      className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                      value={createUserData.emailAddress}\r\n                      onChange={(event) =>\r\n                        setCreateUserData((prev) => ({\r\n                          ...prev,\r\n                          emailAddress: event.target.value,\r\n                        }))\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* user name */}\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"user-name\"\r\n                    className=\"block text-sm/6 font-medium\"\r\n                  >\r\n                    {t(\"createNewUserModal.form.labels.userName\")}\r\n                  </label>\r\n                  <div className=\"mt-2\">\r\n                    <input\r\n                      id=\"user-name\"\r\n                      name=\"user-name\"\r\n                      type=\"text\"\r\n                      required\r\n                      autoComplete=\"user-name\"\r\n                      className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                      value={createUserData.userName}\r\n                      onChange={(event) =>\r\n                        setCreateUserData((prev) => ({\r\n                          ...prev,\r\n                          userName: event.target.value,\r\n                        }))\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* password */}\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"Password\"\r\n                    className=\"block text-sm/6 font-medium\"\r\n                  >\r\n                    {t(\"createNewUserModal.form.labels.password\")}\r\n                  </label>\r\n                  <div className=\"mt-2\">\r\n                    <input\r\n                      id=\"Password\"\r\n                      name=\"Password\"\r\n                      type=\"text\"\r\n                      required\r\n                      autoComplete=\"Password\"\r\n                      className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                      value={createUserData.password}\r\n                      onChange={(event) =>\r\n                        setCreateUserData((prev) => ({\r\n                          ...prev,\r\n                          password: event.target.value,\r\n                        }))\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* Roles Section */}\r\n              <div className=\"mt-6\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                    {t(\"createNewUserModal.form.roles.label\")}\r\n                  </h3>\r\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                    {createUserData.roleNames.length} {t(\"createNewUserModal.form.roles.of\")} {authStore.roles?.length || 0} {t(\"createNewUserModal.form.roles.selected\")} \r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Quick Actions */}\r\n                <div className=\"flex gap-2 mb-4\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setCreateUserData(prev => ({ ...prev, roleNames: authStore.roles?.map(r => r.normalizedName) || [] }))}\r\n                    className=\"px-3 py-1.5 text-xs font-medium text-blue-600 bg-blue-50 border border-blue-200 rounded-md hover:bg-blue-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1 transition-colors duration-200\"\r\n                  >\r\n                    {t(\"createNewUserModal.form.roles.SelectAll\")}\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setCreateUserData(prev => ({ ...prev, roleNames: [] }))}\r\n                    className=\"px-3 py-1.5 text-xs font-medium text-gray-600 bg-gray-50 border border-gray-200 rounded-md hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-1 transition-colors duration-200\"\r\n                  >\r\n                    {t(\"createNewUserModal.form.roles.ClearAll\")}\r\n                  </button>\r\n                </div>\r\n\r\n                {/* Roles List */}\r\n                <div className=\"bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-700 rounded-lg p-4 max-h-96 overflow-y-auto\">\r\n                  {authStore.roles && displayRoles()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button\r\n              className=\"flex w-full md:w-2/12 justify-center rounded-md bg-blue-600 px-3 py-1.5 text-sm/6 font-semibold text-white shadow-sm hover:bg-blue-500 hover:cursor-pointer focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 mt-3\"\r\n              type=\"submit\"\r\n            >\r\n              {userStore.loading ? (\r\n                <FontAwesomeIcon\r\n                  className=\"text-xl font-bold\"\r\n                  icon={faSpinner}\r\n                  spin\r\n                />\r\n              ) : (\r\n                t(\"createNewUserModal.form.submitButton.default\")\r\n              )}\r\n            </button>\r\n          </form>\r\n        </div>\r\n  );\r\n});\r\n\r\nexport default CreateNewUserModal;","import { Modal } from \"flowbite-react\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport authStore from \"../../../stores/AuthStore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSpinner,\r\n  faTriangleExclamation,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTranslation } from \"react-i18next\"; // Assuming i18next for localization\r\nimport createModal from \"../../../stores/CreateModal\";\r\nimport VerifyAction from \"../../verifyAction/VerifyAction\";\r\n\r\nconst EditRoleModal = observer(\r\n  ({ close, roles, index, element, getAllRoles }) => {\r\n    const { t } = useTranslation(); // Hook to access translations\r\n    \r\n    const [roleData, setRoleData] = useState(roles[index].grantedPermissions);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    async function getAllPermissions() {\r\n      setLoading(true);\r\n      await authStore.getAllPermissions(authStore.token);\r\n      setLoading(false);\r\n    }\r\n\r\n    async function deleteRole(id) {\r\n      setLoading(true);\r\n      await authStore.deleteRole(id, authStore.token);\r\n      close();\r\n    }\r\n\r\n    function handelPermissions(e) {\r\n      const { value, checked } = e.target;\r\n      setRoleData((prev) =>\r\n        checked ? [...prev, value] : prev.filter((role) => role !== value)\r\n      );\r\n    }\r\n\r\n    function displayPermissions() {\r\n      if (!authStore.allPermissions) {\r\n        return [];\r\n      }\r\n\r\n      // Group permissions by category if they have one, otherwise show as \"General\"\r\n      const groupedPermissions = authStore.allPermissions.reduce((acc, permission) => {\r\n        const category = permission.category || t(\"editRoleModal.permissions.general\");\r\n        if (!acc[category]) {\r\n          acc[category] = [];\r\n        }\r\n        acc[category].push(permission);\r\n        return acc;\r\n      }, {});\r\n\r\n      return Object.entries(groupedPermissions).map(([category, permissions]) => (\r\n        <div key={category} className=\"mb-6\">\r\n          <h4 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3 pb-2 border-b border-gray-200 dark:border-gray-600\">\r\n            {category}\r\n          </h4>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n            {permissions.map((permission, index) => (\r\n              <div \r\n                key={`${category}-${index}`} \r\n                className=\"flex items-center p-3 bg-gray-50 dark:bg-gray-800 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200\"\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={roleData.includes(permission.name)}\r\n                  value={permission.name}\r\n                  id={`${category}-${permission.name}`}\r\n                  onChange={handelPermissions}\r\n                  className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\r\n                />\r\n                <label \r\n                  className=\"ms-3 text-sm font-medium text-gray-700 dark:text-gray-300 cursor-pointer flex-1\"\r\n                  htmlFor={`${category}-${permission.name}`}\r\n                >\r\n                  <div className=\"font-medium\">{permission.displayName || permission.name}</div>\r\n                  {permission.description && (\r\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                      {permission.description}\r\n                    </div>\r\n                  )}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ));\r\n    }\r\n\r\n    async function handleEditRole(e, roles, i) {\r\n      e.preventDefault();\r\n      try {\r\n        setLoading(true);\r\n        authStore.doneMsg = null;\r\n        authStore.error = null;\r\n\r\n        const form = e.target;\r\n        const updatedUser = {\r\n          name: form.name.value,\r\n          displayName: form.displayName.value,\r\n          description: form.description.value,\r\n          grantedPermissions: roleData,\r\n        };\r\n\r\n        roles[i] = {\r\n          ...roles[i],\r\n          ...updatedUser,\r\n        };\r\n\r\n        await authStore.editRole(roles[i], authStore.token);\r\n        authStore.doneMsg = t(\"editRoleModal.alerts.success\");\r\n      } catch (error) {\r\n        authStore.error = t(\"editRoleModal.alerts.error\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    function closeModal() {\r\n      close();\r\n      authStore.doneMsg = null;\r\n      authStore.error = null;\r\n    }\r\n\r\n    useEffect(() => {\r\n      getAllPermissions();\r\n    }, []);\r\n\r\n    return (\r\n      <Modal\r\n        size=\"md\"\r\n        popup\r\n        show={true}\r\n        onClose={() => {\r\n          closeModal();\r\n        }}\r\n        className=\"nav\"\r\n      >\r\n        <Modal.Header>{t(\"editRoleModal.header\", { name: element.name })}</Modal.Header>\r\n        <Modal.Body className=\"min-h-[78vh]\">\r\n          <div className=\"handel-alerts\">\r\n            <div\r\n              className={`font-bold text-red-600 mt-3 ${\r\n                authStore.error ? \"\" : \"hidden\"\r\n              } text-center`}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faTriangleExclamation}\r\n                beat\r\n                style={{ color: \"#c70000\" }}\r\n              />{\" \"}\r\n              {authStore.error}\r\n            </div>\r\n            <div\r\n              className={`font-bold ${\r\n                authStore.doneMsg ? \"\" : \"hidden\"\r\n              } text-green-600 mt-3 text-center`}\r\n            >\r\n              {authStore.doneMsg && authStore.doneMsg}\r\n            </div>\r\n          </div>\r\n          <form\r\n            data-testid=\"edit-role-form\"\r\n            onSubmit={(e) => handleEditRole(e, roles, index)}\r\n          >\r\n            {authStore.allPermissions ? (\r\n              <>\r\n                {/* role-name */}\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"role-name\"\r\n                    className=\"block text-sm/6 font-medium\"\r\n                  >\r\n                    {t(\"editRoleModal.form.labels.roleName\")}\r\n                  </label>\r\n                  <div className=\"mt-2\">\r\n                    <input\r\n                      data-testid=\"name-input\"\r\n                      id=\"role-name\"\r\n                      name=\"name\"\r\n                      type=\"text\"\r\n                      required\r\n                      autoComplete=\"role-name\"\r\n                      className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                      defaultValue={element.name}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* display-name */}\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"display-name\"\r\n                    className=\"block text-sm/6 font-medium\"\r\n                  >\r\n                    {t(\"editRoleModal.form.labels.displayName\")}\r\n                  </label>\r\n                  <div className=\"mt-2\">\r\n                    <input\r\n                      data-testid=\"displayName-input\"\r\n                      id=\"display-name\"\r\n                      name=\"displayName\"\r\n                      type=\"text\"\r\n                      required\r\n                      autoComplete=\"display-name\"\r\n                      className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                      defaultValue={element.displayName}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* description */}\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"description\"\r\n                    className=\"block text-sm/6 font-medium\"\r\n                  >\r\n                    {t(\"editRoleModal.form.labels.description\")}\r\n                  </label>\r\n                  <div className=\"mt-2\">\r\n                    <input\r\n                      data-testid=\"description-input\"\r\n                      id=\"description\"\r\n                      name=\"description\"\r\n                      type=\"text\"\r\n                      required\r\n                      autoComplete=\"description\"\r\n                      className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                      defaultValue={element.description}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Permissions Section */}\r\n                <div className=\"mt-6\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                      {t(\"editRoleModal.permissions.header\")}\r\n                    </h3>\r\n                    <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                      {t(\"editRoleModal.permissions.selected\", {\r\n                        count: roleData.length,\r\n                        total: authStore.allPermissions?.length || 0,\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Quick Actions */}\r\n                  <div className=\"flex gap-2 mb-4\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => setRoleData(authStore.allPermissions?.map(p => p.name) || [])}\r\n                      className=\"px-3 py-1.5 text-xs font-medium text-blue-600 bg-blue-50 border border-blue-200 rounded-md hover:bg-blue-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1 transition-colors duration-200\"\r\n                    >\r\n                      {t(\"editRoleModal.permissions.selectAll\")}\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => setRoleData([])}\r\n                      className=\"px-3 py-1.5 text-xs font-medium text-gray-600 bg-gray-50 border border-gray-200 rounded-md hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-1 transition-colors duration-200\"\r\n                    >\r\n                      {t(\"editRoleModal.permissions.clearAll\")}\r\n                    </button>\r\n                  </div>\r\n\r\n                  {/* Permissions List */}\r\n                  <div className=\"bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-700 rounded-lg p-4 max-h-96 overflow-y-auto\">\r\n                    {displayPermissions()}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* btns start */}\r\n                {loading ? (\r\n                  <FontAwesomeIcon\r\n                    className=\"text-xl font-bold\"\r\n                    icon={faSpinner}\r\n                    spin\r\n                  />\r\n                ) : (\r\n                  <div className=\"btns\">\r\n                    {/* done btn */}\r\n                    <button\r\n                      className=\"flex w-full justify-center rounded-md bg-blue-600 px-3 py-1.5 text-sm/6 font-semibold text-white shadow-sm hover:bg-blue-500 hover:cursor-pointer focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 mt-3\"\r\n                      type=\"submit\"\r\n                    >\r\n                      {t(\"editRoleModal.form.buttons.done\")}\r\n                    </button>\r\n                    {/* delete btn */}\r\n                    <button\r\n                      className=\"flex w-full justify-center rounded-md bg-red-600 px-3 py-1.5 text-sm/6 font-semibold text-white shadow-sm hover:bg-red-500 hover:cursor-pointer focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 mt-3\"\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        createModal.open(\r\n                        <VerifyAction\r\n                          close={() => createModal.close()}\r\n                          action={\"delete\"}\r\n                          actionFunc={(id) => deleteRole(id)}\r\n                          id={element.id}\r\n                          token={authStore.token}\r\n                          afterActionFunc={(type) => getAllRoles(type)}\r\n                        />\r\n                      );\r\n                        \r\n                      }}\r\n                    >\r\n                      {t(\"editRoleModal.form.buttons.delete\")}\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                {/* btns end */}\r\n              </>\r\n            ) : (\r\n              <FontAwesomeIcon\r\n                className=\"text-xl font-bold\"\r\n                icon={faSpinner}\r\n                spin\r\n              />\r\n            )}\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditRoleModal;","import {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n} from \"flowbite-react\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport authStore from \"../../../stores/AuthStore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPenToSquare, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport createModal from \"../../../stores/CreateModal\";\r\nimport EditRoleModal from \"./EditRoleModal\";\r\nimport { useTranslation } from \"react-i18next\"; // Assuming i18next for localization\r\n\r\nconst UsersRolesModal = observer((prop) => {\r\n  const { t } = useTranslation(); // Hook to access translations\r\n\r\n  async function getAllRoles() {\r\n    await authStore.getAllRoles(authStore.token);\r\n  }\r\n\r\n  function displayRoles(roles) {\r\n    return roles.map((e, i) => {\r\n      return (\r\n        <TableRow key={e.id} className=\"flex justify-between w-full\">\r\n          <TableCell className=\"col-12 whitespace-nowrap font-medium text-gray-900 dark:text-white\">\r\n            {e.name}\r\n          </TableCell>\r\n          <TableCell className=\"whitespace-nowrap font-medium text-gray-900 dark:text-white\">\r\n            <Button\r\n              onClick={() =>\r\n                createModal.open(\r\n                  <EditRoleModal\r\n                    close={() => createModal.close()}\r\n                    roles={roles}\r\n                    index={i}\r\n                    element={e}\r\n                    getAllRoles={getAllRoles}\r\n                  />\r\n                )\r\n              }\r\n              className=\"my-3 modal-btn\"\r\n            >\r\n              <FontAwesomeIcon icon={faPenToSquare} />\r\n            </Button>\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllRoles();\r\n  }, []);\r\n\r\n  return (<div className=\"display-roles\">\r\n          {authStore.allRoles ? (\r\n            <div className=\"overflow-x-auto\">\r\n              <Table hoverable>\r\n                <TableBody className=\"divide-y\">\r\n                  <TableRow>\r\n                    <TableCell>{t(\"usersRolesModal.table.headers.roleName\")}</TableCell>\r\n                  </TableRow>\r\n                  {displayRoles(authStore.allRoles)}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          ) : (\r\n            <FontAwesomeIcon\r\n              data-testid=\"loading\"\r\n              className=\"text-xl font-bold\"\r\n              icon={faSpinner}\r\n              spin\r\n            />\r\n          )}\r\n        </div>\r\n  );\r\n});\r\n\r\nexport default UsersRolesModal;","import { observer } from \"mobx-react\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport authStore from \"../../../stores/AuthStore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSpinner,\r\n  faTriangleExclamation,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst CreateNewRoleModal = observer(() => {\r\n  const { t } = useTranslation(); \r\n\r\n  console.log(\"from create new role\");\r\n  \r\n  const initialFormValue = {\r\n    name: \"\",\r\n    displayName: \"\",\r\n    description: \"\",\r\n    grantedPermissions: [],\r\n  };\r\n  const [roleData, setRoleData] = useState(initialFormValue);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function getAllPermissions() {\r\n    setLoading(true);\r\n    await authStore.getAllPermissions(authStore.token);\r\n    setLoading(false);\r\n  }\r\n\r\n  function handelPermissions(e) {\r\n    const { value, checked } = e.target;\r\n    setRoleData((prev) => ({\r\n      ...prev,\r\n      grantedPermissions: checked\r\n        ? [...prev.grantedPermissions, value]\r\n        : prev.grantedPermissions.filter((role) => role !== value),\r\n    }));\r\n  }\r\n\r\n  function displayPermissions() {\r\n    // Group permissions by category if they have one, otherwise show as \"General\"\r\n    const groupedPermissions = authStore.allPermissions.reduce((acc, permission) => {\r\n      const category = permission.category || t(\"createNewRoleModal.permissions.general\");\r\n      if (!acc[category]) {\r\n        acc[category] = [];\r\n      }\r\n      acc[category].push(permission);\r\n      return acc;\r\n    }, {});\r\n\r\n    return Object.entries(groupedPermissions).map(([category, permissions]) => (\r\n      <div key={category} className=\"mb-6\">\r\n        <h4 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3 pb-2 border-b border-gray-200 dark:border-gray-600\">\r\n          {category}\r\n        </h4>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n          {permissions.map((permission, index) => (\r\n            <div \r\n              key={`${category}-${index}`} \r\n              className=\"flex items-center p-3 bg-gray-50 dark:bg-gray-800 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200\"\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={roleData.grantedPermissions.includes(permission.name)}\r\n                value={permission.name}\r\n                id={`${category}-${permission.name}`}\r\n                onChange={handelPermissions}\r\n                className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\r\n              />\r\n              <label \r\n                className=\"ms-3 text-sm font-medium text-gray-700 dark:text-gray-300 cursor-pointer flex-1\"\r\n                htmlFor={`${category}-${permission.name}`}\r\n              >\r\n                <div className=\"font-medium\">{permission.displayName || permission.name}</div>\r\n                {permission.description && (\r\n                  <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                    {permission.description}\r\n                  </div>\r\n                )}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  async function createNewRole(data) {\r\n    setLoading(true);\r\n    await authStore.createNewRole(data, authStore.token);\r\n    setLoading(false);\r\n  }\r\n\r\n  function handleCreateRole(e) {\r\n    e.preventDefault();\r\n    authStore.doneMsg = null;\r\n    authStore.error = null;\r\n\r\n    createNewRole(roleData);\r\n\r\n    authStore.doneMsg ? (authStore.error = null) : (authStore.doneMsg = null);\r\n    setRoleData(initialFormValue);\r\n  }\r\n\r\n  function closeModal() {\r\n    authStore.doneMsg = null;\r\n    authStore.error = null;\r\n  }\r\n\r\n  useEffect(()=>{\r\n    return () => {\r\n      closeModal();\r\n  \t};\r\n  },[])\r\n\r\n  const displayRoleInf = useMemo(() => {\r\n    return (\r\n      <>\r\n        {/* role-name */}\r\n        <div className=\"mt-2\">\r\n          <label htmlFor=\"role-name\" className=\"block text-sm/6 font-medium\">\r\n            {t(\"createNewRoleModal.form.labels.roleName\")}\r\n          </label>\r\n          <div className=\"mt-2\">\r\n            <input\r\n              id=\"role-name\"\r\n              name=\"role-name\"\r\n              type=\"text\"\r\n              required\r\n              autoComplete=\"role-name\"\r\n              className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n              value={roleData.name}\r\n              onChange={(event) =>\r\n                setRoleData((prev) => ({\r\n                  ...prev,\r\n                  name: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* display-name */}\r\n        <div className=\"mt-2\">\r\n          <label htmlFor=\"display-name\" className=\"block text-sm/6 font-medium\">\r\n            {t(\"createNewRoleModal.form.labels.displayName\")}\r\n          </label>\r\n          <div className=\"mt-2\">\r\n            <input\r\n              id=\"display-name\"\r\n              name=\"display-name\"\r\n              type=\"text\"\r\n              required\r\n              autoComplete=\"display-name\"\r\n              className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n              value={roleData.displayName}\r\n              onChange={(event) =>\r\n                setRoleData((prev) => ({\r\n                  ...prev,\r\n                  displayName: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* description */}\r\n        <div className=\"mt-2\">\r\n          <label htmlFor=\"description\" className=\"block text-sm/6 font-medium\">\r\n            {t(\"createNewRoleModal.form.labels.description\")}\r\n          </label>\r\n          <div className=\"mt-2\">\r\n            <input\r\n              id=\"description\"\r\n              name=\"description\"\r\n              type=\"text\"\r\n              required\r\n              autoComplete=\"description\"\r\n              className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n              value={roleData.description}\r\n              onChange={(event) =>\r\n                setRoleData((prev) => ({\r\n                  ...prev,\r\n                  description: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }, [roleData.description, roleData.displayName, roleData.name]);\r\n\r\n  useEffect(() => {\r\n    getAllPermissions();\r\n  }, []);\r\n\r\n  return (\r\n<div className=\"w-full\">\r\n  <div className=\"handel-actions\">\r\n    <div\r\n      className={`font-bold text-red-600 mt-3 ${\r\n        authStore.error ? \"\" : \"hidden\"\r\n      } text-center`}\r\n    >\r\n      <FontAwesomeIcon\r\n        icon={faTriangleExclamation}\r\n        beat\r\n        style={{ color: \"#c70000\" }}\r\n      />{\" \"}\r\n      {authStore.error}\r\n    </div>\r\n    <div\r\n      className={`font-bold ${\r\n        authStore.doneMsg ? \"\" : \"hidden\"\r\n      } text-green-600 mt-3 text-center`}\r\n    >\r\n      {authStore.doneMsg && authStore.doneMsg}\r\n    </div>\r\n  </div>\r\n  {authStore.allPermissions ? (\r\n    <form className=\"px-3\" onSubmit={(e) => handleCreateRole(e)}>\r\n      <h3 className=\"text-xl font-medium text-gray-900 dark:text-white\">\r\n            {t(\"createNewRoleModal.header\")}\r\n      </h3>\r\n      <div className=\"flex justify-between items-center flex-col md:flex-row md:gap-[100px]\">\r\n      {/* role information */}\r\n      <div className=\"flex-grow\">{displayRoleInf}</div>\r\n      \r\n      {/* Permissions Section */}\r\n      <div className=\"mt-6\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n            {t(\"createNewRoleModal.permissions.header\")}\r\n          </h3>\r\n          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n            {t(\"createNewRoleModal.permissions.selected\", { count: roleData.grantedPermissions.length, total: authStore.allPermissions?.length || 0 })}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Quick Actions */}\r\n        <div className=\"flex gap-2 mb-4\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setRoleData(prev => ({ ...prev, grantedPermissions: authStore.allPermissions?.map(p => p.name) || [] }))}\r\n            className=\"px-3 py-1.5 text-xs font-medium text-blue-600 bg-blue-50 border border-blue-200 rounded-md hover:bg-blue-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1 transition-colors duration-200\"\r\n          >\r\n            {t(\"createNewRoleModal.permissions.selectAll\")}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setRoleData(prev => ({ ...prev, grantedPermissions: [] }))}\r\n            className=\"px-3 py-1.5 text-xs font-medium text-gray-600 bg-gray-50 border border-gray-200 rounded-md hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-1 transition-colors duration-200\"\r\n          >\r\n            {t(\"createNewRoleModal.permissions.clearAll\")}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Permissions List */}\r\n        <div className=\"bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-700 rounded-lg p-4 max-h-96 overflow-y-auto\">\r\n          {displayPermissions()}\r\n        </div>\r\n      </div>\r\n\r\n      </div>\r\n\r\n      <button\r\n        className=\"flex w-full md:w-2/12 justify-center rounded-md bg-blue-600 px-3 py-1.5 text-sm/6 font-semibold text-white shadow-sm hover:bg-blue-500 hover:cursor-pointer focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 mt-3\"\r\n        type=\"submit\"\r\n      >\r\n        {loading ? (\r\n          <FontAwesomeIcon\r\n            className=\"text-xl font-bold\"\r\n            icon={faSpinner}\r\n            spin\r\n          />\r\n        ) : (\r\n          t(\"createNewRoleModal.form.submitButton.default\")\r\n        )}\r\n      </button>\r\n    </form>\r\n  ) : (\r\n    <FontAwesomeIcon icon={faSpinner} />\r\n  )}\r\n</div>\r\n  );\r\n});\r\n\r\nexport default CreateNewRoleModal;","import {\r\n  Modal,\r\n  Sidebar,\r\n  SidebarCollapse,\r\n  SidebarItem,\r\n  SidebarItemGroup,\r\n  SidebarItems,\r\n} from \"flowbite-react\";\r\nimport { CiRoute } from \"react-icons/ci\";\r\nimport { FaUsers } from \"react-icons/fa\";\r\n\r\nimport { observer } from \"mobx-react\";\r\nimport ProtectedRoute from \"../../protected/ProtectedRoute\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useState } from \"react\";\r\nimport UsersModal from \"../usersModals/UsersModal\";\r\nimport CreateNewUserModal from \"../usersModals/CreateNewUserModal\";\r\nimport UsersRolesModal from \"../rolesModals/UsersRolesModal\";\r\nimport CreateNewRoleModal from \"../rolesModals/CreateNewRoleModal\";\r\n\r\nconst Management = observer((prop) => {\r\n  const { t } = useTranslation();\r\n  const [activeSection, setActiveSection] = useState(\"Users\");\r\n\r\n  const sectionComponents = {\r\n    Users: <UsersModal />,\r\n    Create_New_User: <CreateNewUserModal />,\r\n    Roles: <UsersRolesModal />,\r\n    Create_New_Role: <CreateNewRoleModal />,\r\n  };\r\n\r\n  return (\r\n    <ProtectedRoute permission={[\"Pages.FloodWarnings\", \"Pages.Tenants\"]}>\r\n      <Modal size=\"max-w-xl\" show={true} onClose={prop.close} className=\"nav\">\r\n        <Modal.Header>{t(\"usersModal.header\")}</Modal.Header>\r\n        <Modal.Body className=\"min-h-[78vh]\">\r\n          <div className=\"flex flex-col md:flex-row\">\r\n            <div>\r\n              <Sidebar aria-label={t(\"management.sidebar.ariaLabel\")} className=\"w-full\">\r\n                <SidebarItems>\r\n                  <SidebarItemGroup>\r\n                    <SidebarCollapse icon={FaUsers} label={t(\"management.sidebar.userManagement\")} open={true}>\r\n                      <SidebarItem href=\"#\" onClick={() => setActiveSection(\"Users\")}>\r\n                        {t(\"management.sidebar.users\")}\r\n                      </SidebarItem>\r\n                      <SidebarItem href=\"#\" onClick={() => setActiveSection(\"Create_New_User\")}>\r\n                        {t(\"management.sidebar.createNewUser\")}\r\n                      </SidebarItem>\r\n                    </SidebarCollapse>\r\n                    <SidebarCollapse icon={CiRoute} label={t(\"management.sidebar.rolesManagement\")}>\r\n                      <SidebarItem href=\"#\" onClick={() => setActiveSection(\"Roles\")}>\r\n                        {t(\"management.sidebar.roles\")}\r\n                      </SidebarItem>\r\n                      <SidebarItem href=\"#\" onClick={() => setActiveSection(\"Create_New_Role\")}>\r\n                        {t(\"management.sidebar.createNewRole\")}\r\n                      </SidebarItem>\r\n                    </SidebarCollapse>\r\n                  </SidebarItemGroup>\r\n                </SidebarItems>\r\n              </Sidebar>\r\n            </div>\r\n            <div className=\"overflow-x-auto p-3 flex-grow\">\r\n              {sectionComponents[activeSection]}\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </ProtectedRoute>\r\n  );\r\n});\r\n\r\nexport default Management;\r\n","import { observer } from \"mobx-react\";\r\nimport authStore from \"../../stores/AuthStore\";\r\nimport createModal from \"../../stores/CreateModal\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faRightFromBracket, faGears } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Button } from \"flowbite-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ChangePassModal from \"../modals/usersModals/ChangePassModal\";\r\nimport ProfileInfModal from \"../modals/usersModals/ProfileInfModal\";\r\nimport ResetPassModal from \"../modals/usersModals/ResetPassModal\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Management from \"../modals/management/Management\";\r\n\r\nconst Nav = observer(() => {  \r\n  const{t}= useTranslation()\r\n  \r\n  return (\r\n    <div className=\"fixed left-0 bottom-0 flex justify-center items-center w-full\" style={{zIndex:400}}>\r\n      {/* logOut start */}\r\n      <Link\r\n        to={\"/\"}\r\n        className=\"log-out fixed right-0 bottom-0 flex justify-center items-center w-12 h-12 md:w-16 md:h-16 rounded-full bg-red-400 transition ease-in-out delay-150 hover:-translate-y-1 hover:scale-110 hover:cursor-pointer hover:bg-red-500 text-white mb-3  me-3 p-3\"\r\n        onClick={() => authStore.logout()}\r\n      >\r\n        <FontAwesomeIcon className=\"text-3xl\" icon={faRightFromBracket} />\r\n      </Link>\r\n      {/* logOut end */}\r\n      <ul className=\"flex\">\r\n        <li className=\"ico relative p-3\">\r\n          <div className=\"my-icon flex justify-center items-center w-12 h-12 md:w-16 md:h-16 rounded-full hover:cursor-pointer  text-white  me-3\">\r\n            <FontAwesomeIcon className=\"text-3xl\" icon={faGears} />\r\n          </div>\r\n          <div className=\"menu-box absolute bg-white left-2/4 p-3 w-44 rounded-md \">\r\n            <h3>{t(\"List.header\")}</h3>\r\n            {/* Users Management start */}\r\n            <div className=\"users-management\">\r\n              <Button\r\n                className=\"w-full my-3 modal-btn\"\r\n                onClick={() =>\r\n                  createModal.open(\r\n                    <Management close={() => createModal.close()} />\r\n                  )\r\n                }\r\n              >\r\n                {t(\"List.usersManagement\")}\r\n              </Button>\r\n            </div>\r\n            {/* Users Management end */}\r\n\r\n            {/* reset password start */}\r\n            <div className=\"reset-password\">\r\n            <Button\r\n                className=\"w-full my-3 modal-btn\"\r\n                onClick={() =>\r\n                  createModal.open(\r\n                    <ResetPassModal close={() => createModal.close()} />\r\n                  )\r\n                }\r\n              >\r\n                {t(\"List.resetPassModal\")}\r\n              </Button>\r\n            </div>\r\n            {/* reset password end */}\r\n\r\n            {/* Profile Information start */}\r\n            <div className=\"reset-password\">\r\n              <Button\r\n                className=\"w-full my-3 modal-btn\"\r\n                onClick={() =>\r\n                  createModal.open(\r\n                    <ProfileInfModal close={() => createModal.close()} />\r\n                  )\r\n                }\r\n              >\r\n                {t(\"List.profileInformation\")}\r\n              </Button>\r\n            </div>\r\n            {/* Profile Information end */}\r\n\r\n            {/* Change Password start */}\r\n            <div className=\"change-password\">\r\n              <Button\r\n                className=\"w-full my-3 modal-btn\"\r\n                onClick={() =>\r\n                  createModal.open(\r\n                    <ChangePassModal close={() => createModal.close()} />\r\n                  )\r\n                }\r\n              >\r\n                {t(\"List.changePassword\")}\r\n              </Button>\r\n            </div>\r\n            {/* Change Password end */}\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport createModal from \"../../../stores/CreateModal\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst  ModalsDisplay = observer(()=>{  \r\n    return (\r\n      <div>\r\n        {createModal.modalStack.map((modal, index) => (\r\n          <div\r\n            key={index}\r\n            show={true}\r\n            onClose={() => createModal.close()}\r\n            popup\r\n            size=\"md\"\r\n            style={{ zIndex: 1000 + index }}\r\n          >\r\n            {modal}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n    \r\n}) \r\nexport default ModalsDisplay\r\n","import apiClient from \"./apiClient\";\r\n\r\nfunction authHeaders(token) {\r\n  return token ? { Authorization: `Bearer ${token}` } : undefined;\r\n}\r\n\r\n// Fetch stations using the new API and normalize the response shape\r\nasync function getStationsByType(\r\n  type,\r\n  city = \"\",\r\n  County = \"\",\r\n  AreaName = \"\",\r\n  Town = \"\",\r\n  Street = \"\"\r\n) {\r\n  return apiClient.get(\"api/services/app/Thing/GetAllStationsByType\", {\r\n    params: {\r\n      City: city,\r\n      Type: type,\r\n      County: County,\r\n      AreaName: AreaName,\r\n      Town: Town,\r\n      Street: Street,\r\n    },\r\n  });\r\n}\r\n\r\nasync function fetchStationById(id) {\r\n  return apiClient.get(\"/api/services/app/Thing/GetStationById\", {\r\n    params: { id },\r\n  });\r\n}\r\n\r\nasync function fetchObservations(datastreamId, start, end) {\r\n  return apiClient.get(\"/api/services/app/Observation/GetObservations\", {\r\n    params: { datastreamId, start, end },\r\n  });\r\n}\r\nasync function getWaterLevelTypes() {\r\n  return apiClient.get(\"/api/services/app/Thing/GetWaterLevelStationTypes\");\r\n}\r\nasync function getRainTypes() {\r\n  return apiClient.get(\"/api/services/app/Thing/GetRainStationTypes\");\r\n}\r\nasync function updateStation(id, data, token , type) {\r\n  return apiClient.put(\"/api/services/app/Thing/UpdateStation\", data, {\r\n    params: { id ,  type},\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      ...authHeaders(token),\r\n    },\r\n  });\r\n}\r\n\r\nasync function createStation(data, token , type) {\r\n  return apiClient.post(\"/api/services/app/Thing/CreateStation\", data, {\r\n    params: { type },\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      ...authHeaders(token),\r\n    },\r\n  });\r\n}\r\n\r\n\r\nasync function deleteStation(id, token) {\r\n  return apiClient.delete(\"/api/services/app/Thing/DeleteStation\", {\r\n    params: { id },\r\n    headers: authHeaders(token),\r\n  });\r\n}\r\n\r\nasync function fetchAllCities() {\r\n  return apiClient.get(\"/api/services/app/Location/GetAllCities\");\r\n}\r\nasync function fetchCountiesWithAreasAndStations(stationType) {\r\n  return apiClient.get(\"/api/services/app/Location/GetCountiesWithAreasAndStations\", {\r\n    params: {stationType},\r\n  });\r\n}\r\n\r\nconst stationService = {\r\n  getStationsByType,\r\n  fetchStationById,\r\n  fetchObservations,\r\n  updateStation,\r\n  deleteStation,\r\n  fetchAllCities,\r\n  createStation,\r\n  getWaterLevelTypes,\r\n  getRainTypes,\r\n  fetchCountiesWithAreasAndStations\r\n};\r\n\r\nexport default stationService;\r\n","import { makeAutoObservable } from \"mobx\";\r\nimport stationService from \"../services/stationService\";\r\n\r\nclass StationsStore {\r\n  error = null;\r\n  doneMsg = null;\r\n\r\n  // normalized state by type\r\n  stationsByType = {\r\n    WaterLevel: null,\r\n    Rain: null,\r\n    Sewer: null,\r\n    FloodNtc: null,\r\n  };\r\n\r\n  // selection state\r\n  selectedStationId = null;\r\n  selectedStationType = null;\r\n\r\n  // optional meta per type (counts, totals)\r\n  stationsMetaByType = {\r\n    WaterLevel: null,\r\n    Rain: null,\r\n    Sewer: null,\r\n    FloodNtc: null,\r\n  };\r\n\r\n  // per-type loading flags\r\n  isLoadingByType = {\r\n    WaterLevel: false,\r\n    Rain: false,\r\n    Sewer: false,\r\n    FloodNtc: null,\r\n  };\r\n\r\n  // UI flags (kept for backward compatibility with consumers)\r\n  WaterLevelIsActive = true;\r\n  RainIsActive = false;\r\n  SewerIsActive = false;\r\n  FloodNtcIsActive = false;\r\n\r\n  // Priority system for filtering\r\n  panelIsOpen = false;\r\n  panelSelectedType = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this, {}, { autoBind: true });\r\n  }\r\n\r\n  // computed getters for backward compatibility\r\n  get allWaterLevelStations() {\r\n    return this.stationsByType.WaterLevel;\r\n  }\r\n  get allRainLevelStations() {\r\n    return this.stationsByType.Rain;\r\n  }\r\n  get allSewerLevelStations() {\r\n    return this.stationsByType.Sewer;\r\n  }\r\n  get allFloodNtcStations() {\r\n    return this.stationsByType.FloodNtc;\r\n  }\r\n\r\n  // Priority-aware computed getters for map display\r\n  get effectiveWaterLevelIsActive() {\r\n    if (this.panelIsOpen) {\r\n      // Show if it's the panel's selected type OR if there's a selected WaterLevel station\r\n      return (\r\n        this.panelSelectedType === \"WaterLevel\" ||\r\n        (this.selectedStationType === \"WaterLevel\" && this.selectedStationId)\r\n      );\r\n    }\r\n    // When panel is closed, show if FilterLayer has it enabled OR if there's a selected WaterLevel station\r\n    return (\r\n      this.WaterLevelIsActive ||\r\n      (this.selectedStationType === \"WaterLevel\" && this.selectedStationId)\r\n    );\r\n  }\r\n  get effectiveRainIsActive() {\r\n    if (this.panelIsOpen) {\r\n      // Show if it's the panel's selected type OR if there's a selected Rain station\r\n      return (\r\n        this.panelSelectedType === \"Rain\" ||\r\n        (this.selectedStationType === \"Rain\" && this.selectedStationId)\r\n      );\r\n    }\r\n    // When panel is closed, show if FilterLayer has it enabled OR if there's a selected Rain station\r\n    return (\r\n      this.RainIsActive ||\r\n      (this.selectedStationType === \"Rain\" && this.selectedStationId)\r\n    );\r\n  }\r\n  get effectiveSewerIsActive() {\r\n    if (this.panelIsOpen) {\r\n      // Show if it's the panel's selected type OR if there's a selected Sewer station\r\n      return (\r\n        this.panelSelectedType === \"Sewer\" ||\r\n        (this.selectedStationType === \"Sewer\" && this.selectedStationId)\r\n      );\r\n    }\r\n    // When panel is closed, show if FilterLayer has it enabled OR if there's a selected Sewer station\r\n    return (\r\n      this.SewerIsActive ||\r\n      (this.selectedStationType === \"Sewer\" && this.selectedStationId)\r\n    );\r\n  }\r\n  get effectiveFloodNtcIsActive() {\r\n    if (this.panelIsOpen) {\r\n      // Show if it's the panel's selected type OR if there's a selected FloodNtc station\r\n      return (\r\n        this.panelSelectedType === \"FloodNtc\" ||\r\n        (this.selectedStationType === \"FloodNtc\" && this.selectedStationId)\r\n      );\r\n    }\r\n    // When panel is closed, show if FilterLayer has it enabled OR if there's a selected FloodNtc station\r\n    return (\r\n      this.FloodNtcIsActive ||\r\n      (this.selectedStationType === \"FloodNtc\" && this.selectedStationId)\r\n    );\r\n  }\r\n\r\n  // toggle UI layer visibility\r\n  togglingWaterLevel() {\r\n    this.WaterLevelIsActive = !this.WaterLevelIsActive;\r\n  }\r\n  togglingRain() {\r\n    this.RainIsActive = !this.RainIsActive;\r\n  }\r\n  togglingSewer() {\r\n    this.SewerIsActive = !this.SewerIsActive;\r\n  }\r\n  togglingFloodNtc() {\r\n    this.FloodNtcIsActive = !this.FloodNtcIsActive;\r\n  }\r\n\r\n  // Panel state management\r\n  setPanelOpen(isOpen) {\r\n    this.panelIsOpen = isOpen;\r\n  }\r\n  setPanelSelectedType(type) {\r\n    this.panelSelectedType = type;\r\n  }\r\n\r\n  // helpers\r\n  clearMessages() {\r\n    this.error = null;\r\n    this.doneMsg = null;\r\n  }\r\n\r\n  // get all stations by type\r\n  displayCityName = \"\";\r\n  async getStationsByType(type, city = \"\") {\r\n    // Check if we already have data for this type and city\r\n    if (\r\n      this.stationsByType[type] &&\r\n      this.displayCityName === city &&\r\n      !this.isLoadingByType[type]\r\n    ) {\r\n      console.log(\r\n        `[StationsStore] Data already loaded for ${type} in city ${city}, skipping API call`\r\n      );\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log(\r\n        `[StationsStore] Loading stations for type: ${type}, city: ${city}`\r\n      );\r\n      this.displayCityName = city;\r\n      this.isLoadingByType[type] = true;\r\n\r\n      const response = await stationService.getStationsByType(type, city);\r\n      console.log(`[StationsStore] API response for ${type}:`, response);\r\n\r\n      // The API returns data in result[0], which contains the stations array directly\r\n      const result = response.data?.result?.[0];\r\n      console.log(`[StationsStore] Parsed result for ${type}:`, result);\r\n\r\n      const stations = result?.stations ?? result ?? [];\r\n      console.log(\r\n        `[StationsStore] Final stations array for ${type}:`,\r\n        stations,\r\n        \"length:\",\r\n        stations.length\r\n      );\r\n\r\n      this.stationsByType[type] = stations;\r\n      this.stationsMetaByType[type] = result;\r\n\r\n      this.error = null;\r\n      console.log(\r\n        `[StationsStore] Successfully loaded ${stations.length} stations for ${type}`\r\n      );\r\n    } catch (error) {\r\n      console.error(\r\n        `[StationsStore] Error loading stations for ${type}:`,\r\n        error\r\n      );\r\n      this.error = error?.response?.data?.error?.message || error.message;\r\n      // Set empty array on error to prevent null data\r\n      this.stationsByType[type] = [];\r\n    } finally {\r\n      this.isLoadingByType[type] = false;\r\n    }\r\n  }\r\n\r\n  // selection helpers\r\n  setSelectedStation(type, id) {\r\n    this.selectedStationType = type;\r\n    this.selectedStationId = id;\r\n  }\r\n  clearSelectedStation() {\r\n    this.selectedStationType = null;\r\n    this.selectedStationId = null;\r\n  }\r\n  isSelected(type, id) {\r\n    return this.selectedStationType === type && this.selectedStationId === id;\r\n  }\r\n\r\n  // get station by id\r\n  async getStationById(id) {\r\n    return stationService.fetchStationById(id);\r\n  }\r\n\r\n  // get last observations\r\n  async getLastObservations(dataStreamId, start, end) {\r\n    return stationService.fetchObservations(dataStreamId, start, end);\r\n  }\r\n  async getWaterLevelTypes() {\r\n    return stationService.getWaterLevelTypes();\r\n  }\r\n  async getRainTypes() {\r\n    return stationService.getRainTypes();\r\n  }\r\n\r\n  // edit Station\r\n  async editStation(inf, token, id, type) {\r\n    try {\r\n      const effectiveToken = token || sessionStorage.getItem(\"token\");\r\n      await stationService.updateStation(id, inf, effectiveToken, type);\r\n      this.doneMsg = \"Change successfully\";\r\n      this.error = null;\r\n    } catch (error) {\r\n      this.error = error?.response?.data?.error?.message || error.message;\r\n    }\r\n  }\r\n  // create Station\r\n  async createStation(inf, token, type) {\r\n    try {\r\n      console.log(inf);\r\n\r\n      const effectiveToken = token || sessionStorage.getItem(\"token\");\r\n      await stationService.createStation(inf, effectiveToken, type);\r\n      this.doneMsg = \"created successfully\";\r\n      this.error = null;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  // delete Station\r\n  async deleteStation(id, token) {\r\n    try {\r\n      const effectiveToken = token || sessionStorage.getItem(\"token\");\r\n      await stationService.deleteStation(id, effectiveToken);\r\n      this.error = null;\r\n    } catch (error) {\r\n      this.error = error?.response?.data?.error?.message || error.message;\r\n    }\r\n  }\r\n\r\n  // get all cities\r\n  async getAllCities() {\r\n    return stationService.fetchAllCities();\r\n  }\r\n  // get fetch CountiesWithAreasAndStations\r\n  async fetchCountiesWithAreasAndStations(type) {\r\n    return stationService.fetchCountiesWithAreasAndStations(type);\r\n  }\r\n}\r\n\r\nconst stationsStore = new StationsStore();\r\nexport default stationsStore;","import React, { useState } from 'react';\r\nimport { Pagination, Table } from \"flowbite-react\";\r\nimport { useTranslation } from 'react-i18next'; // Assuming i18next for localization\r\n\r\nexport default function StationsTable({ selectedOption , type}) {\r\n  const { t } = useTranslation(); // Hook to access translations\r\n\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const rowsPerPage = 10;\r\n  const totalPages = Math.ceil(selectedOption?.length / rowsPerPage);\r\n  const pageData = selectedOption?.slice(\r\n    (currentPage - 1) * rowsPerPage,\r\n    currentPage * rowsPerPage\r\n  );\r\n\r\n\r\n  function timeNow(utcTime) {\r\n    const localDate = new Date(utcTime);\r\n    return localDate.toString() === \"Invalid Date\"\r\n      ? \"\"\r\n      : localDate.toLocaleString();}\r\n\r\n\r\n  return (\r\n    <div className=\"data-table overflow-x-auto\">\r\n      <Table hoverable striped>\r\n        <Table.Head>\r\n          <Table.HeadCell\r\n            // onClick={toggleSort}\r\n            className=\"cursor-pointer\"\r\n          >\r\n            {t(\"stationsTable.headers.time\")}\r\n          </Table.HeadCell>\r\n          <Table.HeadCell>\r\n            {type}\r\n          </Table.HeadCell>\r\n        </Table.Head>\r\n        <Table.Body className=\"divide-y\">\r\n          {pageData.map((obs, idx) => (\r\n            <Table.Row key={idx}>\r\n              <Table.Cell>\r\n                {timeNow(obs.obsTimestamp)}\r\n              </Table.Cell>\r\n              <Table.Cell>{obs.result}</Table.Cell>\r\n            </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n      <div className=\"w-full flex flex-wrap justify-center gap-1 mt-4 overflow-hidden\">\r\n        <Pagination\r\n          layout=\"pagination\"\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          onPageChange={(page) => setCurrentPage(page)}\r\n          previousLabel=\"\"\r\n          nextLabel=\"\"\r\n          showIcons\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}","import {\r\n  faSpinner,\r\n  faTriangleExclamation,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Modal } from \"flowbite-react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useState } from \"react\";\r\nimport stationsStore from \"../../../stores/StationsStore\";\r\nimport authStore from \"../../../stores/AuthStore\";\r\nimport { useTranslation } from \"react-i18next\"; // Assuming i18next for localization\r\n\r\nconst EditStationModal = observer(\r\n  ({ element, close, type, getStationById }) => {\r\n    console.log(type);\r\n    \r\n    const { t } = useTranslation(); // Hook to access translations\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [showMore, setShowMore] = useState(false);\r\n\r\n    async function handleEdit(e, id) {\r\n      e.preventDefault();\r\n      setLoading(true);\r\n\r\n      const form = e.target;\r\n\r\n      let updatedData = {\r\n        longitude: +form.longitude.value,\r\n        latitude: +form.latitude.value,\r\n        alertL1: +form.alertL1.value,\r\n        alertL2: +form.alertL2.value,\r\n        name: form.name.value,\r\n        // addR_E: form.addR_E.value,\r\n        // address: form.address.value,\r\n        // admicode: +form.admicode.value,\r\n        // alert: +form.alert.value,\r\n      };\r\n      if (form.alertL3?.value) updatedData = {...updatedData, alertL3: +form.alertL3.value,} \r\n\r\n      console.log(updatedData);\r\n      \r\n      await stationsStore.editStation(updatedData, authStore.token, id, type);\r\n\r\n      if (stationsStore.doneMsg) {\r\n        stationsStore.error = null;\r\n        close();\r\n        await getStationById(element.id);\r\n        stationsStore.doneMsg = null;\r\n      } else {\r\n        stationsStore.doneMsg = null;\r\n      }\r\n      setLoading(false);\r\n    }\r\n\r\n    return (\r\n      <Modal size=\"lg\" show={true} onClose={close} className=\"nav\">\r\n        <Modal.Header>\r\n          {t(\"editStationModal.header\", { name: element?.name || \"Unknown\" })}\r\n        </Modal.Header>\r\n        <Modal.Body className=\"min-h-[70vh]\">\r\n          <div className=\"handel-actions\">\r\n            <div\r\n              className={`font-bold text-red-600 mt-3 ${\r\n                stationsStore.error ? \"\" : \"hidden\"\r\n              } text-center`}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faTriangleExclamation}\r\n                beat\r\n                style={{ color: \"#c70000\" }}\r\n              />{\" \"}\r\n              {stationsStore.error}\r\n            </div>\r\n            <div\r\n              className={`font-bold ${\r\n                stationsStore.doneMsg ? \"\" : \"hidden\"\r\n              } text-green-600 mt-3 text-center`}\r\n            >\r\n              {stationsStore.doneMsg}\r\n            </div>\r\n          </div>\r\n          <form onSubmit={(e) => handleEdit(e, element.id)}>\r\n            {/* name */}\r\n            <div>\r\n              <label htmlFor=\"name\" className=\"block text-sm/6 font-medium\">\r\n                {t(\"editStationModal.form.labels.name\")}\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  required\r\n                  autoComplete=\"name\"\r\n                  className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                  defaultValue={element.name}\r\n                />\r\n              </div>\r\n            </div>\r\n            {/* longitude */}\r\n            <div>\r\n              <label\r\n                htmlFor=\"longitude\"\r\n                className=\"block text-sm/6 font-medium\"\r\n              >\r\n                {t(\"editStationModal.form.labels.longitude\")}\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"longitude\"\r\n                  name=\"longitude\"\r\n                  type=\"number\"\r\n                  required\r\n                  autoComplete=\"longitude\"\r\n                  className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                  defaultValue={element.longitude}\r\n                />\r\n              </div>\r\n            </div>\r\n            {/* latitude */}\r\n            <div>\r\n              <label htmlFor=\"latitude\" className=\"block text-sm/6 font-medium\">\r\n                {t(\"editStationModal.form.labels.latitude\")}\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"latitude\"\r\n                  name=\"latitude\"\r\n                  type=\"number\"\r\n                  required\r\n                  autoComplete=\"latitude\"\r\n                  className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                  defaultValue={element.latitude}\r\n                />\r\n              </div>\r\n            </div>\r\n            {/* alertL1 */}\r\n            <div>\r\n              <label\r\n                htmlFor=\"alertL1\"\r\n                className=\"block text-sm/6 font-medium text-red-700\"\r\n              >\r\n                {t(\"editStationModal.form.labels.alertL1\")}\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"alertL1\"\r\n                  name=\"alertL1\"\r\n                  type=\"number\"\r\n                  required\r\n                  autoComplete=\"alertL1\"\r\n                  className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                  defaultValue={element.alertL1}\r\n                />\r\n              </div>\r\n            </div>\r\n            {/* alertL2 */}\r\n            <div>\r\n              <label\r\n                htmlFor=\"alertL2\"\r\n                className=\"block text-sm/6 font-medium text-orange-500\"\r\n              >\r\n                {t(\"editStationModal.form.labels.alertL2\")}\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"alertL2\"\r\n                  name=\"alertL2\"\r\n                  type=\"number\"\r\n                  required\r\n                  autoComplete=\"alertL2\"\r\n                  className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                  defaultValue={element.alertL2}\r\n                />\r\n              </div>\r\n            </div>\r\n            {/* alertL3 */}\r\n            {typeof element.alertL3 === 'number'?(<div>\r\n              <label\r\n                htmlFor=\"alertL3\"\r\n                className=\"block text-sm/6 font-medium text-green-600\"\r\n              >\r\n                {t(\"editStationModal.form.labels.alertL3\")}\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"alertL3\"\r\n                  name=\"alertL3\"\r\n                  type=\"number\"\r\n                  required\r\n                  autoComplete=\"alertL3\"\r\n                  className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                  defaultValue={element.alertL3}\r\n                />\r\n              </div>\r\n            </div>\r\n            ):\"\"\r\n            }\r\n\r\n            <button\r\n              className={`flex w-full justify-center rounded-md ${\r\n                showMore ? \"bg-gray-600\" : \"bg-green-600\"\r\n              } px-3 py-1.5 text-sm/6 font-semibold text-white shadow-sm  ${\r\n                showMore ? \"hover:bg-gray-500\" : \"hover:bg-green-500\"\r\n              }  hover:cursor-pointer focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 mt-3`}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setShowMore((prev) => !prev);\r\n              }}\r\n            >\r\n              {showMore\r\n                ? t(\"editStationModal.form.buttons.less\")\r\n                : t(\"editStationModal.form.buttons.more\")}\r\n            </button>\r\n\r\n            <div className={`${showMore ? \"\" : \"hidden\"}`}>\r\n              {/* addR_E */}\r\n              <div>\r\n                <label htmlFor=\"addR_E\" className=\"block text-sm font-medium\">\r\n                  addR_E\r\n                </label>\r\n                <div className=\"mt-2\">\r\n                  <input\r\n                    id=\"addR_E\"\r\n                    name=\"addR_E\"\r\n                    type=\"text\"\r\n                    defaultValue={element.addR_E}\r\n                    className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 outline-gray-300 \r\n        placeholder:text-gray-400 focus:outline focus:outline-2 focus:outline-indigo-600 sm:text-sm\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* address */}\r\n              <div>\r\n                <label htmlFor=\"address\" className=\"block text-sm font-medium\">\r\n                  address\r\n                </label>\r\n                <div className=\"mt-2\">\r\n                  <input\r\n                    id=\"address\"\r\n                    name=\"address\"\r\n                    type=\"text\"\r\n                    defaultValue={element.address}\r\n                    className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 outline-gray-300 \r\n        placeholder:text-gray-400 focus:outline focus:outline-2 focus:outline-indigo-600 sm:text-sm\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* admicode */}\r\n              <div>\r\n                <label htmlFor=\"admicode\" className=\"block text-sm font-medium\">\r\n                 admicode\r\n                </label>\r\n                <div className=\"mt-2\">\r\n                  <input\r\n                    id=\"admicode\"\r\n                    name=\"admicode\"\r\n                    type=\"number\"\r\n                    defaultValue={element.admicode}\r\n                    className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 outline-gray-300 \r\n        placeholder:text-gray-400 focus:outline focus:outline-2 focus:outline-indigo-600 sm:text-sm\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* alert */}\r\n              <div>\r\n                <label\r\n                  htmlFor=\"alert\"\r\n                  className=\"block text-sm font-medium text-red-600\"\r\n                >\r\n                  alert\r\n                </label>\r\n                <div className=\"mt-2\">\r\n                  <input\r\n                    id=\"alert\"\r\n                    name=\"alert\"\r\n                    type=\"number\"\r\n                    defaultValue={element.alert}\r\n                    className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base outline outline-1 outline-gray-300 \r\n        placeholder:text-gray-400 focus:outline focus:outline-2 focus:outline-indigo-600 sm:text-sm\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* btns start */}\r\n            {loading ? (\r\n              <FontAwesomeIcon\r\n                className=\"text-xl font-bold\"\r\n                icon={faSpinner}\r\n                spin\r\n              />\r\n            ) : (\r\n              <div className=\"btns\">\r\n                {/* done btn */}\r\n                <button\r\n                  className=\"flex w-full justify-center rounded-md bg-blue-600 px-3 py-1.5 text-sm/6 font-semibold text-white shadow-sm hover:bg-blue-500 hover:cursor-pointer focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 mt-3\"\r\n                  type=\"submit\"\r\n                >\r\n                  {t(\"editStationModal.form.buttons.done\")}\r\n                </button>\r\n              </div>\r\n            )}\r\n            {/* btns end */}\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditStationModal;\r\n","import React, { useMemo } from 'react';\r\nimport authStore from '../../../stores/AuthStore';\r\nimport { Button } from 'flowbite-react';\r\nimport createModal from '../../../stores/CreateModal';\r\nimport EditStationModal from './EditStationModal';\r\nimport VerifyAction from \"../../verifyAction/VerifyAction\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ReferenceLine,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPenToSquare,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport stationsStore from '../../../stores/StationsStore';\r\nimport { useTranslation } from 'react-i18next'; // Assuming i18next for localization\r\n\r\nexport default function StationsChart({ chartData, selectedOption, waterLevelStation, type , getStationById }) {\r\n  const { t } = useTranslation(); // Hook to access translations\r\n\r\n  const minY = () => {\r\n    const results = selectedOption?.map((e) => e.result) || [];\r\n    const minNumb = results.length > 0 ? Math.min(...results) - 5 : waterLevelStation.alertL3??0 - 5;\r\n    return Math.floor(minNumb);\r\n  };\r\n\r\n  const maxY = () => {   \r\n    const maxNumb = waterLevelStation.alertL1 + 5;\r\n    return Math.floor(maxNumb);\r\n  };\r\n\r\n  const indexedChartData = useMemo(() => {\r\n    if (!chartData || chartData.length === 0) {\r\n      // fallback dummy data just to render axes & threshold lines\r\n      return [{ time: \"\", value: 0, index: 0 }];\r\n    }\r\n    return chartData.reverse().map((item, index) => ({ ...item, index }));\r\n  }, [chartData]);\r\n\r\n  return (<>\r\n      {authStore.userPermissions.includes(\"Stations.Update\") && (\r\n        <div className=\"flex gap-2\">\r\n          <Button\r\n            onClick={() =>\r\n              createModal.open(\r\n                <EditStationModal\r\n                  close={() => createModal.close()}\r\n                  element={waterLevelStation}\r\n                  type={type}\r\n                  getStationById={getStationById}\r\n                />\r\n              )\r\n            }\r\n            className=\"my-3 modal-btn\"\r\n          >\r\n            <FontAwesomeIcon icon={faPenToSquare} />\r\n          </Button>\r\n          <Button\r\n            onClick={() =>\r\n              createModal.open(\r\n                <VerifyAction\r\n                  close={() => createModal.close()}\r\n                  action={\"delete\"}\r\n                  actionFunc={(id) => stationsStore.deleteStation(id)}\r\n                  id={waterLevelStation.id}\r\n                  token={authStore.token}\r\n                  afterActionFunc={(type) => stationsStore.getStationsByType(type)}\r\n                  type={type}\r\n                />\r\n              )\r\n            }\r\n            className=\"my-3 modal-btn bg-red-600 delete-btn\"\r\n          >\r\n            <FontAwesomeIcon icon={faTrash} />\r\n          </Button>\r\n        </div>\r\n      )}\r\n    <div className='h-[50vh] overflow-y-auto'>\r\n      <ResponsiveContainer\r\n        className=\"overflow-hidden outline-none focus:outline-none border-0 focus:border-0\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n      >\r\n        <LineChart data={indexedChartData}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"time\" hide={true} />\r\n          <XAxis\r\n            // reversed={true}\r\n            dataKey=\"index\"\r\n            tick={({ x, y, payload }) => {\r\n    const timeLabel = indexedChartData[payload.value]?.time || \"\";\r\n    const lines = timeLabel.toString().split(\"\\n\"); // safe split\r\n\r\n    return (\r\n      <text x={x} y={y-4} textAnchor=\"middle\" fill=\"#666\">\r\n        {lines.map((line, i) => (\r\n          <tspan key={i} x={x} dy={i === 0 ? 0 : 15}>\r\n            {line}\r\n          </tspan>\r\n        ))}\r\n      </text>\r\n    );\r\n  }}\r\n            ticks={[\r\n              0,\r\n              Math.floor(indexedChartData.length / 2),\r\n              indexedChartData.length - 1,\r\n            ]}\r\n            tickFormatter={(index) => indexedChartData[index].time}\r\n          />\r\n          <YAxis domain={[minY, maxY]} />\r\n          <Tooltip\r\n            labelFormatter={(index) => (\r\n            <span style={{ whiteSpace: \"pre-line\" }}>\r\n              {indexedChartData[index].time}\r\n            </span>\r\n  )}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"value\"\r\n            stroke=\"#007bff\"\r\n            strokeWidth={2}\r\n            dot={false}\r\n          />\r\n\r\n          {/* threshold lines */}\r\n          <ReferenceLine\r\n            y={waterLevelStation.alertL1}\r\n            label={{\r\n              value: t(\"stationsChart.referenceLines.danger\"),\r\n              position: \"insideBottom\",\r\n              fill: \"red\",\r\n            }}\r\n            stroke=\"red\"\r\n            strokeDasharray=\"3 3\"\r\n          />\r\n          <ReferenceLine\r\n            y={waterLevelStation.alertL2}\r\n            label={{\r\n              value: t(\"stationsChart.referenceLines.warning\"),\r\n              position: \"insideBottom\",\r\n              fill: \"orange\",\r\n            }}\r\n            stroke=\"orange\"\r\n            strokeDasharray=\"3 3\"\r\n          />\r\n          <ReferenceLine\r\n            y={waterLevelStation.alertL3}\r\n            label={{\r\n              value: t(\"stationsChart.referenceLines.safe\"),\r\n              position: \"insideBottom\",\r\n              fill: \"green\",\r\n            }}\r\n            stroke=\"green\"\r\n            strokeDasharray=\"3 3\"\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  </>\r\n\r\n  );\r\n}","/**\r\n * Utility functions to format status values into human-friendly text\r\n */\r\n\r\n/**\r\n * Formats warning status into human-readable text\r\n * @param {string} status - The raw warning status value\r\n * @returns {string} - Human-friendly status text\r\n */\r\nexport const formatWarningStatus = (status) => {\r\n  if (!status) return \"-\";\r\n\r\n  const statusMap = {\r\n    // Standard format\r\n    AboveLevel_1: \"Danger\",\r\n    AboveLevel_2: \"Warning\",\r\n    AboveLevel_3: \"Normal\",\r\n    normal: \"Normal\",\r\n    Danger: \"Danger\",\r\n    Warning: \"Warning\",\r\n    Normal: \"Normal\",\r\n    unknown: \"Unknown\",\r\n\r\n    // Alternative formats that might exist\r\n    lvl_above_1: \"Level 1 Warning\",\r\n    lvl_above_2: \"Level 2 Warning\",\r\n    lvl_above_3: \"Normal\",\r\n    level_above_1: \"Level 1 Warning\",\r\n    level_above_2: \"Level 2 Warning\",\r\n    level_above_3: \"Normal\",\r\n    above_level_1: \"Level 1 Warning\",\r\n    above_level_2: \"Level 2 Warning\",\r\n    above_level_3: \"Normal\",\r\n\r\n    // Add more mappings as needed\r\n  };\r\n\r\n  return statusMap[status] || status;\r\n};\r\n\r\n/**\r\n * Gets the appropriate color class for a warning status\r\n * @param {string} status - The warning status value\r\n * @returns {string} - Tailwind CSS color class\r\n */\r\nexport const getWarningStatusColor = (status) => {\r\n  if (!status) return \"\";\r\n\r\n  const colorMap = {\r\n    AboveLevel_1: \"bg-red-100 text-red-800\",\r\n    AboveLevel_2: \"bg-yellow-100 text-yellow-800\",\r\n    AboveLevel_3: \"bg-green-100 text-green-800\",\r\n    Normal: \"bg-green-100 text-green-800\",\r\n    Danger: \"bg-red-100 text-red-800\",\r\n    Warning: \"bg-yellow-100 text-yellow-800\",\r\n    unknown: \"bg-gray-100 text-gray-800\",\r\n\r\n    // Alternative formats\r\n    lvl_above_1: \"bg-red-100 text-red-800\",\r\n    lvl_above_2: \"bg-yellow-100 text-yellow-800\",\r\n    lvl_above_3: \"bg-green-100 text-green-800\",\r\n    level_above_1: \"bg-red-100 text-red-800\",\r\n    level_above_2: \"bg-yellow-100 text-yellow-800\",\r\n    level_above_3: \"bg-green-100 text-green-800\",\r\n    above_level_1: \"bg-red-100 text-red-800\",\r\n    above_level_2: \"bg-yellow-100 text-yellow-800\",\r\n    above_level_3: \"bg-green-100 text-green-800\",\r\n  };\r\n\r\n  return colorMap[status] || \"\";\r\n};\r\n","import React from \"react\";\r\nimport { Table } from \"flowbite-react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  formatWarningStatus,\r\n  getWarningStatusColor,\r\n} from \"../../../utils/statusFormatter\";\r\n\r\nexport default function InfDataTable({ waterLevelStation, type }) {\r\n  const { t } = useTranslation();\r\n\r\n  const dataStreamType = {\r\n    Sewer: \"WaterInner\",\r\n    FloodNtc: \"WaterInner\",\r\n    WaterLevel: \"WaterLevel\",\r\n    Rain: \"Past10Min\",\r\n  };\r\n\r\n  // === time formatter ===\r\n  function timeNow(utcTime) {\r\n    const localDate = new Date(utcTime);\r\n    return localDate.toString() === \"Invalid Date\"\r\n      ? \"\"\r\n      : localDate.toLocaleString();\r\n  }\r\n\r\n  return (\r\n    <Table striped hoverable>\r\n      <Table.Head>\r\n        <Table.HeadCell colSpan={4} className=\"text-center\">\r\n          {t(\"infDataTable.header\")}\r\n        </Table.HeadCell>\r\n      </Table.Head>\r\n      <Table.Body className=\"divide-y\">\r\n        {/* row1 */}\r\n        <tr>\r\n          {/* col1 */}\r\n          <th\r\n            scope=\"row\"\r\n            className=\"w-1/4 text-center font-semibold bg-slate-200 p-4\"\r\n          >\r\n            {t(\"infDataTable.columns.state\")}\r\n          </th>\r\n          <td className=\"w-1/4 text-center p-4\">\r\n            <span\r\n              className={`px-2 py-1 rounded-full text-xs font-medium ${getWarningStatusColor(\r\n                waterLevelStation.datastreams?.filter(\r\n                  (stream) => stream.name === dataStreamType[type]\r\n                )[0]?.latestObservation?.warningStatus\r\n              )}`}\r\n            >\r\n              {formatWarningStatus(\r\n                waterLevelStation.datastreams?.filter(\r\n                  (stream) => stream.name === dataStreamType[type]\r\n                )[0]?.latestObservation?.warningStatus\r\n              )}\r\n            </span>\r\n          </td>\r\n          {/* col2 */}\r\n           <th\r\n            scope=\"row\"\r\n            className=\"w-1/4 text-center font-semibold bg-slate-200 p-4\"\r\n          >\r\n            {t(\"infDataTable.columns.stationNumber\")}\r\n          </th>\r\n          <td className=\"w-1/4 text-center p-4\">\r\n            {waterLevelStation?.stationNumber}\r\n          </td>\r\n        </tr>\r\n        {/* row2 */}\r\n        <tr>\r\n          {/* col1 */}\r\n          <th\r\n            scope=\"row\"\r\n            className=\"w-1/4 text-center font-semibold bg-slate-200 p-4\"\r\n          >\r\n            {t(\"infDataTable.columns.level1Alert\")}\r\n          </th>\r\n          <td className=\"w-1/4 text-center p-4\">\r\n            {waterLevelStation?.alertL1?.toFixed(2)}\r\n          </td>\r\n          {/* col2 */}\r\n          <th\r\n            scope=\"row\"\r\n            className=\"w-1/4 text-center font-semibold bg-slate-200 p-4\"\r\n          >\r\n            {t(\"infDataTable.columns.level2Alert\")}\r\n          </th>\r\n          <td className=\"w-1/4 text-center p-4\">\r\n            {waterLevelStation?.alertL2?.toFixed(2)}\r\n          </td>\r\n        </tr>\r\n        {/* row3 */}\r\n        <tr>\r\n          {/* Column 1: Longitude */}\r\n          <th\r\n            scope=\"row\"\r\n            className=\"w-1/4 text-center font-semibold bg-slate-200 p-4\"\r\n          >\r\n            {t(\"infDataTable.columns.longitude\")}\r\n          </th>\r\n          <td className=\"w-1/4 text-center p-4\">\r\n            {waterLevelStation?.longitude}\r\n          </td>\r\n          {/* Column 2: Level 1 Alert */}\r\n          <th\r\n            scope=\"row\"\r\n            className=\"w-1/4 text-center font-semibold bg-slate-200 p-4\"\r\n          >\r\n            {t(\"infDataTable.columns.latitude\")}\r\n          </th>\r\n          <td className=\"w-1/4 text-center p-4\">\r\n            {waterLevelStation?.latitude}\r\n          </td>\r\n          \r\n        </tr>\r\n        {/* row4 */}\r\n        <tr>\r\n          {/* col1 */}\r\n          <th\r\n            scope=\"row\"\r\n            className=\"w-1/4 text-center font-semibold bg-slate-200 p-4\"\r\n          >\r\n            {t(\"infDataTable.columns.LastValue\")}\r\n          </th>\r\n          <td className=\"w-1/4 text-center p-4 border\">\r\n            {\r\n              waterLevelStation.datastreams?.filter(\r\n                (stream) => stream.name === dataStreamType[type]\r\n              )[0]?.latestObservation?.lastResult\r\n            }\r\n          </td>\r\n          {/* col2 */}\r\n          <th\r\n            scope=\"row\"\r\n            className=\"w-1/4 text-center font-semibold bg-slate-200 p-4\"\r\n          >\r\n            {t(\"infDataTable.columns.time\")}\r\n          </th>\r\n          <td className=\"w-1/4 text-center p-4\">\r\n            {timeNow(\r\n              waterLevelStation.datastreams?.filter(\r\n                (stream) => stream.name === dataStreamType[type]\r\n              )[0]?.latestObservation?.lastTimestamp\r\n            )?.slice(0, 10)}\r\n            <br />\r\n            <br />\r\n            {timeNow(\r\n              waterLevelStation.datastreams?.filter(\r\n                (stream) => stream.name === dataStreamType[type]\r\n              )[0]?.latestObservation?.lastTimestamp\r\n            )?.slice(10, 22)}\r\n          </td>\r\n         \r\n        </tr>\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  Area,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ReferenceLine,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\n/**\r\n * CrossSectionChart\r\n * Renders a river cross-section using jsonX and jsonY arrays and overlays a horizontal\r\n * water level line. Designed for water level stations only.\r\n */\r\nexport default function CrossSectionChart({ station, waterLevelValue }) {\r\n  const { jsonX, jsonY } = station || {};\r\n\r\n  const { data, yDomain, xDomain } = useMemo(() => {\r\n    try {\r\n      const xArr = Array.isArray(jsonX) ? jsonX : JSON.parse(jsonX || \"[]\");\r\n      const yArr = Array.isArray(jsonY) ? jsonY : JSON.parse(jsonY || \"[]\");\r\n      const len = Math.min(xArr.length, yArr.length);\r\n      const arr = [];\r\n      for (let i = 0; i < len; i++) {\r\n        const x = Number(xArr[i]);\r\n        const y = Number(yArr[i]);\r\n        if (Number.isFinite(x) && Number.isFinite(y)) {\r\n          arr.push({ x, y });\r\n        }\r\n      }\r\n      // sort by distance so the shape is correct\r\n      arr.sort((a, b) => a.x - b.x);\r\n\r\n      const wl = Number.isFinite(waterLevelValue)\r\n        ? Number(waterLevelValue)\r\n        : undefined;\r\n      // values to build stacked areas: bed up to waterline, and water volume segment\r\n      const stacked = arr.map((p) => {\r\n        const bedClamped = wl !== undefined ? Math.min(p.y, wl) : p.y;\r\n        const waterSegment = wl !== undefined ? Math.max(0, wl - p.y) : 0;\r\n        return {\r\n          x: p.x,\r\n          y: p.y,\r\n          bedClamped,\r\n          waterSegment,\r\n        };\r\n      });\r\n      const yValues = arr.map((p) => p.y);\r\n      const minY = Math.min(\r\n        ...yValues,\r\n        Number.isFinite(waterLevelValue) ? waterLevelValue : Infinity\r\n      );\r\n      const maxY = Math.max(\r\n        ...yValues,\r\n        Number.isFinite(waterLevelValue) ? waterLevelValue : -Infinity\r\n      );\r\n      const padding = Math.max(1, (maxY - minY) * 0.1);\r\n      const xs = arr.map((p) => p.x);\r\n      const minX = Math.min(...xs);\r\n      const maxX = Math.max(...xs);\r\n      return {\r\n        data: stacked,\r\n        yDomain: [minY - padding, maxY + padding],\r\n        xDomain: [minX, maxX],\r\n      };\r\n    } catch (e) {\r\n      return { data: [], yDomain: [0, 1], xDomain: [0, 1] };\r\n    }\r\n  }, [jsonX, jsonY, waterLevelValue]);\r\n\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <div className=\"w-full h-[36vh] flex items-center justify-center text-sm text-gray-500\">\r\n        Cross-section data unavailable\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full md:2/3 h-[50vh]\">\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <ComposedChart\r\n          data={data}\r\n          margin={{ top: 10, right: 10, left: 10, bottom: 28 }}\r\n        >\r\n          {/* vertical-only grid to resemble subsections */}\r\n          <CartesianGrid\r\n            vertical={true}\r\n            horizontal={false}\r\n            strokeDasharray=\"2 6\"\r\n          />\r\n          <XAxis\r\n            dataKey=\"x\"\r\n            type=\"number\"\r\n            domain={xDomain}\r\n            tick={{ fontSize: 12 }}\r\n            label={{ value: \"Distance\", position: \"insideBottom\", dy: 16 }}\r\n          />\r\n          <YAxis\r\n            domain={yDomain}\r\n            tick={{ fontSize: 12 }}\r\n            label={{ value: \"Elevation\", angle: -90, position: \"insideLeft\" }}\r\n          />\r\n          <Tooltip\r\n            formatter={(val, name) => {\r\n              if (name === \"y\") return [val, \"Elevation\"];\r\n              if (name === \"bedClamped\") return [val, \"Riverbed\"];\r\n              if (name === \"waterSegment\") return [val, \"Water\"];\r\n              return [val, name];\r\n            }}\r\n            labelFormatter={(label) => `Distance: ${label}`}\r\n            content={({ active, payload, label }) => {\r\n              if (!active || !payload || !payload.length) return null;\r\n\r\n              const alertInfo = [];\r\n\r\n              if (station?.alertL1)\r\n                alertInfo.push(`Danger: ${station.alertL1}`);\r\n              if (station?.alertL2)\r\n                alertInfo.push(`Warning: ${station.alertL2}`);\r\n              if (Number.isFinite(waterLevelValue))\r\n                alertInfo.push(`Current: ${waterLevelValue}`);\r\n\r\n              return (\r\n                <div className=\"bg-white p-3 border border-gray-300 rounded shadow-lg\">\r\n                  <p className=\"font-semibold\">Distance: {label}</p>\r\n                  {payload.map((entry, index) => (\r\n                    <p key={index} style={{ color: entry.color }}>\r\n                      {entry.name}: {entry.value}\r\n                    </p>\r\n                  ))}\r\n                  {alertInfo.length > 0 && (\r\n                    <div className=\"mt-2 pt-2 border-t border-gray-200\">\r\n                      <p className=\"font-semibold text-xs\">Alert Levels:</p>\r\n                      {alertInfo.map((info, index) => (\r\n                        <p key={index} className=\"text-xs\">\r\n                          {info}\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Legend verticalAlign=\"top\" height={24} />\r\n\r\n          {/* Stacked areas: bed up to waterline + water volume */}\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey=\"bedClamped\"\r\n            stackId=\"bed\"\r\n            stroke=\"#6b7280\"\r\n            fill=\"#d6d3d1\"\r\n            name=\"Riverbed\"\r\n            fillOpacity={0.7}\r\n            isAnimationActive={false}\r\n          />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey=\"waterSegment\"\r\n            stackId=\"bed\"\r\n            stroke=\"#2563eb\"\r\n            fill=\"#60a5fa\"\r\n            name=\"Water\"\r\n            fillOpacity={0.7}\r\n            isAnimationActive={false}\r\n          />\r\n\r\n          {/* bed outline */}\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"y\"\r\n            stroke=\"#374151\"\r\n            dot={false}\r\n            name=\"Bed profile\"\r\n          />\r\n\r\n          {/* Alert level reference lines */}\r\n          {station?.alertL1 && (\r\n            <ReferenceLine\r\n              y={station.alertL1}\r\n              stroke=\"red\"\r\n              strokeWidth={2}\r\n              strokeDasharray=\"3 3\"\r\n              label={{\r\n                value: \"Danger\",\r\n                position: \"insideTopLeft\",\r\n                fill: \"red\",\r\n                fontSize: 10,\r\n                offset: 5,\r\n              }}\r\n            />\r\n          )}\r\n          {station?.alertL2 && (\r\n            <ReferenceLine\r\n              y={station.alertL2}\r\n              stroke=\"orange\"\r\n              strokeWidth={2}\r\n              strokeDasharray=\"3 3\"\r\n              label={{\r\n                value: \"Warning\",\r\n                position: \"insideTopLeft\",\r\n                fill: \"orange\",\r\n                fontSize: 10,\r\n                offset: 5,\r\n              }}\r\n            />\r\n          )}\r\n\r\n          {/* Current water level */}\r\n          {Number.isFinite(waterLevelValue) && (\r\n            <ReferenceLine\r\n              y={waterLevelValue}\r\n              stroke=\"#2563eb\"\r\n              strokeWidth={3}\r\n              strokeDasharray=\"6 3\"\r\n              label={{\r\n                value: `Current: ${waterLevelValue}`,\r\n                position: \"insideTopLeft\",\r\n                fill: \"#2563eb\",\r\n                fontSize: 10,\r\n                fontWeight: \"bold\",\r\n                offset: 5,\r\n              }}\r\n            />\r\n          )}\r\n        </ComposedChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default function WaterLevelGauge({\r\n  type,\r\n  currentValue,\r\n  alertL1,\r\n  alertL2,\r\n  maxValue = 10,\r\n}) {\r\n  const { t } = useTranslation();\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Load Google Charts\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://www.gstatic.com/charts/loader.js\";\r\n    script.onload = () => {\r\n      window.google.charts.load(\"current\", { packages: [\"gauge\"] });\r\n      window.google.charts.setOnLoadCallback(drawChart);\r\n    };\r\n    document.head.appendChild(script);\r\n\r\n    const drawChart = () => {\r\n      if (!window.google || !chartRef.current) return;\r\n\r\n      const data = window.google.visualization.arrayToDataTable([\r\n        [\"Label\", \"Value\"],\r\n        [\"Water Level\", currentValue || 0],\r\n      ]);\r\n\r\n      // Determine which alert is higher (Alert L1 vs Alert L2)\r\n      const higherAlert = Math.max(alertL1 || 0, alertL2 || 0);\r\n      const lowerAlert = Math.min(alertL1 || 0, alertL2 || 0);\r\n\r\n      const options = {\r\n        height: 250,\r\n        redFrom: higherAlert,\r\n        redTo: maxValue,\r\n        yellowFrom: lowerAlert,\r\n        yellowTo: higherAlert,\r\n        greenFrom: 0,\r\n        greenTo: lowerAlert,\r\n        minorTicks: 5,\r\n        majorTicks: [\r\n          \"0\",\r\n          (maxValue * 0.25).toFixed(1),\r\n          (maxValue * 0.5).toFixed(1),\r\n          (maxValue * 0.75).toFixed(1),\r\n          maxValue.toFixed(1),\r\n        ],\r\n        min: 0,\r\n        max: maxValue,\r\n        animation: {\r\n          duration: 1000,\r\n          easing: \"inAndOut\",\r\n        },\r\n        // Custom colors to match the image\r\n        greenColor: \"#10b981\",\r\n        yellowColor: \"#f7b519\",\r\n        redColor: \"#ef4444\",\r\n        // Font customization for the label text\r\n        fontSize: 16,\r\n      };\r\n\r\n      const chart = new window.google.visualization.Gauge(chartRef.current);\r\n      chart.draw(data, options);\r\n\r\n      // Target the specific SVG text element and modify its font-size\r\n      setTimeout(() => {\r\n        const svgText = chartRef.current.querySelector(\r\n          'text[text-anchor=\"middle\"]'\r\n        );\r\n        if (svgText) {\r\n          svgText.setAttribute(\"font-size\", \"10\"); // Change this value to your desired font size\r\n        }\r\n      }, 100);\r\n    };\r\n\r\n    return () => {\r\n      // Cleanup\r\n      if (script.parentNode) {\r\n        script.parentNode.removeChild(script);\r\n      }\r\n    };\r\n  }, [currentValue, alertL1, alertL2, maxValue]);\r\n\r\n  return (\r\n    <div className=\"w-full bg-white rounded-lg border border-gray-200 p-6\">\r\n      <div className=\"text-center mb-6\">\r\n        <h3 className=\"text-lg font-semibold text-blue-600\">\r\n          {t(\"gaugeChart.header\", { type })}\r\n        </h3>\r\n      </div>\r\n\r\n      <div className=\"flex justify-center\">\r\n        <div ref={chartRef}></div>\r\n      </div>\r\n\r\n      {/* Value display */}\r\n      <div className=\"text-center mt-4\">\r\n        <div className=\"text-2xl font-bold text-gray-800\">\r\n          {currentValue?.toFixed(1) || \"0.0\"}\r\n        </div>\r\n        <div className=\"text-sm text-gray-500\">\r\n          {t(\"gaugeChart.currentLevel\")}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Legend */}\r\n      <div className=\"flex justify-center space-x-6 mt-6 text-sm\">\r\n        <div className=\"flex items-center\">\r\n          <div className=\"w-3 h-3 bg-green-500 rounded-full mr-2\"></div>\r\n          <span className=\"text-gray-700\">\r\n            {t(\"gaugeChart.legend.normal\", {\r\n              from: 0,\r\n              to: Math.min(alertL1 || 0, alertL2 || 0).toFixed(1),\r\n            })}\r\n          </span>\r\n        </div>\r\n        <div className=\"flex items-center\">\r\n          <div className=\"w-3 h-3 bg-[#f7b519] rounded-full mr-2\"></div>\r\n          <span className=\"text-gray-700\">\r\n            {t(\"gaugeChart.legend.warning\", {\r\n              from: Math.min(alertL1 || 0, alertL2 || 0).toFixed(1),\r\n              to: Math.max(alertL1 || 0, alertL2 || 0).toFixed(1),\r\n            })}\r\n          </span>\r\n        </div>\r\n        <div className=\"flex items-center\">\r\n          <div className=\"w-3 h-3 bg-red-500 rounded-full mr-2\"></div>\r\n          <span className=\"text-gray-700\">\r\n            {t(\"gaugeChart.legend.danger\", {\r\n              from: Math.max(alertL1 || 0, alertL2 || 0).toFixed(1),\r\n              to: maxValue?.toFixed(1),\r\n            })}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { Alert, Modal, Select } from \"flowbite-react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport stationsStore from \"../../../stores/StationsStore\";\r\nimport StationsTable from \"./StationsTable\";\r\nimport StationsChart from \"./StationsChart\";\r\nimport { useTranslation } from \"react-i18next\"; // Assuming i18next for localization\r\nimport InfDataTable from \"./InfDataTable\";\r\nimport CrossSectionChart from \"./CrossSectionChart\";\r\nimport WaterLevelGauge from \"./GaugeChart\";\r\n\r\nconst StationsModal = observer(({ elementId, close, stationName, type }) => {\r\n  console.log(\"from stationModal\");\r\n  const { t } = useTranslation();\r\n  const [waterLevelStation, setWaterLevelStation] = useState();\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const [viewMode, setViewMode] = useState(\"timeseries\");\r\n\r\n  const dataStreamType = {\r\n    Sewer: \"WaterInner\",\r\n    FloodNtc: \"WaterInner\",\r\n    WaterLevel: \"WaterLevel\",\r\n    Rain: \"Past10Min\",\r\n  };\r\n\r\n  function timeNow(utcTime) {\r\n    const localDate = new Date(utcTime);\r\n    return localDate.toString() === \"Invalid Date\"\r\n      ? \"\"\r\n      : localDate.toLocaleString();\r\n  }\r\n\r\n  // chart\r\n  const chartData = useMemo(() => {\r\n    if (!selectedOption || !elementId) {\r\n      return \"\";\r\n    }\r\n    const data = selectedOption.map((obs) => ({\r\n      time: `\r\n      (${timeNow(obs.obsTimestamp).slice(0, 1).split(\",\")[0].split(/\\//g)[0]}-${\r\n        timeNow(obs.obsTimestamp).slice(2, 4).split(\",\")[0].split(/\\//g)[0]\r\n      })\\n\r\n      ${timeNow(obs.obsTimestamp).slice(10, 21)}\r\n      `,\r\n      value: obs.result,\r\n    }));\r\n\r\n    return data;\r\n  }, [selectedOption, elementId]);\r\n  //=== chart ===\r\n\r\n  async function getStationById(id) {\r\n    try {\r\n      const res = await stationsStore.getStationById(id);\r\n      setWaterLevelStation(res.data.result);\r\n      console.log(res.data.result);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function getLastObservations(elementDataStreamId, hours) {\r\n    const now = new Date();\r\n    const lastHours = new Date(\r\n      now.getTime() - hours * 60 * 60 * 1000\r\n    ).toISOString();\r\n\r\n    console.log(\"now\", now.toISOString());\r\n    console.log(\"lastHours\", lastHours);\r\n\r\n    try {\r\n      const res = await stationsStore.getLastObservations(\r\n        elementDataStreamId,\r\n        lastHours,\r\n        now.toISOString()\r\n      );\r\n      setSelectedOption(res.data.result);\r\n      console.log(\"LastObservations data\", res.data.result);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getStationById(elementId);\r\n  }, [elementId]);\r\n\r\n  const defaultLastHours = 24;\r\n  useEffect(() => {\r\n    if (waterLevelStation) {\r\n      getLastObservations(\r\n        waterLevelStation?.datastreams?.filter(\r\n          (stream) => stream.name === dataStreamType[type]\r\n        )[0]?.id,\r\n        defaultLastHours\r\n      );\r\n      setViewMode(\"timeseries\");\r\n    }\r\n  }, [waterLevelStation]);\r\n\r\n  function displayCityName(city) {\r\n    console.log(\"city\", city);\r\n\r\n    if (city === \"Unknown\" || !city) {\r\n      return \"\";\r\n    } else {\r\n      return ` - ${city}`;\r\n    }\r\n  }\r\n  return (\r\n    <Modal size=\"max-w-xl\" show={true} onClose={close} className=\"nav\">\r\n      <Modal.Header>\r\n        {t(\"stationsModal.header\", {\r\n          stationName,\r\n          station: waterLevelStation?.name,\r\n        }) + `${displayCityName(waterLevelStation?.city)}`}\r\n      </Modal.Header>\r\n      <Modal.Body className=\"min-h-[78vh]  overflow-y-auto \">\r\n        {waterLevelStation ? (\r\n          <div className=\"overflow-y-auto p-4 bg-white rounded-lg\">\r\n            <h2 className=\"text-sm mb-3\">\r\n              {t(\"stationsModal.labels.stationId\", {\r\n                id: waterLevelStation?.id,\r\n              })}\r\n            </h2>\r\n            {chartData ? (\r\n              <div className=\"flex flex-col justify-center md:flex-row gap-4\">\r\n                <div className=\"w-full md:w-1/3\">\r\n                  <Select\r\n                    onChange={(e) => {\r\n                      getLastObservations(\r\n                        waterLevelStation?.datastreams?.filter(\r\n                          (stream) => stream.name === dataStreamType[type]\r\n                        )[0]?.id,\r\n                        e.target.value\r\n                      );\r\n                    }}\r\n                    className=\"w-full\"\r\n                  >\r\n                    <option value={24}>\r\n                      {t(\"stationsModal.selectOptions.twentyFourHours\")}\r\n                    </option>\r\n                    <option value={6}>\r\n                      {t(\"stationsModal.selectOptions.sixHours\")}\r\n                    </option>\r\n                    <option value={3}>\r\n                      {t(\"stationsModal.selectOptions.threeHours\")}\r\n                    </option>\r\n                  </Select>\r\n\r\n                  {/* table */}\r\n                  <StationsTable type={type} selectedOption={selectedOption} />\r\n                  {/* === table === */}\r\n                </div>\r\n\r\n                <div className=\"w-full md:w-2/3\">\r\n                  {/* Gauge Chart Row */}\r\n                  <WaterLevelGauge\r\n                    type={type}\r\n                    currentValue={\r\n                      waterLevelStation.datastreams?.filter(\r\n                        (stream) => stream.name === dataStreamType[type]\r\n                      )[0]?.latestObservation?.lastResult\r\n                    }\r\n                    alertL1={waterLevelStation?.alertL1}\r\n                    alertL2={waterLevelStation?.alertL2}\r\n                    maxValue={\r\n                      Math.max(\r\n                        waterLevelStation?.alertL2 || 0,\r\n                        waterLevelStation?.alertL1 || 0,\r\n                        waterLevelStation.datastreams?.filter(\r\n                          (stream) => stream.name === dataStreamType[type]\r\n                        )[0]?.latestObservation?.lastResult || 0\r\n                      ) * 1.2\r\n                    }\r\n                  />\r\n                  {type === \"WaterLevel\" &&\r\n                  waterLevelStation?.jsonX &&\r\n                  waterLevelStation?.jsonY ? (\r\n                    <div className=\"flex items-center justify-end mt-5\">\r\n                      <div\r\n                        role=\"tablist\"\r\n                        aria-label=\"Chart view\"\r\n                        className=\"relative grid grid-cols-2 p-1 bg-slate-100 rounded-full shadow-sm select-none\"\r\n                      >\r\n                        <span\r\n                          className={`pointer-events-none absolute inset-y-1 w-1/2 rounded-full bg-white shadow transition-transform duration-300 ease-out ${\r\n                            viewMode === \"timeseries\"\r\n                              ? \"translate-x-0\"\r\n                              : \"translate-x-full\"\r\n                          }`}\r\n                          aria-hidden\r\n                        />\r\n                        <button\r\n                          role=\"tab\"\r\n                          aria-selected={viewMode === \"timeseries\"}\r\n                          onClick={() => setViewMode(\"timeseries\")}\r\n                          className={`relative z-10 px-3 py-1.5 text-sm font-medium rounded-full text-center transition-colors focus:outline-none ${\r\n                            viewMode === \"timeseries\"\r\n                              ? \"text-blue-700\"\r\n                              : \"text-slate-600 hover:text-slate-800\"\r\n                          }`}\r\n                        >\r\n                          Time series\r\n                        </button>\r\n                        <button\r\n                          role=\"tab\"\r\n                          aria-selected={viewMode === \"crosssection\"}\r\n                          onClick={() => setViewMode(\"crosssection\")}\r\n                          className={`relative z-10 px-3 py-1.5 text-sm font-medium rounded-full text-center transition-colors focus:outline-none ${\r\n                            viewMode === \"crosssection\"\r\n                              ? \"text-blue-700\"\r\n                              : \"text-slate-600 hover:text-slate-800\"\r\n                          }`}\r\n                        >\r\n                          River cross-section\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n\r\n                  {viewMode === \"timeseries\" && (\r\n                    <StationsChart\r\n                      chartData={chartData}\r\n                      selectedOption={selectedOption}\r\n                      waterLevelStation={waterLevelStation}\r\n                      type={type}\r\n                      getStationById={getStationById}\r\n                    />\r\n                  )}\r\n\r\n                  {type === \"WaterLevel\" &&\r\n                    viewMode === \"crosssection\" &&\r\n                    waterLevelStation?.jsonX &&\r\n                    waterLevelStation?.jsonY && (\r\n                      <CrossSectionChart\r\n                        station={waterLevelStation}\r\n                        waterLevelValue={\r\n                          waterLevelStation?.datastreams?.filter(\r\n                            (stream) => stream.name === dataStreamType[type]\r\n                          )[0]?.[0]?.latestObservation?.lastResult ??\r\n                          selectedOption?.[selectedOption?.length - 1]?.result\r\n                        }\r\n                      />\r\n                    )}\r\n                  <div className=\"station-data block lg:block w-full mt-2\">\r\n                    <InfDataTable\r\n                      waterLevelStation={waterLevelStation}\r\n                      selectedOption={selectedOption}\r\n                      type= {type}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <Alert color=\"warning\">\r\n                {t(\"stationsModal.alerts.dataUnavailable\")}\r\n              </Alert>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div className=\"min-h-[70vh] flex justify-center items-center\">\r\n            <FontAwesomeIcon icon={faSpinner} size=\"2xl\" spin />\r\n          </div>\r\n        )}\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default StationsModal;\r\n","import {faDroplet, faStopwatch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, {\r\n  useMemo,\r\n  useRef,\r\n  useImperativeHandle,\r\n  forwardRef,\r\n  useEffect,\r\n} from \"react\";\r\nimport { renderToStaticMarkup } from \"react-dom/server\";\r\nimport L from \"leaflet\";\r\nimport stationsStore from \"../../../../stores/StationsStore\";\r\nimport { Marker, Tooltip } from \"react-leaflet\";\r\nimport createModal from \"../../../../stores/CreateModal\";\r\nimport StationsModal from \"../../../modals/stationsModals/StationsModal\";\r\n\r\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  formatWarningStatus,\r\n  getWarningStatusColor,\r\n} from \"../../../../utils/statusFormatter\";\r\n\r\nconst WaterLevelsStations = observer(\r\n  forwardRef((props, ref) => {\r\n    const { t } = useTranslation();\r\n    const { allWaterLevelStations } = stationsStore;\r\n    const clusterRef = useRef();\r\n\r\n    // Add custom CSS for tooltip styling\r\n    useEffect(() => {\r\n      const style = document.createElement(\"style\");\r\n      style.textContent = `\r\n        .custom-tooltip .leaflet-tooltip {\r\n          background: transparent !important;\r\n          border: none !important;\r\n          box-shadow: none !important;\r\n          padding: 0 !important;\r\n        }\r\n        .custom-tooltip .leaflet-tooltip-top:before {\r\n          border-top-color: white !important;\r\n        }\r\n        .custom-tooltip .leaflet-tooltip-bottom:before {\r\n          border-bottom-color: white !important;\r\n        }\r\n        .custom-tooltip .leaflet-tooltip-left:before {\r\n          border-left-color: white !important;\r\n        }\r\n        .custom-tooltip .leaflet-tooltip-right:before {\r\n          border-right-color: white !important;\r\n        }\r\n      `;\r\n      document.head.appendChild(style);\r\n\r\n      return () => {\r\n        document.head.removeChild(style);\r\n      };\r\n    }, []);\r\n\r\n    // Expose declustering function to parent components\r\n    useImperativeHandle(ref, () => ({\r\n      declusterStation: (stationId) => {\r\n        if (clusterRef.current) {\r\n          const cluster = clusterRef.current;\r\n          const station = allWaterLevelStations.find((s) => s.id === stationId);\r\n          if (station && station.latitude && station.longitude) {\r\n            // If we're showing only the selected station, no need to decluster\r\n            if (\r\n              stationsStore.selectedStationType === \"WaterLevel\" &&\r\n              stationsStore.selectedStationId === stationId\r\n            ) {\r\n              return;\r\n            }\r\n\r\n            // Find the marker in the cluster and zoom to show it\r\n            const layer = cluster\r\n              .getLayers()\r\n              .find(\r\n                (layer) =>\r\n                  layer.options && layer.options.stationId === stationId\r\n              );\r\n\r\n            if (layer) {\r\n              cluster.zoomToShowLayer(layer, () => {\r\n                // Callback after zooming\r\n              });\r\n            }\r\n          }\r\n        }\r\n      },\r\n    }));\r\n\r\n    // waterLevel icon\r\n\r\n    const iconHtml = renderToStaticMarkup(\r\n      <FontAwesomeIcon\r\n        icon={faDroplet}\r\n        className=\"border border-blue-700 text-blue-800 bg-blue-300 rounded-full p-2\"\r\n      />\r\n    );\r\n\r\n    const faIcon = L.divIcon({\r\n      html: iconHtml,\r\n      className: \"fa-icon-marker\",\r\n      iconSize: [32, 32],\r\n      iconAnchor: [16, 32],\r\n    });\r\n\r\n    const selectedIcon = L.divIcon({\r\n      html: renderToStaticMarkup(\r\n        <div className=\"relative\">\r\n          <span className=\"absolute inset-0 -m-1 rounded-full bg-blue-400/40 animate-ping\"></span>\r\n          <FontAwesomeIcon\r\n            icon={faDroplet}\r\n            className=\"relative border-2 border-white ring-8 ring-blue-500 text-blue-900 bg-blue-300 rounded-full p-2 shadow-2xl\"\r\n          />\r\n        </div>\r\n      ),\r\n      className: \"fa-icon-marker-selected\",\r\n      iconSize: [48, 48],\r\n      iconAnchor: [24, 48],\r\n    });\r\n\r\n    // === time formatter ===\r\n    function timeNow(utcTime) {\r\n      const localDate = new Date(utcTime);\r\n      return localDate.toString() === \"Invalid Date\"\r\n        ? \"\"\r\n        : localDate.toLocaleString();\r\n    }\r\n\r\n    const markers = useMemo(() => {\r\n      if (!allWaterLevelStations) {\r\n        return \"\";\r\n      }\r\n\r\n      // If there's a selected station of this type, only show that station\r\n      if (\r\n        stationsStore.selectedStationType === \"WaterLevel\" &&\r\n        stationsStore.selectedStationId &&\r\n        ((!stationsStore.panelIsOpen && !stationsStore.WaterLevelIsActive) ||\r\n          (stationsStore.panelIsOpen &&\r\n            stationsStore.panelSelectedType !== \"WaterLevel\"))\r\n      ) {\r\n        const selectedStation = allWaterLevelStations.find(\r\n          (s) => s.id === stationsStore.selectedStationId\r\n        );\r\n        console.log(\"test\");\r\n\r\n        if (selectedStation) {\r\n          return (\r\n            <Marker\r\n              position={[selectedStation.latitude, selectedStation.longitude]}\r\n              icon={selectedIcon}\r\n              zIndexOffset={1000}\r\n              key={selectedStation.id}\r\n              stationId={selectedStation.id}\r\n              eventHandlers={{\r\n                click: () => {\r\n                  createModal.open(\r\n                    <StationsModal\r\n                      close={() => createModal.close()}\r\n                      elementId={selectedStation.id}\r\n                      stationName={t(\"waterLevelsStations.modal.stationName\")}\r\n                      type={\"WaterLevel\"}\r\n                    />\r\n                  );\r\n                },\r\n              }}\r\n            >\r\n              <Tooltip\r\n                direction=\"top\"\r\n                offset={[0, -15]}\r\n                opacity={1}\r\n                className=\"bg-gray-800 text-white border-0 text-xs\"\r\n              >\r\n                <div className=\"text-center\">\r\n                  <div className=\"font-semibold\">{selectedStation.name}</div>\r\n                  <div className=\"text-gray-300\">\r\n                    {selectedStation.category}\r\n                  </div>\r\n                  <div className=\"text-gray-300\">\r\n                    {timeNow(selectedStation.lastTimestamp)}\r\n                  </div>\r\n                </div>\r\n              </Tooltip>\r\n            </Marker>\r\n          );\r\n        }\r\n      }\r\n\r\n      // Otherwise, show all stations as normal\r\n      return allWaterLevelStations.map((e) => (\r\n        <Marker\r\n          position={[e.latitude, e.longitude]}\r\n          icon={\r\n            stationsStore.isSelected(\"WaterLevel\", e.id) ? selectedIcon : faIcon\r\n          }\r\n          zIndexOffset={stationsStore.isSelected(\"WaterLevel\", e.id) ? 1000 : 0}\r\n          stationId={e.id}\r\n          key={e.id}\r\n          eventHandlers={{\r\n            click: () => {\r\n              createModal.open(\r\n                <StationsModal\r\n                  close={() => createModal.close()}\r\n                  elementId={e.id}\r\n                  stationName={t(\"waterLevelsStations.modal.stationName\")}\r\n                  type={\"WaterLevel\"}\r\n                />\r\n              );\r\n            },\r\n          }}\r\n        >\r\n          <Tooltip\r\n            direction=\"top\"\r\n            offset={[0, -15]}\r\n            opacity={1}\r\n            permanent={false}\r\n            className=\"custom-tooltip\"\r\n          >\r\n            <div className=\"bg-white rounded-lg shadow-xl border border-gray-200 p-4 min-w-[280px] max-w-[320px]\">\r\n              {/* Header */}\r\n              <div className=\"flex items-center gap-2 mb-3 pb-2 border-b border-gray-100\">\r\n                <FontAwesomeIcon\r\n                  icon={faDroplet}\r\n                  className=\"text-blue-600 text-sm\"\r\n                />\r\n                <h3 className=\"font-semibold text-gray-800 text-sm truncate\">\r\n                  {e.name}\r\n                </h3>\r\n              </div>\r\n\r\n              {/* Content Grid */}\r\n              <div className=\"space-y-2\">\r\n                {/* Category */}\r\n                <div className=\"flex justify-between items-center  bg-gray-100 px-2 py-1 rounded-md\">\r\n                  <span className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">\r\n                    {t(\"waterLevelsStations.tooltip.category\")}\r\n                  </span>\r\n                  <span className=\"text-sm text-gray-700 bg-gray-100 px-2 py-1 rounded-md\">\r\n                    {e.category}\r\n                  </span>\r\n                </div>\r\n\r\n                {/* Status */}\r\n                <div\r\n                  className={`flex justify-between items-center px-2 py-1 rounded-md ${getWarningStatusColor(\r\n                    e.warningStatus\r\n                  )} `}\r\n                >\r\n                  <span className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">\r\n                    {t(\"waterLevelsStations.tooltip.status\")}\r\n                  </span>\r\n                  <div className={`text-sm`}>\r\n                    {formatWarningStatus(e.warningStatus)}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Water Level - Highlighted */}\r\n                <div className=\"bg-blue-50 rounded-lg p-3 mt-3\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm font-medium text-blue-600 uppercase \">\r\n                      {t(\"waterLevelsStations.tooltip.waterLevel\")}\r\n                    </span>\r\n                    <span className=\"text-sm font-bold text-blue-800\">\r\n                      {e.lastResult}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Last Update Time */}\r\n              <div className=\"flex justify-between items-start pt-2 border-t border-gray-100  bg-gray-100 px-2 py-1 rounded-md\">\r\n                <span className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">\r\n                  <FontAwesomeIcon icon={faStopwatch} className=\"text-2xl\"/>\r\n                </span>\r\n                <div className=\"text-right text-xs text-gray-600\">\r\n                    {timeNow(e.lastTimestamp) ? timeNow(e.lastTimestamp) : \"--\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Tooltip>\r\n        </Marker>\r\n      ));\r\n    }, [\r\n      allWaterLevelStations,\r\n      faIcon,\r\n      t,\r\n      selectedIcon,\r\n      stationsStore.effectiveWaterLevelIsActive,\r\n    ]);\r\n\r\n    // Create icon function that reacts to selection changes\r\n    const iconCreateFunction = useMemo(() => {\r\n      return (cluster) => {\r\n        // Check if this cluster contains the selected station\r\n        const hasSelectedStation =\r\n          cluster.getChildCount() > 0 &&\r\n          cluster\r\n            .getAllChildMarkers()\r\n            .some(\r\n              (marker) =>\r\n                marker.options.stationId === stationsStore.selectedStationId &&\r\n                stationsStore.selectedStationType === \"WaterLevel\"\r\n            );\r\n\r\n        // Check if cluster is expanded by comparing cluster bounds with individual markers\r\n        const isClusterExpanded = (() => {\r\n          if (cluster.getChildCount() <= 1) return false;\r\n\r\n          const clusterBounds = cluster.getBounds();\r\n\r\n          // If markers are spread out beyond a small threshold, cluster is likely expanded\r\n          const boundsWidth = clusterBounds.getEast() - clusterBounds.getWest();\r\n          const boundsHeight =\r\n            clusterBounds.getNorth() - clusterBounds.getSouth();\r\n\r\n          // Threshold: if bounds are larger than ~0.01 degrees, likely expanded\r\n          return boundsWidth > 0.01 || boundsHeight > 0.01;\r\n        })();\r\n\r\n        // Use selected station styling if cluster contains selected station\r\n        const bgColor = hasSelectedStation ? \"bg-blue-500\" : \"bg-blue-600\";\r\n        const borderClass = hasSelectedStation\r\n          ? \"border-4 border-yellow-400\"\r\n          : \"\";\r\n\r\n        return L.divIcon({\r\n          html: `<div class=\"relative\">\r\n            <div class=\"${bgColor} ${borderClass} text-white rounded-full w-10 h-10 flex items-center justify-center shadow-lg\">${cluster.getChildCount()}</div>\r\n                                      ${\r\n                                        hasSelectedStation && !isClusterExpanded\r\n                                          ? '<span class=\"absolute inset-0 -m-1 rounded-full bg-blue-400/40 animate-ping\"></span>'\r\n                                          : \"\"\r\n                                      }\r\n          </div>`,\r\n          className: \"custom-cluster-icon\",\r\n          iconSize: [40, 40],\r\n        });\r\n      };\r\n    }, []);\r\n\r\n    return (\r\n      <MarkerClusterGroup\r\n        ref={clusterRef}\r\n        iconCreateFunction={iconCreateFunction}\r\n        chunkedLoading\r\n        maxClusterRadius={30}\r\n        showCoverageOnHover={false}\r\n        spiderfyOnMaxZoom={true}\r\n      >\r\n        {markers}\r\n      </MarkerClusterGroup>\r\n    );\r\n  })\r\n);\r\n\r\nexport default WaterLevelsStations;\r\n","import { useEffect, useState, useMemo } from \"react\";\r\nimport { Tabs, Checkbox, Card } from \"flowbite-react\";\r\nimport { observer } from \"mobx-react\";\r\nimport stationsStore from \"../../../../stores/StationsStore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst FilterLayer = observer(() => {\r\n  const { t } = useTranslation();\r\n  console.log(\"from FilterLayer\");\r\n\r\n  let checkedLayersValue = {\r\n    WaterLevel: true,\r\n    Sewer: false,\r\n    Rain: false,\r\n    FloodNtc: false,\r\n  };\r\n\r\n  const storedCityValue = sessionStorage.getItem(\"storedCityValue\");\r\n\r\n  if (sessionStorage.getItem(\"checkedLayersValue\")) {\r\n    checkedLayersValue = JSON.parse(\r\n      sessionStorage.getItem(\"checkedLayersValue\")\r\n    );\r\n  }\r\n  const [checkedLayers, setCheckedLayers] = useState(checkedLayersValue);\r\n  const [activeTab, setActiveTab] = useState(\"base\");\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const storedCity = storedCityValue ? storedCityValue : \"\";\r\n\r\n  async function getStationsByType(type, city) {\r\n    await stationsStore.getStationsByType(type, city);\r\n  }\r\n\r\n  const layers = [\r\n    {\r\n      label: t(\"filterLayer.layers.waterLevel\"),\r\n      value: \"WaterLevel\",\r\n    },\r\n    {\r\n      label: t(\"filterLayer.layers.sewer\"),\r\n      value: \"Sewer\",\r\n    },\r\n    {\r\n      label: t(\"filterLayer.layers.rain\"),\r\n      value: \"Rain\",\r\n    },\r\n    {\r\n      label: t(\"filterLayer.layers.floodNtc\"),\r\n      value: \"FloodNtc\",\r\n    },\r\n  ];\r\n\r\n  // Configuration object mapping layer types to their toggle methods and active state getters\r\n  const layerConfig = useMemo(\r\n    () => ({\r\n      WaterLevel: {\r\n        toggle: () => stationsStore.togglingWaterLevel(),\r\n        isActive: () => stationsStore.WaterLevelIsActive,\r\n      },\r\n      Sewer: {\r\n        toggle: () => stationsStore.togglingSewer(),\r\n        isActive: () => stationsStore.SewerIsActive,\r\n      },\r\n      Rain: {\r\n        toggle: () => stationsStore.togglingRain(),\r\n        isActive: () => stationsStore.RainIsActive,\r\n      },\r\n      FloodNtc: {\r\n        toggle: () => stationsStore.togglingFloodNtc(),\r\n        isActive: () => stationsStore.FloodNtcIsActive,\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const toggleLayer = (value) => {\r\n    const newCheckedState = !checkedLayers[value];\r\n\r\n    setCheckedLayers((prev) => ({\r\n      ...prev,\r\n      [value]: newCheckedState,\r\n    }));\r\n\r\n    // Always update the store state to keep it in sync\r\n    const config = layerConfig[value];\r\n    if (config) {\r\n      config.toggle();\r\n\r\n      // If layer is being turned on, fetch stations\r\n      if (newCheckedState) {\r\n        getStationsByType(value, storedCity);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem(\"checkedLayersValue\", JSON.stringify(checkedLayers));\r\n  }, [checkedLayers]);\r\n\r\n  useEffect(() => {\r\n    // Sync stored layer states with store states when city changes\r\n    if (sessionStorage.getItem(\"checkedLayersValue\")) {\r\n      const storedLayers = JSON.parse(\r\n        sessionStorage.getItem(\"checkedLayersValue\")\r\n      );\r\n\r\n      Object.entries(storedLayers).forEach(([layerType, isChecked]) => {\r\n        const config = layerConfig[layerType];\r\n        if (!config) return;\r\n\r\n        if (isChecked) {\r\n          getStationsByType(layerType, storedCity);\r\n          // If layer should be active but isn't, toggle it\r\n          if (!config.isActive()) {\r\n            config.toggle();\r\n          }\r\n        } else {\r\n          // If layer should be inactive but is active, toggle it\r\n          if (config.isActive()) {\r\n            config.toggle();\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [storedCity, layerConfig]);\r\n\r\n  return (\r\n    <Card\r\n      onWheel={(e) => e.stopPropagation()}\r\n      onTouchMove={(e) => e.stopPropagation()}\r\n      className=\"absolute  top-16 right-8 md:top-16 md:right-20 bg-gray-800 bg-opacity-70 text-white w-80 z-50 transition-[width] duration-300 ease-in-out\"\r\n      style={{\r\n        width: isOpen ? \"min(16rem, 5000px)\" : \"56px\",\r\n        interpolateSize: \"allow\",\r\n        zIndex: \"400\",\r\n      }}\r\n    >\r\n      {/* Header with Collapse Toggle */}\r\n      <div\r\n        className={`absolute flex justify-center items-center text-white cursor-pointer max-w-[100px] ${\r\n          !isOpen ? \"inset-0 nav opacity-1 \" : \"opacity-0\"\r\n        }`}\r\n        onClick={() => setIsOpen(true)}\r\n      >\r\n        <FontAwesomeIcon icon={faChevronLeft} />\r\n      </div>\r\n\r\n      {isOpen && (\r\n        <>\r\n          {/* Tabs */}\r\n          <Tabs\r\n            aria-label=\"Layer tabs\"\r\n            onActiveTabChange={(tabIndex) =>\r\n              setActiveTab(tabIndex === 0 ? \"base\" : \"forecast\")\r\n            }\r\n            theme={{\r\n              tablist: {\r\n                tabitem: {\r\n                  base: \"flex items-center justify-center rounded-lg p-2 text-sm font-medium\",\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            <Tabs.Item active title={t(\"filterLayer.tabs.base\")} />\r\n            <Tabs.Item title={t(\"filterLayer.tabs.forecast\")} />\r\n          </Tabs>\r\n\r\n          {/* Base Tab */}\r\n          {activeTab === \"base\" && (\r\n            <div className=\"text-sm\">\r\n              <div className=\"space-y-1 max-h-60 overflow-y-auto\">\r\n                {layers.map((layer, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className={`flex items-center gap-2 ${\r\n                      checkedLayers[layer.value] && \"text-green-500\"\r\n                    } `}\r\n                  >\r\n                    <Checkbox\r\n                      className=\"cursor-pointer\"\r\n                      id={`layer-${index}`}\r\n                      checked={checkedLayers[layer.value]}\r\n                      onChange={() => toggleLayer(layer.value)}\r\n                    />\r\n                    <label\r\n                      htmlFor={`layer-${index}`}\r\n                      className=\"capitalize cursor-pointer\"\r\n                    >\r\n                      {layer.label}\r\n                    </label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Forecast Tab */}\r\n          {activeTab === \"forecast\" && (\r\n            <div className=\"mt-4 text-gray-400 text-sm\">\r\n              {t(\"filterLayer.forecastEmpty\")}\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      <button\r\n        onClick={() => setIsOpen((prev) => !prev)}\r\n        onMouseDown={(e) => e.stopPropagation()}\r\n        className={`absolute top-4 ${\r\n          isOpen ? \"-left-[50px] translate-x-full\" : \"opacity-0\"\r\n        } z-[1200] rounded-l-lg bg-gray-900/90 border border-white/20 text-white shadow p-2 hover:bg-gray-800`}\r\n        aria-label={\r\n          isOpen\r\n            ? t(\"stationsSidePanel.labels.collapsePanel\")\r\n            : t(\"stationsSidePanel.labels.openPanel\")\r\n        }\r\n        title={\r\n          isOpen\r\n            ? t(\"stationsSidePanel.labels.collapse\")\r\n            : t(\"stationsSidePanel.labels.stationsTitle\")\r\n        }\r\n      >\r\n        <FontAwesomeIcon icon={faChevronRight} />\r\n      </button>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default FilterLayer;\r\n","import {\r\n  faDroplet,\r\n  faRainbow,\r\n  faStopwatch,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { useMemo, useRef, useImperativeHandle, forwardRef } from \"react\";\r\nimport { renderToStaticMarkup } from \"react-dom/server\";\r\nimport L from \"leaflet\";\r\nimport stationsStore from \"../../../../stores/StationsStore\";\r\nimport { Marker, Tooltip } from \"react-leaflet\";\r\nimport createModal from \"../../../../stores/CreateModal\";\r\nimport StationsModal from \"../../../modals/stationsModals/StationsModal\";\r\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  formatWarningStatus,\r\n  getWarningStatusColor,\r\n} from \"../../../../utils/statusFormatter\";\r\n\r\nconst RainStations = observer(\r\n  forwardRef((props, ref) => {\r\n    const { allRainLevelStations } = stationsStore;\r\n    const clusterRef = useRef();\r\n    const { t } = useTranslation();\r\n\r\n    // Expose declustering function to parent components\r\n    useImperativeHandle(ref, () => ({\r\n      declusterStation: (stationId) => {\r\n        if (clusterRef.current) {\r\n          const cluster = clusterRef.current;\r\n          const station = allRainLevelStations.find((s) => s.id === stationId);\r\n          if (station && station.latitude && station.longitude) {\r\n            // If we're showing only the selected station, no need to decluster\r\n            if (\r\n              stationsStore.selectedStationType === \"Rain\" &&\r\n              stationsStore.selectedStationId === stationId\r\n            ) {\r\n              return;\r\n            }\r\n\r\n            // Find the marker in the cluster and zoom to show it\r\n            const layer = cluster\r\n              .getLayers()\r\n              .find(\r\n                (layer) =>\r\n                  layer.options && layer.options.stationId === stationId\r\n              );\r\n\r\n            if (layer) {\r\n              cluster.zoomToShowLayer(layer, () => {\r\n                // Callback after zooming\r\n              });\r\n            }\r\n          }\r\n        }\r\n      },\r\n    }));\r\n\r\n    // waterLevel icon\r\n\r\n    const iconHtml = renderToStaticMarkup(\r\n      <FontAwesomeIcon\r\n        icon={faRainbow}\r\n        className=\"border border-red-700 text-black-800 bg-red-300 rounded-full p-2\"\r\n      />\r\n    );\r\n\r\n    const faIcon = L.divIcon({\r\n      html: iconHtml,\r\n      className: \"fa-icon-marker\",\r\n      iconSize: [32, 32],\r\n      iconAnchor: [16, 32],\r\n    });\r\n\r\n    const selectedIcon = L.divIcon({\r\n      html: renderToStaticMarkup(\r\n        <div className=\"relative\">\r\n          <span className=\"absolute inset-0 -m-1 rounded-full bg-red-400/40 animate-ping\"></span>\r\n          <FontAwesomeIcon\r\n            icon={faRainbow}\r\n            className=\"relative border-2 border-white ring-8 ring-red-500 text-red-900 bg-red-300 rounded-full p-2 shadow-2xl\"\r\n          />\r\n        </div>\r\n      ),\r\n      className: \"fa-icon-marker-selected\",\r\n      iconSize: [48, 48],\r\n      iconAnchor: [24, 48],\r\n    });\r\n\r\n    function timeNow(utcTime) {\r\n      const localDate = new Date(utcTime);\r\n      return localDate.toString() === \"Invalid Date\"\r\n        ? \"\"\r\n        : localDate.toLocaleString();\r\n    }\r\n\r\n    const markers = useMemo(() => {\r\n      if (!allRainLevelStations) {\r\n        return \"\";\r\n      }\r\n\r\n      console.log(\r\n        \"[from Rain]\",\r\n        stationsStore.selectedStationType,\r\n        stationsStore.selectedStationId,\r\n        !stationsStore.effectiveRainIsActive\r\n      );\r\n\r\n      // If there's a selected station of this type, only show that station\r\n\r\n      if (\r\n        stationsStore.selectedStationType === \"Rain\" &&\r\n        stationsStore.selectedStationId &&\r\n        ((!stationsStore.panelIsOpen && !stationsStore.RainIsActive) ||\r\n          (stationsStore.panelIsOpen &&\r\n            stationsStore.panelSelectedType !== \"Rain\"))\r\n      ) {\r\n        const selectedStation = allRainLevelStations.find(\r\n          (s) => s.id === stationsStore.selectedStationId\r\n        );\r\n        if (selectedStation) {\r\n          return (\r\n            <Marker\r\n              position={[selectedStation.latitude, selectedStation.longitude]}\r\n              icon={selectedIcon}\r\n              zIndexOffset={1000}\r\n              key={selectedStation.id}\r\n              stationId={selectedStation.id}\r\n              eventHandlers={{\r\n                click: () => {\r\n                  createModal.open(\r\n                    <StationsModal\r\n                      close={() => createModal.close()}\r\n                      elementId={selectedStation.id}\r\n                      stationName={t(\"rainStations.modal.stationName\")}\r\n                      type={\"Rain\"}\r\n                    />\r\n                  );\r\n                },\r\n              }}\r\n            >\r\n              <Tooltip\r\n                direction=\"top\"\r\n                offset={[0, -15]}\r\n                opacity={1}\r\n                className=\"bg-gray-800 text-white border-0 text-xs\"\r\n              >\r\n                <div className=\"text-center\">\r\n                  <div className=\"font-semibold\">{selectedStation.name}</div>\r\n                  <div className=\"text-gray-300\">\r\n                    {selectedStation.category}\r\n                  </div>\r\n                  <div className=\"text-gray-300\">\r\n                    {timeNow(selectedStation.lastTimestamp)}\r\n                  </div>\r\n                </div>\r\n              </Tooltip>\r\n            </Marker>\r\n          );\r\n        }\r\n      }\r\n\r\n      // Otherwise, show all stations as normal\r\n      return allRainLevelStations.map((e) => (\r\n        <Marker\r\n          position={[e.latitude, e.longitude]}\r\n          icon={stationsStore.isSelected(\"Rain\", e.id) ? selectedIcon : faIcon}\r\n          zIndexOffset={stationsStore.isSelected(\"Rain\", e.id) ? 1000 : 0}\r\n          key={e.id}\r\n          stationId={e.id}\r\n          eventHandlers={{\r\n            click: () => {\r\n              createModal.open(\r\n                <StationsModal\r\n                  close={() => createModal.close()}\r\n                  elementId={e.id}\r\n                  stationName={t(\"rainStations.modal.stationName\")}\r\n                  type={\"Rain\"}\r\n                />\r\n              );\r\n            },\r\n          }}\r\n        >\r\n          <Tooltip\r\n            direction=\"top\"\r\n            offset={[0, -15]}\r\n            opacity={1}\r\n            permanent={false}\r\n            className=\"custom-tooltip\"\r\n          >\r\n            <div className=\"bg-white rounded-lg shadow-xl border border-gray-200 p-4 min-w-[280px] max-w-[320px]\">\r\n              {/* Header */}\r\n              <div className=\"flex items-center gap-2 mb-3 pb-2 border-b border-gray-100\">\r\n                <FontAwesomeIcon\r\n                  icon={faDroplet}\r\n                  className=\"text-blue-600 text-sm\"\r\n                />\r\n                <h3 className=\"font-semibold text-gray-800 text-sm truncate\">\r\n                  {e.name}\r\n                </h3>\r\n              </div>\r\n\r\n              {/* Content Grid */}\r\n              <div className=\"space-y-2\">\r\n                {/* Category */}\r\n                <div className=\"flex justify-between items-center  bg-gray-100 px-2 py-1 rounded-md\">\r\n                  <span className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">\r\n                    {t(\"rainStations.tooltip.category\")}\r\n                  </span>\r\n                  <span className=\"text-sm text-gray-700 bg-gray-100 px-2 py-1 rounded-md\">\r\n                    {e.category}\r\n                  </span>\r\n                </div>\r\n\r\n                {/* Status */}\r\n                <div\r\n                  className={`flex justify-between items-center px-2 py-1 rounded-md ${getWarningStatusColor(\r\n                    e.warningStatus\r\n                  )} `}\r\n                >\r\n                  <span className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">\r\n                    {t(\"rainStations.tooltip.status\")}\r\n                  </span>\r\n                  <div className={`text-sm`}>\r\n                    {formatWarningStatus(e.warningStatus)}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Water Level - Highlighted */}\r\n                <div className=\"bg-blue-50 rounded-lg p-3 mt-3\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-xs font-medium text-blue-600 uppercase tracking-wide\">\r\n                      {t(\"rainStations.tooltip.waterLevel\")}\r\n                    </span>\r\n                    <span className=\"text-sm font-bold text-blue-800\">\r\n                      {e.lastResult}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Last Update Time */}\r\n                <div className=\"flex justify-between items-start pt-2 border-t border-gray-100  bg-gray-100 px-2 py-1 rounded-md\">\r\n                  <span className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">\r\n                    <FontAwesomeIcon icon={faStopwatch} className=\"text-2xl\" />\r\n                  </span>\r\n                  <div className=\"text-right text-xs text-gray-600\">\r\n                    {timeNow(e.lastTimestamp) ? timeNow(e.lastTimestamp) : \"--\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Tooltip>\r\n        </Marker>\r\n      ));\r\n    }, [allRainLevelStations, faIcon, selectedIcon, t]);\r\n\r\n    // Create icon function that reacts to selection changes\r\n    const iconCreateFunction = useMemo(() => {\r\n      return (cluster) => {\r\n        // Check if this cluster contains the selected station\r\n        const hasSelectedStation =\r\n          cluster.getChildCount() > 0 &&\r\n          cluster\r\n            .getAllChildMarkers()\r\n            .some(\r\n              (marker) =>\r\n                marker.options.stationId === stationsStore.selectedStationId &&\r\n                stationsStore.selectedStationType === \"Rain\"\r\n            );\r\n\r\n        // Check if cluster is expanded by comparing cluster bounds with individual markers\r\n        const isClusterExpanded = (() => {\r\n          if (cluster.getChildCount() <= 1) return false;\r\n\r\n          const clusterBounds = cluster.getBounds();\r\n\r\n          // If markers are spread out beyond a small threshold, cluster is likely expanded\r\n          const boundsWidth = clusterBounds.getEast() - clusterBounds.getWest();\r\n          const boundsHeight =\r\n            clusterBounds.getNorth() - clusterBounds.getSouth();\r\n\r\n          // Threshold: if bounds are larger than ~0.01 degrees, likely expanded\r\n          return boundsWidth > 0.01 || boundsHeight > 0.01;\r\n        })();\r\n\r\n        // Use selected station styling if cluster contains selected station\r\n        const bgColor = hasSelectedStation ? \"bg-red-500\" : \"bg-red-600\";\r\n        const borderClass = hasSelectedStation\r\n          ? \"border-4 border-yellow-400\"\r\n          : \"\";\r\n\r\n        return L.divIcon({\r\n          html: `<div class=\"relative\">\r\n            <div class=\"${bgColor} ${borderClass} text-white rounded-full w-10 h-10 flex items-center justify-center shadow-lg\">${cluster.getChildCount()}</div>\r\n                                      ${\r\n                                        hasSelectedStation && !isClusterExpanded\r\n                                          ? '<span class=\"absolute inset-0 -m-1 rounded-full bg-red-400/40 animate-ping\"></span>'\r\n                                          : \"\"\r\n                                      }\r\n          </div>`,\r\n          className: \"custom-cluster-icon\",\r\n          iconSize: [40, 40],\r\n        });\r\n      };\r\n    }, []);\r\n\r\n    return (\r\n      <MarkerClusterGroup\r\n        ref={clusterRef}\r\n        iconCreateFunction={iconCreateFunction}\r\n        chunkedLoading\r\n        maxClusterRadius={30}\r\n        showCoverageOnHover={false}\r\n        spiderfyOnClick={true}\r\n      >\r\n        {markers}\r\n      </MarkerClusterGroup>\r\n    );\r\n  })\r\n);\r\nexport default RainStations;\r\n","import {\r\n  faDroplet,\r\n  faScrewdriver,\r\n  faStopwatch,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { useMemo, useRef, useImperativeHandle, forwardRef } from \"react\";\r\nimport { renderToStaticMarkup } from \"react-dom/server\";\r\nimport L from \"leaflet\";\r\nimport stationsStore from \"../../../../stores/StationsStore\";\r\nimport { Marker, Tooltip } from \"react-leaflet\";\r\nimport createModal from \"../../../../stores/CreateModal\";\r\nimport StationsModal from \"../../../modals/stationsModals/StationsModal\";\r\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  formatWarningStatus,\r\n  getWarningStatusColor,\r\n} from \"../../../../utils/statusFormatter\";\r\nconst SewerStations = observer(\r\n  forwardRef((props, ref) => {\r\n    const { allSewerLevelStations } = stationsStore;\r\n    const clusterRef = useRef();\r\n    const { t } = useTranslation();\r\n\r\n    // Expose declustering function to parent components\r\n    useImperativeHandle(ref, () => ({\r\n      declusterStation: (stationId) => {\r\n        if (clusterRef.current) {\r\n          const cluster = clusterRef.current;\r\n          const station = allSewerLevelStations.find((s) => s.id === stationId);\r\n          if (station && station.latitude && station.longitude) {\r\n            // If we're showing only the selected station, no need to decluster\r\n            if (\r\n              stationsStore.selectedStationType === \"Sewer\" &&\r\n              stationsStore.selectedStationId === stationId\r\n            ) {\r\n              return;\r\n            }\r\n\r\n            // Find the marker in the cluster and zoom to show it\r\n            const layer = cluster\r\n              .getLayers()\r\n              .find(\r\n                (layer) =>\r\n                  layer.options && layer.options.stationId === stationId\r\n              );\r\n\r\n            if (layer) {\r\n              cluster.zoomToShowLayer(layer, () => {\r\n                // Callback after zooming\r\n              });\r\n            }\r\n          }\r\n        }\r\n      },\r\n    }));\r\n\r\n    // waterLevel icon\r\n\r\n    const iconHtml = renderToStaticMarkup(\r\n      <FontAwesomeIcon\r\n        icon={faScrewdriver}\r\n        className=\"border border-green-700 text-black-800 bg-green-300 rounded-full p-2\"\r\n      />\r\n    );\r\n\r\n    const faIcon = L.divIcon({\r\n      html: iconHtml,\r\n      className: \"fa-icon-marker\",\r\n      iconSize: [32, 32],\r\n      iconAnchor: [16, 32],\r\n    });\r\n    const selectedIcon = L.divIcon({\r\n      html: renderToStaticMarkup(\r\n        <div className=\"relative\">\r\n          <span className=\"absolute inset-0 -m-1 rounded-full bg-green-400/40 animate-ping\"></span>\r\n          <FontAwesomeIcon\r\n            icon={faScrewdriver}\r\n            className=\"relative border-2 border-white ring-8 ring-green-500 text-green-900 bg-green-300 rounded-full p-2 shadow-2xl\"\r\n          />\r\n        </div>\r\n      ),\r\n      className: \"fa-icon-marker-selected\",\r\n      iconSize: [48, 48],\r\n      iconAnchor: [24, 48],\r\n    });\r\n\r\n    function timeNow(utcTime) {\r\n      const localDate = new Date(utcTime);\r\n      return localDate.toString() === \"Invalid Date\"\r\n        ? \"\"\r\n        : localDate.toLocaleString();\r\n    }\r\n\r\n    const markers = useMemo(() => {\r\n      if (!allSewerLevelStations) return \"\";\r\n\r\n      console.log(\r\n        \"[from Sewar]\",\r\n        stationsStore.selectedStationType,\r\n        stationsStore.selectedStationId,\r\n        !stationsStore.effectiveSewerIsActive\r\n      );\r\n\r\n      // If there's a selected station of this type, only show that station\r\n      if (\r\n        stationsStore.selectedStationType === \"Sewer\" &&\r\n        stationsStore.selectedStationId &&\r\n        ((!stationsStore.panelIsOpen && !stationsStore.SewerIsActive) ||\r\n          (stationsStore.panelIsOpen &&\r\n            stationsStore.panelSelectedType !== \"Sewer\"))\r\n      ) {\r\n        const selectedStation = allSewerLevelStations.find(\r\n          (s) => s.id === stationsStore.selectedStationId\r\n        );\r\n        if (selectedStation) {\r\n          return (\r\n            <Marker\r\n              position={[selectedStation.latitude, selectedStation.longitude]}\r\n              icon={selectedIcon}\r\n              zIndexOffset={1000}\r\n              key={selectedStation.id}\r\n              stationId={selectedStation.id}\r\n              eventHandlers={{\r\n                click: () => {\r\n                  createModal.open(\r\n                    <StationsModal\r\n                      close={() => createModal.close()}\r\n                      elementId={selectedStation.id}\r\n                      stationName={t(\"SewerStations.modal.stationName\")}\r\n                      type={\"Sewer\"}\r\n                    />\r\n                  );\r\n                },\r\n              }}\r\n            >\r\n              <Tooltip\r\n                direction=\"top\"\r\n                offset={[0, -15]}\r\n                opacity={1}\r\n                className=\"bg-gray-800 text-white border-0 text-xs\"\r\n              >\r\n                <div className=\"text-center\">\r\n                  <div className=\"font-semibold\">{selectedStation.name}</div>\r\n                  <div className=\"text-gray-300\">\r\n                    {selectedStation.category}\r\n                  </div>\r\n                  <div className=\"text-gray-300\">\r\n                    {timeNow(selectedStation.lastTimestamp)}\r\n                  </div>\r\n                </div>\r\n              </Tooltip>\r\n            </Marker>\r\n          );\r\n        }\r\n      }\r\n\r\n      // Otherwise, show all stations as normal\r\n      return allSewerLevelStations.map((e) => (\r\n        <Marker\r\n          position={[e.latitude, e.longitude]}\r\n          icon={stationsStore.isSelected(\"Sewer\", e.id) ? selectedIcon : faIcon}\r\n          zIndexOffset={stationsStore.isSelected(\"Sewer\", e.id) ? 1000 : 0}\r\n          key={e.id}\r\n          stationId={e.id}\r\n          eventHandlers={{\r\n            click: () => {\r\n              createModal.open(\r\n                <StationsModal\r\n                  close={() => createModal.close()}\r\n                  elementId={e.id}\r\n                  stationName={t(\"SewerStations.modal.stationName\")}\r\n                  type={\"Sewer\"}\r\n                />\r\n              );\r\n            },\r\n          }}\r\n        >\r\n          <Tooltip\r\n            direction=\"top\"\r\n            offset={[0, -15]}\r\n            opacity={1}\r\n            permanent={false}\r\n            className=\"custom-tooltip\"\r\n          >\r\n            <div className=\"bg-white rounded-lg shadow-xl border border-gray-200 p-4 min-w-[280px] max-w-[320px]\">\r\n              {/* Header */}\r\n              <div className=\"flex items-center gap-2 mb-3 pb-2 border-b border-gray-100\">\r\n                <FontAwesomeIcon\r\n                  icon={faDroplet}\r\n                  className=\"text-blue-600 text-sm\"\r\n                />\r\n                <h3 className=\"font-semibold text-gray-800 text-sm truncate\">\r\n                  {e.name}\r\n                </h3>\r\n              </div>\r\n\r\n              {/* Content Grid */}\r\n              <div className=\"space-y-2\">\r\n                {/* Category */}\r\n                <div className=\"flex justify-between items-center  bg-gray-100 px-2 py-1 rounded-md\">\r\n                  <span className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">\r\n                    {t(\"SewerStations.tooltip.category\")}\r\n                  </span>\r\n                  <span className=\"text-sm text-gray-700 bg-gray-100 px-2 py-1 rounded-md\">\r\n                    {e.category}\r\n                  </span>\r\n                </div>\r\n\r\n                {/* Status */}\r\n                <div\r\n                  className={`flex justify-between items-center px-2 py-1 rounded-md ${getWarningStatusColor(\r\n                    e.warningStatus\r\n                  )} `}\r\n                >\r\n                  <span className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">\r\n                    {t(\"SewerStations.tooltip.status\")}\r\n                  </span>\r\n                  <div className={`text-sm`}>\r\n                    {formatWarningStatus(e.warningStatus)}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Water Level - Highlighted */}\r\n                <div className=\"bg-blue-50 rounded-lg p-3 mt-3\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-xs font-medium text-blue-600 uppercase tracking-wide\">\r\n                      {t(\"SewerStations.tooltip.waterLevel\")}\r\n                    </span>\r\n                    <span className=\"text-sm font-bold text-blue-800\">\r\n                      {e.lastResult}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Last Update Time */}\r\n                <div className=\"flex justify-between items-start pt-2 border-t border-gray-100  bg-gray-100 px-2 py-1 rounded-md\">\r\n                  <span className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">\r\n                    <FontAwesomeIcon icon={faStopwatch} className=\"text-2xl\" />\r\n                  </span>\r\n                  <div className=\"text-right text-xs text-gray-600\">\r\n                    {timeNow(e.lastTimestamp) ? timeNow(e.lastTimestamp) : \"--\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Tooltip>\r\n        </Marker>\r\n      ));\r\n    }, [allSewerLevelStations, faIcon, selectedIcon, t]);\r\n\r\n    // Create icon function that reacts to selection changes\r\n    const iconCreateFunction = useMemo(() => {\r\n      return (cluster) => {\r\n        // Check if this cluster contains the selected station\r\n        const hasSelectedStation =\r\n          cluster.getChildCount() > 0 &&\r\n          cluster\r\n            .getAllChildMarkers()\r\n            .some(\r\n              (marker) =>\r\n                marker.options.stationId === stationsStore.selectedStationId &&\r\n                stationsStore.selectedStationType === \"Sewer\"\r\n            );\r\n\r\n        // Check if cluster is expanded by comparing cluster bounds with individual markers\r\n        const isClusterExpanded = (() => {\r\n          if (cluster.getChildCount() <= 1) return false;\r\n\r\n          const clusterBounds = cluster.getBounds();\r\n\r\n          // If markers are spread out beyond a small threshold, cluster is likely expanded\r\n          const boundsWidth = clusterBounds.getEast() - clusterBounds.getWest();\r\n          const boundsHeight =\r\n            clusterBounds.getNorth() - clusterBounds.getSouth();\r\n\r\n          // Threshold: if bounds are larger than ~0.01 degrees, likely expanded\r\n          return boundsWidth > 0.01 || boundsHeight > 0.01;\r\n        })();\r\n\r\n        // Use selected station styling if cluster contains selected station\r\n        const bgColor = hasSelectedStation ? \"bg-green-500\" : \"bg-green-600\";\r\n        const borderClass = hasSelectedStation\r\n          ? \"border-4 border-yellow-400\"\r\n          : \"\";\r\n\r\n        return L.divIcon({\r\n          html: `<div class=\"relative\">\r\n            <div class=\"${bgColor} ${borderClass} text-white rounded-full w-10 h-10 flex items-center justify-center shadow-lg\">${cluster.getChildCount()}</div>\r\n                                      ${\r\n                                        hasSelectedStation && !isClusterExpanded\r\n                                          ? '<span class=\"absolute inset-0 -m-1 rounded-full bg-green-400/40 animate-ping\"></span>'\r\n                                          : \"\"\r\n                                      }\r\n          </div>`,\r\n          className: \"custom-cluster-icon\",\r\n          iconSize: [40, 40],\r\n        });\r\n      };\r\n    }, []);\r\n\r\n    return (\r\n      <MarkerClusterGroup\r\n        ref={clusterRef}\r\n        iconCreateFunction={iconCreateFunction}\r\n        chunkedLoading\r\n        maxClusterRadius={30}\r\n        showCoverageOnHover={false}\r\n        spiderfyOnClick={true}\r\n      >\r\n        {markers}\r\n      </MarkerClusterGroup>\r\n    );\r\n  })\r\n);\r\n\r\nexport default SewerStations;\r\n","/**\r\n * Table configuration for different station types with localization support\r\n */\r\n\r\nexport const TABLE_CONFIGS = {\r\n  WaterLevel: (t) => ({\r\n    columns: [\r\n      {\r\n        key: \"name\",\r\n        header: t(\"table.name\"),\r\n        width: \"w-32\",\r\n        cellClass: \"font-medium whitespace-nowrap px-3\",\r\n        render: (value) => value || \"-\",\r\n      },\r\n      {\r\n        key: \"category\",\r\n        header: t(\"table.category\"),\r\n        width: \"w-24\",\r\n        cellClass: \"w-24 text-center px-2\",\r\n        render: (value) => value || \"-\",\r\n      },\r\n      {\r\n        key: \"city\",\r\n        header: t(\"table.city\"),\r\n        width: \"w-24\",\r\n        cellClass: \"w-24 text-center px-2\",\r\n        render: (value, item) => item.city || item.county || \"-\",\r\n      },\r\n      {\r\n        key: \"lastResult\",\r\n        header: t(\"table.lastResult\"),\r\n        width: \"w-24\",\r\n        cellClass: \"w-24 text-center px-2\",\r\n        render: (value) => value ?? \"-\",\r\n      },\r\n      {\r\n        key: \"lastTimestamp\",\r\n        header: t(\"table.lastTime\"),\r\n        width: \"w-32\",\r\n        cellClass: \"w-32 whitespace-nowrap px-2\",\r\n        render: (value, item, timeNow) => {\r\n          if (!value) return \"-\";\r\n          const timeStr = timeNow(value);\r\n          return (\r\n            <>\r\n              {timeStr.slice(0, 11) ?? \"-\"}\r\n              <br />\r\n              {timeStr?.slice(11, 21) ?? \"-\"}\r\n            </>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        key: \"alertL1\",\r\n        header: t(\"table.warnLv1\"),\r\n        width: \"w-20\",\r\n        cellClass: \"w-20 text-center px-2\",\r\n        render: (value) => value ?? \"-\",\r\n      },\r\n      {\r\n        key: \"alertL2\",\r\n        header: t(\"table.warnLv2\"),\r\n        width: \"w-20\",\r\n        cellClass: \"w-20 text-center px-2\",\r\n        render: (value) => value ?? \"-\",\r\n      },\r\n      {\r\n        key: \"alertL3\",\r\n        header: t(\"table.warnLv3\"),\r\n        width: \"w-20\",\r\n        cellClass: \"w-20 text-center px-2\",\r\n        render: (value) => value ?? \"-\",\r\n      },\r\n      {\r\n        key: \"warningStatus\",\r\n        header: t(\"table.status\"),\r\n        width: \"w-40\",\r\n        cellClass: \"w-40 px-2\",\r\n        render: (\r\n          value,\r\n          item,\r\n          timeNow,\r\n          formatWarningStatus,\r\n          getWarningStatusColor\r\n        ) => (\r\n          <span\r\n            className={`px-2 py-1 rounded-full text-xs font-medium whitespace-nowrap ${getWarningStatusColor(\r\n              value\r\n            )}`}\r\n          >\r\n            {formatWarningStatus(value)}\r\n          </span>\r\n        ),\r\n      },\r\n    ],\r\n  }),\r\n  // Repeat for Rain, Sewer, FloodNtc...\r\n  Rain: (t) => ({\r\n    columns: [\r\n      {\r\n        key: \"name\",\r\n        header: t(\"table.name\"),\r\n        width: \"w-32\",\r\n        cellClass: \"font-medium whitespace-nowrap px-3\",\r\n        render: (value) => value || \"-\",\r\n      },\r\n      {\r\n        key: \"category\",\r\n        header: t(\"table.category\"),\r\n        width: \"w-24\",\r\n        cellClass: \"w-24 text-center px-2\",\r\n        render: (value) => value || \"-\",\r\n      },\r\n      {\r\n        key: \"county\",\r\n        header: t(\"table.county\"),\r\n        width: \"w-24\",\r\n        cellClass: \"w-24 text-center px-2\",\r\n        render: (value) => value || \"-\",\r\n      },\r\n      {\r\n        key: \"area\",\r\n        header: t(\"table.area\"),\r\n        width: \"w-24\",\r\n        cellClass: \"w-24 text-center px-2\",\r\n        render: (value) => value || \"-\",\r\n      },\r\n      {\r\n        key: \"lastResult\",\r\n        header: t(\"table.lastResult\"),\r\n        width: \"w-24\",\r\n        cellClass: \"w-24 text-center px-2\",\r\n        render: (value) => `${value} mm`,\r\n      },\r\n      {\r\n        key: \"lastTimestamp\",\r\n        header: t(\"table.lastTime\"),\r\n        width: \"w-32\",\r\n        cellClass: \"w-32 whitespace-nowrap px-2\",\r\n        render: (value, item, timeNow) => {\r\n          const timeStr = timeNow(value);\r\n          return (\r\n            <>\r\n              {timeStr.slice(0, 11) ?? \"-\"}\r\n              <br />\r\n              {timeStr?.slice(11, 21) ?? \"-\"}\r\n            </>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        key: \"alertL2\",\r\n        header: t(\"table.alertH1\"),\r\n        width: \"w-20\",\r\n        cellClass: \"w-20 text-center px-2\",\r\n        render: (value) => value,\r\n      },\r\n      {\r\n        key: \"alertL1\",\r\n        header: t(\"table.floodH1\"),\r\n        width: \"w-20\",\r\n        cellClass: \"w-20 text-center px-2\",\r\n        render: (value) => value,\r\n      },\r\n      {\r\n        key: \"warningStatus\",\r\n        header: t(\"table.status\"),\r\n        width: \"w-40\",\r\n        cellClass: \"w-40 px-2\",\r\n        render: (\r\n          value,\r\n          item,\r\n          timeNow,\r\n          formatWarningStatus,\r\n          getWarningStatusColor\r\n        ) => (\r\n          <span\r\n            className={`px-2 py-1 rounded-full text-xs font-medium whitespace-nowrap ${getWarningStatusColor(\r\n              value\r\n            )}`}\r\n          >\r\n            {formatWarningStatus(value)}\r\n          </span>\r\n        ),\r\n      },\r\n    ],\r\n  }),\r\n  // Repeat for Sewer and FloodNtc, using t('table.key') for headers\r\n  // ...\r\n};\r\n\r\n/**\r\n * Get table configuration for a specific station type\r\n * @param {string} stationType - The type of station\r\n * @param {function} t - The translation function\r\n * @returns {Object} Table configuration\r\n */\r\nexport const getTableConfig = (stationType, t) => {\r\n  const configFactory = TABLE_CONFIGS[stationType] || TABLE_CONFIGS.WaterLevel;\r\n  return configFactory(t);\r\n};\r\n\r\n/**\r\n * Calculate total table width based on column widths\r\n * @param {Array} columns - Array of column configurations\r\n * @returns {string} Minimum width class\r\n */\r\nexport const getTableMinWidth = (columns) => {\r\n  const totalWidth = columns.reduce((acc, col) => {\r\n    const width = col.width;\r\n    if (width === \"w-20\") return acc + 80;\r\n    if (width === \"w-24\") return acc + 96;\r\n    if (width === \"w-32\") return acc + 128;\r\n    if (width === \"w-40\") return acc + 160;\r\n    return acc + 100; // default width\r\n  }, 0);\r\n\r\n  // Add some padding and convert to Tailwind class\r\n  if (totalWidth <= 800) return \"min-w-[800px]\";\r\n  if (totalWidth <= 900) return \"min-w-[900px]\";\r\n  if (totalWidth <= 1000) return \"min-w-[1000px]\";\r\n  return \"min-w-[1100px]\";\r\n};\r\n","import React from \"react\";\r\nimport { Table, Button } from \"flowbite-react\";\r\nimport { useMap } from \"react-leaflet\";\r\nimport stationsStore from \"../../../../stores/StationsStore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleInfo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  formatWarningStatus,\r\n  getWarningStatusColor,\r\n} from \"../../../../utils/statusFormatter\";\r\nimport {\r\n  getTableConfig,\r\n  getTableMinWidth,\r\n} from \"../../../../utils/tableConfig\";\r\n\r\nexport default function StationsDataTable({\r\n  filteredItems,\r\n  openDetails,\r\n  selectedType,\r\n  handleTogglePanel,\r\n  declusterStation,\r\n}) {\r\n  const { t } = useTranslation();\r\n  const map = useMap();\r\n\r\n  // Get table configuration based on station type\r\n  const tableConfig = getTableConfig(selectedType , t);\r\n  const minWidth = getTableMinWidth(tableConfig.columns);\r\n\r\n  const getRowClass = (status) => {\r\n    switch (status) {\r\n      case \"AboveLevel_1\":\r\n      case \"lvl_above_1\":\r\n      case \"level_above_1\":\r\n      case \"above_level_1\":\r\n      case \"Danger\":\r\n        return \"even:bg-gray-300 odd:bg-gray-300\";\r\n      case \"AboveLevel_2\":\r\n      case \"lvl_above_2\":\r\n      case \"level_above_2\":\r\n      case \"above_level_2\":\r\n        return \"even:bg-gray-200 odd:bg-gray-200\";\r\n      case \"AboveLevel_3\":\r\n      case \"lvl_above_3\":\r\n      case \"level_above_3\":\r\n      case \"above_level_3\":\r\n        return \"even:bg-gray-100 odd:bg-gray-100\";\r\n      default:\r\n        return \"even:bg-white odd:bg-white\";\r\n    }\r\n  };\r\n\r\n  function timeNow(utcTime) {\r\n    const localDate = new Date(utcTime);\r\n    return localDate.toString() === \"Invalid Date\"\r\n      ? \"\"\r\n      : localDate.toLocaleString();\r\n  }\r\n\r\n  return (\r\n    <Table\r\n      striped\r\n      theme={{\r\n        root: {\r\n          base: `w-full ${minWidth} text-left text-[0.95rem] text-gray-200`,\r\n        },\r\n      }}\r\n    >\r\n      <Table.Head className=\"text-xs\">\r\n        {tableConfig.columns.map((column, index) => (\r\n          <Table.HeadCell\r\n            key={column.key}\r\n            className={`bg-gray-800/90 backdrop-blur sticky top-0 z-10 text-gray-100 ${\r\n              column.width\r\n            } ${index === tableConfig.columns.length - 1 ? \"text-right\" : \"\"}`}\r\n          >\r\n            {column.header}\r\n          </Table.HeadCell>\r\n        ))}\r\n        <Table.HeadCell className=\"bg-gray-800/90 backdrop-blur sticky top-0 z-10 text-gray-100 text-right w-20\">\r\n          {t(\"table.details\")}\r\n        </Table.HeadCell>\r\n      </Table.Head>\r\n      <Table.Body className=\"divide-y divide-white/10 text-xs\">\r\n        {filteredItems.map((s) => (\r\n          <Table.Row\r\n            key={s.id}\r\n            className={`${getRowClass(\r\n              s.warningStatus\r\n            )} cursor-pointer text-black`}\r\n            onClick={() => {\r\n              stationsStore.clearSelectedStation();\r\n\r\n              handleTogglePanel();\r\n              stationsStore.setSelectedStation(selectedType, s.id);\r\n              if (s.latitude && s.longitude) {\r\n                map.flyTo([s.latitude, s.longitude], 15, { duration: 0.8 });\r\n\r\n                // Decluster the station if it's in a cluster\r\n                if (declusterStation) {\r\n                  declusterStation(selectedType, s.id);\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            {tableConfig.columns.map((column) => (\r\n              <Table.Cell key={column.key} className={column.cellClass}>\r\n                {column.render(\r\n                  s[column.key],\r\n                  s,\r\n                  timeNow,\r\n                  formatWarningStatus,\r\n                  getWarningStatusColor\r\n                )}\r\n              </Table.Cell>\r\n            ))}\r\n            <Table.Cell className=\"text-right w-20 px-2\">\r\n              <Button\r\n                size=\"xs\"\r\n                color=\"light\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  openDetails(s.id, timeNow(s.lastTimestamp));\r\n                }}\r\n              >\r\n                <span className=\"flex items-center gap-1\">\r\n                  <FontAwesomeIcon icon={faCircleInfo} className=\"me-1\" />\r\n                  {t(\"table.info\")}\r\n                </span>\r\n              </Button>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        ))}\r\n        {filteredItems.length === 0 && (\r\n          <Table.Row>\r\n            <Table.Cell\r\n              colSpan={tableConfig.columns.length + 1}\r\n              className=\"text-center text-gray-400\"\r\n            >\r\n              {t(\"stationsDataTable.messages.noStations\")}\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        )}\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react\";\r\nimport { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport stationsStore from \"../../../../stores/StationsStore\";\r\nimport { Card, Badge, Spinner, TextInput, Select } from \"flowbite-react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport createModal from \"../../../../stores/CreateModal\";\r\nimport StationsModal from \"../../../modals/stationsModals/StationsModal\";\r\nimport L from \"leaflet\";\r\nimport StationsDataTable from \"./StationsDataTable\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst StationsSidePanel = observer(({ declusterStation }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [selectedType, setSelectedType] = useState(() => {\r\n    if (stationsStore.WaterLevelIsActive) return \"WaterLevel\";\r\n    if (stationsStore.RainIsActive) return \"Rain\";\r\n    if (stationsStore.SewerIsActive) return \"Sewer\";\r\n    if (stationsStore.FloodNtcIsActive) return \"FloodNtc\";\r\n    return \"WaterLevel\";\r\n  });\r\n  const [search, setSearch] = useState(\"\");\r\n  const [cities, setCities] = useState(null);\r\n  const [city, setCity] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(true);\r\n\r\n  const AVAILABLE_TYPES = [\"WaterLevel\", \"Rain\", \"Sewer\", \"FloodNtc\"]; // align with store\r\n  const TYPE_LABELS = {\r\n    WaterLevel: t(\"stationsSidePanel.types.WaterLevel\"),\r\n    Rain: t(\"stationsSidePanel.types.Rain\"),\r\n    Sewer: t(\"stationsSidePanel.types.Sewer\"),\r\n    FloodNtc: t(\"stationsSidePanel.types.FloodNTC\"),\r\n  };\r\n\r\n  // Ensure data is loaded for the current type\r\n  useEffect(() => {\r\n    const data = stationsStore.stationsByType[selectedType];\r\n    const storedCity = sessionStorage.getItem(\"storedCityValue\") || \"\";\r\n    const isLoading = stationsStore.isLoadingByType[selectedType];\r\n\r\n    console.log(`[StationsSidePanel] Checking data for ${selectedType}:`, {\r\n      data,\r\n      isLoading,\r\n      hasData: !!data,\r\n      dataLength: data?.length,\r\n      storeError: stationsStore.error,\r\n    });\r\n\r\n    // Only load data if we don't have it and we're not already loading\r\n    if (!data && !isLoading) {\r\n      console.log(`Loading data for ${selectedType} with city: ${storedCity}`);\r\n      stationsStore\r\n        .getStationsByType(selectedType, storedCity)\r\n        .then(() => {\r\n          console.log(\r\n            `[StationsSidePanel] Data loading completed for ${selectedType}`\r\n          );\r\n          console.log(\r\n            `[StationsSidePanel] New data:`,\r\n            stationsStore.stationsByType[selectedType]\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.error(\r\n            `[StationsSidePanel] Error loading data for ${selectedType}:`,\r\n            error\r\n          );\r\n        });\r\n    } else if (data) {\r\n      console.log(`Data already exists for ${selectedType}, skipping fetch`);\r\n    } else if (isLoading) {\r\n      console.log(`Data is already being loaded for ${selectedType}`);\r\n    }\r\n  }, [selectedType]);\r\n\r\n  // Manage panel state in store for priority filtering\r\n  useEffect(() => {\r\n    stationsStore.setPanelOpen(isOpen);\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      stationsStore.setPanelSelectedType(selectedType);\r\n    }\r\n  }, [isOpen, selectedType]);\r\n\r\n  // Removed sync logic - panel type selection is now independent of filter layer states\r\n\r\n  // Load cities for filter\r\n  useEffect(() => {\r\n    async function loadCities() {\r\n      try {\r\n        const response = await stationsStore.getAllCities();\r\n        setCities(response?.data?.result || []);\r\n      } catch (err) {\r\n        setCities([]);\r\n      }\r\n    }\r\n    loadCities();\r\n  }, []);\r\n\r\n  // Handle city change (persist and refetch active layers only)\r\n  const onChangeCity = async (value) => {\r\n    // Only refetch if city actually changed\r\n    if (value === city) {\r\n      console.log(`City unchanged (${value}), skipping refetch`);\r\n      return;\r\n    }\r\n\r\n    setCity(value);\r\n    sessionStorage.setItem(\"storedCityValue\", value);\r\n    console.log(\r\n      `City changed to ${value}, refetching data for ${selectedType}`\r\n    );\r\n    await stationsStore.getStationsByType(selectedType, value);\r\n  };\r\n\r\n  const isLoading = stationsStore.isLoadingByType[selectedType];\r\n  const currentStationsData = stationsStore.stationsByType[selectedType];\r\n\r\n  const filteredItems = useMemo(() => {\r\n    const priority = {\r\n      AboveLevel_1: 0,\r\n      AboveLevel_2: 1,\r\n      AboveLevel_3: 2,\r\n      normal: 3,\r\n      Danger: 0,\r\n      Warning: 1,\r\n      Normal: 3,\r\n      unknown: 4,\r\n      // Alternative formats\r\n      lvl_above_1: 0,\r\n      lvl_above_2: 1,\r\n      lvl_above_3: 2,\r\n      level_above_1: 0,\r\n      level_above_2: 1,\r\n      level_above_3: 2,\r\n      above_level_1: 0,\r\n      above_level_2: 1,\r\n      above_level_3: 2,\r\n    };\r\n\r\n    // Get items from store, ensuring we have an array\r\n    const items = stationsStore.stationsByType[selectedType];\r\n    const isLoading = stationsStore.isLoadingByType[selectedType];\r\n\r\n    console.log(\r\n      `[StationsSidePanel] selectedType: ${selectedType}, items:`,\r\n      items,\r\n      \"isLoading:\",\r\n      isLoading,\r\n      \"store data keys:\",\r\n      Object.keys(stationsStore.stationsByType)\r\n    );\r\n\r\n    // If still loading, return empty array to show loading state\r\n    if (isLoading) {\r\n      console.log(`[StationsSidePanel] Still loading data for ${selectedType}`);\r\n      return [];\r\n    }\r\n\r\n    // If no data after loading is complete, return empty array\r\n    if (!items) {\r\n      console.log(\r\n        `[StationsSidePanel] No data available for ${selectedType} after loading`\r\n      );\r\n      return [];\r\n    }\r\n\r\n    console.log(\r\n      `[StationsSidePanel] Items type:`,\r\n      typeof items,\r\n      \"isArray:\",\r\n      Array.isArray(items),\r\n      \"length:\",\r\n      items?.length\r\n    );\r\n\r\n    // Convert MobX Proxy to regular array if needed\r\n    let itemsArray = items;\r\n    if (items && typeof items === \"object\" && items.length !== undefined) {\r\n      // This is likely a MobX Proxy array, convert to regular array\r\n      try {\r\n        itemsArray = Array.from(items);\r\n        console.log(\r\n          `[StationsSidePanel] Converted MobX Proxy to array, length: ${itemsArray.length}`\r\n        );\r\n        console.log(\r\n          `[StationsSidePanel] First few items:`,\r\n          itemsArray.slice(0, 3)\r\n        );\r\n      } catch (error) {\r\n        console.error(\r\n          `[StationsSidePanel] Error converting MobX Proxy:`,\r\n          error\r\n        );\r\n        itemsArray = [];\r\n      }\r\n    }\r\n\r\n    // If no data or not an array, return empty array\r\n    if (!itemsArray || !Array.isArray(itemsArray)) {\r\n      console.log(\r\n        `[StationsSidePanel] No valid data for ${selectedType}, returning empty array`\r\n      );\r\n      return [];\r\n    }\r\n\r\n    if (!search) {\r\n      console.log(\r\n        `[StationsSidePanel] Returning ${itemsArray.length} items without search filter`\r\n      );\r\n      return itemsArray;\r\n    }\r\n    const q = search.toLowerCase();\r\n    const filtered = itemsArray\r\n      .filter((s) =>\r\n        [s.name, s.category, s.city, s.county, s.area]\r\n          .filter(Boolean)\r\n          .some((v) => String(v).toLowerCase().includes(q))\r\n      )\r\n      .sort(\r\n        (a, b) =>\r\n          (priority[a.warningStatus] ?? 999) -\r\n          (priority[b.warningStatus] ?? 999)\r\n      );\r\n    console.log(\r\n      `[StationsSidePanel] Filtered ${itemsArray.length} items to ${filtered.length} with search: \"${search}\"`\r\n    );\r\n    return filtered;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedType, search, currentStationsData]);\r\n\r\n  const openDetails = (id, lastTime) => {\r\n    createModal.open(\r\n      <StationsModal\r\n        close={() => createModal.close()}\r\n        elementId={id}\r\n        stationName={TYPE_LABELS[selectedType]}\r\n        type={selectedType}\r\n      />\r\n    );\r\n  };\r\n\r\n  const TypeButton = ({ value }) => (\r\n    <button\r\n      className={`px-4 py-1.5 rounded-full text-sm font-semibold tracking-wide transition-colors shadow ${\r\n        selectedType === value\r\n          ? \"bg-sky-500 text-white shadow-sky-800/30\"\r\n          : \"bg-gray-700/60 text-gray-200 hover:bg-gray-600/70\"\r\n      }`}\r\n      onClick={() => {\r\n        setSelectedType(value);\r\n        if (isOpen) {\r\n          stationsStore.setPanelSelectedType(value);\r\n        }\r\n      }}\r\n    >\r\n      {TYPE_LABELS[value]}\r\n    </button>\r\n  );\r\n\r\n  const panelRef = useRef(null);\r\n  useEffect(() => {\r\n    if (panelRef.current) {\r\n      try {\r\n        L.DomEvent.disableScrollPropagation(panelRef.current);\r\n        L.DomEvent.disableClickPropagation(panelRef.current);\r\n      } catch (_) {}\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={panelRef}\r\n      onWheel={(e) => e.stopPropagation()}\r\n      onTouchMove={(e) => e.stopPropagation()}\r\n      className=\"absolute  top-4 left-8 md:top-16 md:left-20 max-h-[85vh] transition-[width] duration-300 ease-in-out\"\r\n      style={{\r\n        width: isOpen ? \"min(85vw, 1000px)\" : \"56px\",\r\n        interpolateSize: \"allow\",\r\n        zIndex: \"400\",\r\n      }}\r\n    >\r\n      <div\r\n        className={`absolute flex justify-center items-center text-white cursor-pointer max-w-[100px] ${\r\n          !isOpen ? \"inset-0 nav opacity-1 \" : \"opacity-0\"\r\n        }`}\r\n        onClick={() => setIsOpen(true)}\r\n      >\r\n        <FontAwesomeIcon icon={faChevronRight} />\r\n      </div>\r\n      <Card className=\"overflow-hidden bg-gray-900/65 backdrop-blur-md border border-white/10 shadow-2xl\">\r\n        <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n          <div\r\n            className={\r\n              isOpen\r\n                ? \"flex items-center justify-between flex-1 gap-2\"\r\n                : \"hidden\"\r\n            }\r\n          >\r\n            <div\r\n              className={\r\n                isOpen\r\n                  ? \"flex gap-2 flex-wrap items-center\"\r\n                  : \"flex items-center justify-end w-full\"\r\n              }\r\n            >\r\n              {isOpen &&\r\n                AVAILABLE_TYPES.map((t) => <TypeButton key={t} value={t} />)}\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <span className=\"text-white/90 font-semibold text-base md:text-lg\">\r\n                {t(\"stationsSidePanel.labels.stations\")}\r\n              </span>\r\n              <Badge color=\"info\" className=\"bg-sky-600/80 text-white\">\r\n                {filteredItems.length}\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {isOpen && stationsStore.stationsMetaByType[selectedType] && (\r\n          <div className=\"mt-2 grid grid-cols-2 gap-2 text-xs text-white/90\">\r\n            {(() => {\r\n              const meta = stationsStore.stationsMetaByType[selectedType];\r\n              const warn = meta.warningStatusCounts || {};\r\n              const op = meta.operationStatusCounts || {};\r\n              return (\r\n                <>\r\n                  <div className=\"flex flex-wrap gap-2 items-center\">\r\n                    <span className=\"px-2 py-1 rounded bg-green-600/70\">\r\n                      {t(\"stationsSidePanel.status.normal\")}:{\" \"}\r\n                      {warn.normal + warn.aboveLevel_3 ?? 0}\r\n                    </span>\r\n                    <span className=\"px-2 py-1 rounded bg-yellow-600/70\">\r\n                      {t(\"stationsSidePanel.status.warning\")}:{\" \"}\r\n                      {warn.aboveLevel_2 ?? 0}\r\n                    </span>\r\n                    <span className=\"px-2 py-1 rounded bg-orange-600/70\">\r\n                      {t(\"stationsSidePanel.status.lv2\")}:{\" \"}\r\n                      {warn.aboveLevel_1 + warn.danger ?? 0}\r\n                    </span>\r\n                    <span className=\"px-2 py-1 rounded bg-red-600/80\">\r\n                      {t(\"stationsSidePanel.status.lv3\")}:{\" \"}\r\n                      {warn.aboveLevel_4 ?? 0}\r\n                    </span>\r\n                    <span className=\"px-2 py-1 rounded bg-gray-500/70\">\r\n                      {t(\"stationsSidePanel.status.unknown\")}:{\" \"}\r\n                      {warn.unknown ?? 0}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex flex-wrap gap-2 items-center justify-end\">\r\n                    <span className=\"px-2 py-1 rounded bg-sky-600/70\">\r\n                      {t(\"stationsSidePanel.status.active\")}: {op.active ?? 0}\r\n                    </span>\r\n                    <span className=\"px-2 py-1 rounded bg-gray-600/70\">\r\n                      {t(\"stationsSidePanel.status.inactive\")}:{\" \"}\r\n                      {op.inactive ?? 0}\r\n                    </span>\r\n                    <span className=\"px-2 py-1 rounded bg-purple-600/70\">\r\n                      {t(\"stationsSidePanel.status.maintenance\")}:{\" \"}\r\n                      {op.maintenance ?? 0}\r\n                    </span>\r\n                    <span className=\"px-2 py-1 rounded bg-red-500/70\">\r\n                      {t(\"stationsSidePanel.status.outOfService\")}:{\" \"}\r\n                      {op.outOfService ?? 0}\r\n                    </span>\r\n                  </div>\r\n                </>\r\n              );\r\n            })()}\r\n          </div>\r\n        )}\r\n\r\n        {isOpen && (\r\n          <>\r\n            {/* filter section */}\r\n            <div className=\"mt-3 grid grid-cols-5 gap-2 transition-all\">\r\n              <div className=\"col-span-3\">\r\n                <TextInput\r\n                  value={search}\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                  placeholder={t(\"stationsSidePanel.labels.searchPlaceholder\", {\r\n                    type: TYPE_LABELS[selectedType],\r\n                  })}\r\n                  className=\"bg-gray-800/80 text-white placeholder-gray-400\"\r\n                />\r\n              </div>\r\n              <div className=\"col-span-2\">\r\n                <Select\r\n                  value={city}\r\n                  onChange={(e) => onChangeCity(e.target.value)}\r\n                  className=\"bg-gray-800/80 text-white\"\r\n                >\r\n                  <option value=\"\">\r\n                    {t(\"stationsSidePanel.labels.allRegions\")}\r\n                  </option>\r\n                  {cities?.map((c, idx) => (\r\n                    <option value={c} key={idx}>\r\n                      {c}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            {/* data table */}\r\n            <div className=\"mt-3 rounded-lg overflow-hidden border border-white/10\">\r\n              {isLoading ? (\r\n                <div className=\"flex items-center justify-center py-12\">\r\n                  <Spinner color=\"info\" />\r\n                </div>\r\n              ) : (\r\n                <div className=\"md:max-h-[60vh] max-h-[45vh] overflow-auto\">\r\n                  <StationsDataTable\r\n                    filteredItems={filteredItems}\r\n                    openDetails={openDetails}\r\n                    selectedType={selectedType}\r\n                    handleTogglePanel={() => setIsOpen((prev) => !prev)}\r\n                    declusterStation={declusterStation}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </Card>\r\n      <button\r\n        onClick={() => setIsOpen((prev) => !prev)}\r\n        onMouseDown={(e) => e.stopPropagation()}\r\n        className={`absolute top-4 ${\r\n          isOpen ? \"-right-0 translate-x-full\" : \"opacity-0\"\r\n        } z-[1200] rounded-r-lg bg-gray-900/90 border border-white/20 text-white shadow p-2 hover:bg-gray-800`}\r\n        aria-label={\r\n          isOpen\r\n            ? t(\"stationsSidePanel.labels.collapsePanel\")\r\n            : t(\"stationsSidePanel.labels.openPanel\")\r\n        }\r\n        title={\r\n          isOpen\r\n            ? t(\"stationsSidePanel.labels.collapse\")\r\n            : t(\"stationsSidePanel.labels.stationsTitle\")\r\n        }\r\n      >\r\n        <FontAwesomeIcon icon={faChevronLeft} />\r\n      </button>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default StationsSidePanel;\r\n","import {\r\n  faDroplet,\r\n  faHouseFloodWater,\r\n  faStopwatch,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { useMemo, useRef, useImperativeHandle, forwardRef } from \"react\";\r\nimport { renderToStaticMarkup } from \"react-dom/server\";\r\nimport L from \"leaflet\";\r\nimport stationsStore from \"../../../../stores/StationsStore\";\r\nimport { Marker, Tooltip } from \"react-leaflet\";\r\nimport createModal from \"../../../../stores/CreateModal\";\r\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport StationsModal from \"../../../modals/stationsModals/StationsModal\";\r\nimport {\r\n  formatWarningStatus,\r\n  getWarningStatusColor,\r\n} from \"../../../../utils/statusFormatter\";\r\n\r\nconst FloodNtcStations = observer(\r\n  forwardRef((props, ref) => {\r\n    const { t } = useTranslation();\r\n    const { allFloodNtcStations } = stationsStore;\r\n    const clusterRef = useRef();\r\n\r\n    // Expose declustering function to parent components\r\n    useImperativeHandle(ref, () => ({\r\n      declusterStation: (stationId) => {\r\n        if (clusterRef.current) {\r\n          const cluster = clusterRef.current;\r\n          const station = allFloodNtcStations.find((s) => s.id === stationId);\r\n          if (station && station.latitude && station.longitude) {\r\n            // If we're showing only the selected station, no need to decluster\r\n            if (\r\n              stationsStore.selectedStationType === \"FloodNtc\" &&\r\n              stationsStore.selectedStationId === stationId\r\n            ) {\r\n              return;\r\n            }\r\n\r\n            // Find the marker in the cluster and zoom to show it\r\n            const layer = cluster\r\n              .getLayers()\r\n              .find(\r\n                (layer) =>\r\n                  layer.options && layer.options.stationId === stationId\r\n              );\r\n\r\n            if (layer) {\r\n              cluster.zoomToShowLayer(layer, () => {\r\n                // Callback after zooming\r\n              });\r\n            }\r\n          }\r\n        }\r\n      },\r\n    }));\r\n\r\n    // Flooding icon\r\n\r\n    const iconHtml = renderToStaticMarkup(\r\n      <FontAwesomeIcon\r\n        icon={faHouseFloodWater}\r\n        className=\"border border-yellow-700 text-yellow-800 bg-yellow-300 rounded-full p-2\"\r\n      />\r\n    );\r\n\r\n    const faIcon = L.divIcon({\r\n      html: iconHtml,\r\n      className: \"fa-icon-marker\",\r\n      iconSize: [32, 32],\r\n      iconAnchor: [16, 32],\r\n    });\r\n    const selectedIcon = L.divIcon({\r\n      html: renderToStaticMarkup(\r\n        <div className=\"relative\">\r\n          <span className=\"absolute inset-0 -m-1 rounded-full bg-yellow-400/40 animate-ping\"></span>\r\n          <FontAwesomeIcon\r\n            icon={faHouseFloodWater}\r\n            className=\"relative border-2 border-white ring-8 ring-yellow-500 text-yellow-900 bg-yellow-300 rounded-full p-2 shadow-2xl\"\r\n          />\r\n        </div>\r\n      ),\r\n      className: \"fa-icon-marker-selected\",\r\n      iconSize: [48, 48],\r\n      iconAnchor: [24, 48],\r\n    });\r\n\r\n    function timeNow(utcTime) {\r\n      const localDate = new Date(utcTime);\r\n      return localDate.toString() === \"Invalid Date\"\r\n        ? \"\"\r\n        : localDate.toLocaleString();\r\n    }\r\n\r\n    const markers = useMemo(() => {\r\n      if (!allFloodNtcStations) {\r\n        return \"\";\r\n      }\r\n      console.log(\r\n        \"[from flood]\",\r\n        stationsStore.selectedStationType,\r\n        stationsStore.selectedStationId,\r\n        !stationsStore.effectiveFloodNtcIsActive\r\n      );\r\n\r\n      // If there's a selected station of this type, only show that station\r\n      if (\r\n        stationsStore.selectedStationType === \"FloodNtc\" &&\r\n        stationsStore.selectedStationId &&\r\n        ((!stationsStore.panelIsOpen && !stationsStore.FloodNtcIsActive) ||\r\n          (stationsStore.panelIsOpen &&\r\n            stationsStore.panelSelectedType !== \"FloodNtc\"))\r\n      ) {\r\n        const selectedStation = allFloodNtcStations.find(\r\n          (s) => s.id === stationsStore.selectedStationId\r\n        );\r\n        if (selectedStation) {\r\n          return (\r\n            <Marker\r\n              position={[selectedStation.latitude, selectedStation.longitude]}\r\n              icon={selectedIcon}\r\n              zIndexOffset={1000}\r\n              key={selectedStation.id}\r\n              stationId={selectedStation.id}\r\n              eventHandlers={{\r\n                click: () => {\r\n                  createModal.open(\r\n                    <StationsModal\r\n                      close={() => createModal.close()}\r\n                      elementId={selectedStation.id}\r\n                      stationName={t(\"floodNtcStations.modal.stationName\")}\r\n                      type=\"FloodNtc\"\r\n                    />\r\n                  );\r\n                },\r\n              }}\r\n            >\r\n              <Tooltip\r\n                direction=\"top\"\r\n                offset={[0, -15]}\r\n                opacity={1}\r\n                className=\"bg-gray-800 text-white border-0 text-xs\"\r\n              >\r\n                <div className=\"text-center\">\r\n                  <div className=\"font-semibold\">{selectedStation.name}</div>\r\n                  <div className=\"text-gray-300\">\r\n                    {selectedStation.category}\r\n                  </div>\r\n                  <div className=\"text-gray-300\">\r\n                    {timeNow(selectedStation.lastTimestamp)}\r\n                  </div>\r\n                </div>\r\n              </Tooltip>\r\n            </Marker>\r\n          );\r\n        }\r\n      }\r\n\r\n      // Otherwise, show all stations as normal\r\n      return allFloodNtcStations.map((e) => (\r\n        <Marker\r\n          position={[e.latitude, e.longitude]}\r\n          icon={\r\n            stationsStore.isSelected(\"FloodNtc\", e.id) ? selectedIcon : faIcon\r\n          }\r\n          zIndexOffset={stationsStore.isSelected(\"FloodNtc\", e.id) ? 1000 : 0}\r\n          key={e.id}\r\n          stationId={e.id}\r\n          eventHandlers={{\r\n            click: () => {\r\n              createModal.open(\r\n                <StationsModal\r\n                  close={() => createModal.close()}\r\n                  elementId={e.id}\r\n                  stationName={t(\"floodNtcStations.modal.stationName\")}\r\n                  type=\"FloodNtc\"\r\n                />\r\n              );\r\n            },\r\n          }}\r\n        >\r\n          <Tooltip\r\n            direction=\"top\"\r\n            offset={[0, -15]}\r\n            opacity={1}\r\n            permanent={false}\r\n            className=\"custom-tooltip\"\r\n          >\r\n            <div className=\"bg-white rounded-lg shadow-xl border border-gray-200 p-4 min-w-[280px] max-w-[320px]\">\r\n              {/* Header */}\r\n              <div className=\"flex items-center gap-2 mb-3 pb-2 border-b border-gray-100\">\r\n                <FontAwesomeIcon\r\n                  icon={faDroplet}\r\n                  className=\"text-blue-600 text-sm\"\r\n                />\r\n                <h3 className=\"font-semibold text-gray-800 text-sm truncate\">\r\n                  {e.name}\r\n                </h3>\r\n              </div>\r\n\r\n              {/* Content Grid */}\r\n              <div className=\"space-y-2\">\r\n                {/* Category */}\r\n                <div className=\"flex justify-between items-center  bg-gray-100 px-2 py-1 rounded-md\">\r\n                  <span className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">\r\n                    {t(\"floodNtcStations.tooltip.category\")}\r\n                  </span>\r\n                  <span className=\"text-sm text-gray-700 bg-gray-100 px-2 py-1 rounded-md\">\r\n                    {e.category}\r\n                  </span>\r\n                </div>\r\n\r\n                {/* Status */}\r\n                <div\r\n                  className={`flex justify-between items-center px-2 py-1 rounded-md ${getWarningStatusColor(\r\n                    e.warningStatus\r\n                  )} `}\r\n                >\r\n                  <span className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">\r\n                    {t(\"floodNtcStations.tooltip.status\")}\r\n                  </span>\r\n                  <div className={`text-sm`}>\r\n                    {formatWarningStatus(e.warningStatus)}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Water Level - Highlighted */}\r\n                <div className=\"bg-blue-50 rounded-lg p-3 mt-3\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-xs font-medium text-blue-600 uppercase tracking-wide\">\r\n                      {t(\"floodNtcStations.tooltip.waterLevel\")}\r\n                    </span>\r\n                    <span className=\"text-sm font-bold text-blue-800\">\r\n                      {e.lastResult}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Last Update Time */}\r\n                <div className=\"flex justify-between items-start pt-2 border-t border-gray-100  bg-gray-100 px-2 py-1 rounded-md\">\r\n                  <span className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">\r\n                    <FontAwesomeIcon icon={faStopwatch} className=\"text-2xl\" />\r\n                  </span>\r\n                  <div className=\"text-right text-xs text-gray-600\">\r\n                    {timeNow(e.lastTimestamp) ? timeNow(e.lastTimestamp) : \"--\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Tooltip>\r\n        </Marker>\r\n      ));\r\n    }, [allFloodNtcStations, faIcon, selectedIcon, t]);\r\n\r\n    // Create icon function that reacts to selection changes\r\n    const iconCreateFunction = useMemo(() => {\r\n      return (cluster) => {\r\n        // Check if this cluster contains the selected station\r\n        const hasSelectedStation =\r\n          cluster.getChildCount() > 0 &&\r\n          cluster\r\n            .getAllChildMarkers()\r\n            .some(\r\n              (marker) =>\r\n                marker.options.stationId === stationsStore.selectedStationId &&\r\n                stationsStore.selectedStationType === \"FloodNtc\"\r\n            );\r\n\r\n        // Check if cluster is expanded by comparing cluster bounds with individual markers\r\n        const isClusterExpanded = (() => {\r\n          if (cluster.getChildCount() <= 1) return false;\r\n\r\n          const clusterBounds = cluster.getBounds();\r\n\r\n          // If markers are spread out beyond a small threshold, cluster is likely expanded\r\n          const boundsWidth = clusterBounds.getEast() - clusterBounds.getWest();\r\n          const boundsHeight =\r\n            clusterBounds.getNorth() - clusterBounds.getSouth();\r\n\r\n          // Threshold: if bounds are larger than ~0.01 degrees, likely expanded\r\n          return boundsWidth > 0.01 || boundsHeight > 0.01;\r\n        })();\r\n\r\n        // Use selected station styling if cluster contains selected station\r\n        const bgColor = hasSelectedStation ? \"bg-yellow-500\" : \"bg-yellow-600\";\r\n        const borderClass = hasSelectedStation\r\n          ? \"border-4 border-yellow-400\"\r\n          : \"\";\r\n\r\n        return L.divIcon({\r\n          html: `<div class=\"relative\">\r\n            <div class=\"${bgColor} ${borderClass} text-white rounded-full w-10 h-10 flex items-center justify-center shadow-lg\">${cluster.getChildCount()}</div>\r\n                                      ${\r\n                                        hasSelectedStation && !isClusterExpanded\r\n                                          ? '<span class=\"absolute inset-0 -m-1 rounded-full bg-yellow-400/40 animate-ping\"></span>'\r\n                                          : \"\"\r\n                                      }\r\n          </div>`,\r\n          className: \"custom-cluster-icon\",\r\n          iconSize: [40, 40],\r\n        });\r\n      };\r\n    }, []);\r\n\r\n    return (\r\n      <MarkerClusterGroup\r\n        ref={clusterRef}\r\n        iconCreateFunction={iconCreateFunction}\r\n        chunkedLoading\r\n        maxClusterRadius={30}\r\n        showCoverageOnHover={false}\r\n        spiderfyOnClick={true}\r\n      >\r\n        {markers}\r\n      </MarkerClusterGroup>\r\n    );\r\n  })\r\n);\r\n\r\nexport default FloodNtcStations;\r\n","import { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Dropdown, DropdownItem } from \"flowbite-react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport stationsStore from \"../../../../stores/StationsStore\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport createModal from \"../../../../stores/CreateModal\";\r\nimport StationsModal from \"../../../modals/stationsModals/StationsModal\";\r\n\r\nconst CountiesDropDown = observer(() => {\r\n  const { t } = useTranslation(); // hook for localization\r\n\r\n  const [allCounties, setAllCounties] = useState([]);\r\n\r\n  async function DisplayAllCounties() {\r\n    try {\r\n      const response = await stationsStore.fetchCountiesWithAreasAndStations(\r\n        \"Rain\"\r\n      );\r\n\r\n      setAllCounties(response.data.result);\r\n      console.log(response.data.result);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  function openStationModal(station) {\r\n    createModal.open(\r\n      <StationsModal\r\n        close={() => createModal.close()}\r\n        elementId={station.stationId}\r\n        stationName={t(\"rainStations.modal.stationName\")}\r\n        type={\"Rain\"}\r\n        //   lastTime={timeNow(e.lastTimestamp)}\r\n      />\r\n    );\r\n  }\r\n\r\n  const displayCounties = () => {\r\n    if (!allCounties) {\r\n      return <DropdownItem disabled>{t(\"buttonBar.loading\")}</DropdownItem>;\r\n    }\r\n    return (\r\n      <div\r\n        className=\"max-h-[78vh] nav overflow-y-auto w-full\"\r\n        onWheel={(e) => e.stopPropagation()}\r\n        onWheelCapture={(e) => e.stopPropagation()}\r\n        onTouchMove={(e) => e.stopPropagation()}\r\n        onPointerDown={(e) => e.stopPropagation()}\r\n        onScroll={(e) => e.stopPropagation()}\r\n      >\r\n        {allCounties.map((city, i) => (\r\n          <Dropdown\r\n            style={{ background: \"white\", color: \"black\" }}\r\n            key={i}\r\n            label={city.countyName}\r\n            placement=\"right\"\r\n          >\r\n            <div\r\n              className=\"max-h-[90vh] nav overflow-y-auto w-full\"\r\n              onWheel={(e) => e.stopPropagation()}\r\n              onWheelCapture={(e) => e.stopPropagation()}\r\n              onTouchMove={(e) => e.stopPropagation()}\r\n              onPointerDown={(e) => e.stopPropagation()}\r\n              onScroll={(e) => e.stopPropagation()}\r\n            >\r\n              {city.countyAreas.map((area, i) => (\r\n                <Dropdown\r\n                  style={{ background: \"white\", color: \"black\" }}\r\n                  key={i}\r\n                  label={area.areaName}\r\n                  placement=\"right\"\r\n                >\r\n                  <div\r\n              className=\"max-h-[90vh] nav overflow-y-auto w-full\"\r\n              onWheel={(e) => e.stopPropagation()}\r\n              onWheelCapture={(e) => e.stopPropagation()}\r\n              onTouchMove={(e) => e.stopPropagation()}\r\n              onPointerDown={(e) => e.stopPropagation()}\r\n              onScroll={(e) => e.stopPropagation()}\r\n            >\r\n                  {area.areaStations.map((station, i) => (\r\n                    <DropdownItem\r\n                      key={i}\r\n                      onClick={() => {\r\n                        openStationModal(station);\r\n                      }}\r\n                    >\r\n                      {station.stationName}\r\n                    </DropdownItem>\r\n                  ))}\r\n                  </div>\r\n                </Dropdown>\r\n              ))}\r\n            </div>\r\n          </Dropdown>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    DisplayAllCounties();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"block nav relative left-4 top-20 md:left-10 md:top-10 bg-slate-400 text-black font-bold text-xl rounded w-fit\"\r\n    >\r\n      <Dropdown\r\n        renderTrigger={() => (\r\n          <button className=\"p-2\">\r\n            <FontAwesomeIcon icon={faBars} />\r\n          </button>\r\n        )}\r\n      >\r\n        {displayCounties()}\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default CountiesDropDown;\r\n","import { MapContainer, TileLayer, useMap, ZoomControl } from \"react-leaflet\";\r\nimport { observer } from \"mobx-react\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport Nav from \"../nav/Nav\";\r\nimport authStore from \"../../stores/AuthStore\";\r\nimport ModalsDisplay from \"../modals/modalsDisplay/ModalsDisplay\";\r\nimport WaterLevelsStations from \"./displayStations/waterLevels/WaterLevelsStations\";\r\nimport FilterLayer from \"./displayStations/filterLayer/FilterLayer\";\r\nimport stationsStore from \"../../stores/StationsStore\";\r\nimport RainStations from \"./displayStations/rain/RainStations\";\r\nimport SewerStations from \"./displayStations/sewer/SewerStations\";\r\n\r\nimport StationsSidePanel from \"./displayStations/stationsSidePanel/StationsSidePanel\";\r\nimport FloodNtcStations from \"./displayStations/floodNtc/FloodNtcStations\";\r\nimport CountiesDropDown from \"./displayStations/citiesList/CountiesDropDown\";\r\n\r\nconst Home = observer(() => {\r\n  function RemoveDefaultZoom() {\r\n    const map = useMap();\r\n    useEffect(() => {\r\n      map.zoomControl.remove(); // removes the default one\r\n    }, [map]);\r\n    return null;\r\n  }\r\n  console.log(\"render-home\");\r\n  // map position\r\n  const mPosition = [25.03418922, 121.4506683];\r\n  // === map position ==='\r\n\r\n  // Refs for station components to access their declustering functions\r\n  const waterLevelsRef = useRef();\r\n  const rainRef = useRef();\r\n  const sewerRef = useRef();\r\n  const floodNtcRef = useRef();\r\n\r\n  // Function to decluster a station based on its type\r\n  const declusterStation = (stationType, stationId) => {\r\n    switch (stationType) {\r\n      case \"WaterLevel\":\r\n        if (waterLevelsRef.current) {\r\n          waterLevelsRef.current.declusterStation(stationId);\r\n        }\r\n        break;\r\n      case \"Rain\":\r\n        if (rainRef.current) {\r\n          rainRef.current.declusterStation(stationId);\r\n        }\r\n        break;\r\n      case \"Sewer\":\r\n        if (sewerRef.current) {\r\n          sewerRef.current.declusterStation(stationId);\r\n        }\r\n        break;\r\n      case \"FloodNtc\":\r\n        if (floodNtcRef.current) {\r\n          floodNtcRef.current.declusterStation(stationId);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n\r\n  async function getUserPermissions() {\r\n    try {\r\n      const res = await authStore.GetComprehensiveApplicationInfo()\r\n      console.log(\"userInfo\",res.data.result.user.permissions);\r\n      authStore.userPermissions = res.data.result.user.permissions;\r\n    } catch (error) {\r\n      \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUserPermissions();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <MapContainer\r\n        attributionControl={false}\r\n        center={mPosition}\r\n        zoom={11}\r\n        style={{ height: \"100vh\", cursor: \"default\" }}\r\n      >\r\n        {/* <h1 className=\"relative nav text-2xl text-center bg-blue-500 bg-opacity-75 w-full\">{stationsStore.displayCityName===\"\"?\"All Stations\" : stationsStore.displayCityName}</h1> */}\r\n\r\n        <Nav />\r\n        <FilterLayer />\r\n\r\n        <CountiesDropDown />\r\n\r\n        <StationsSidePanel declusterStation={declusterStation} />\r\n\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        <RemoveDefaultZoom />\r\n        <ZoomControl position=\"bottomleft\" />\r\n\r\n        {stationsStore.effectiveWaterLevelIsActive &&\r\n          authStore.userPermissions && (\r\n            <WaterLevelsStations ref={waterLevelsRef} />\r\n          )}\r\n        {stationsStore.effectiveRainIsActive && authStore.userPermissions && (\r\n          <RainStations ref={rainRef} />\r\n        )}\r\n        {stationsStore.effectiveSewerIsActive && authStore.userPermissions && (\r\n          <SewerStations ref={sewerRef} />\r\n        )}\r\n\r\n        {stationsStore.effectiveFloodNtcIsActive &&\r\n          authStore.userPermissions && <FloodNtcStations ref={floodNtcRef} />}\r\n      </MapContainer>\r\n      {/* display the modal */}\r\n      <ModalsDisplay />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Home;\r\n"],"names":["constructor","modalStack","makeAutoObservable","this","observable","shallow","autoBind","isOpen","length","open","modal","push","close","pop","clear","authHeaders","token","Authorization","undefined","getUser","async","id","apiClient","get","params","Id","headers","getAllUsers","createNewUser","data","post","editUser","put","deleteUser","delete","active","deactivate","resetPassword","passwordInf","changePassword","error","doneMsg","userData","userRoles","allUsers","response","usersService","result","roleNames","_error$response","_error$response$data","message","console","log","items","loading","inf","_error$response2","_error$response2$data","observer","_ref","t","useTranslation","changePassData","setChangePassData","useState","currentPassword","newPassword","_jsxs","Modal","show","onClose","userStore","size","popup","className","children","_jsx","Header","Body","FontAwesomeIcon","icon","faTriangleExclamation","beat","style","color","onSubmit","e","preventDefault","authStore","handleChangeForm","htmlFor","name","type","required","autoComplete","onChange","event","prev","target","value","faSpinner","spin","useEffect","userId","form","updatedUser","emailAddress","userName","handleEditUser","defaultValue","disabled","showPasswordOne","setShowPasswordOne","showPasswordTwo","setShowPasswordTwo","adminPassword","ProtectedRoute","permission","onClick","faEye","faEyeSlash","action","faCheckCircle","Button","createModal","actionFunc","afterActionFunc","DoneMessage","_authStore$roles","usersArray","index","element","setUserRoles","setLoading","handelRoles","checked","filter","role","getRoles","getAllRoles","roles","i","surname","count","total","_authStore$roles2","map","r","normalizedName","groupedRoles","reduce","acc","category","Object","entries","_ref2","includes","displayName","description","displayRoles","VerifyAction","isActive","prop","displayAllUsers","useCallback","TableRow","TableCell","EditUserModal","faPenToSquare","Table","hoverable","TableBody","colSpan","initialFormValue","password","createUserData","setCreateUserData","handleCreateNewUser","_authStore$allPermiss","roleData","setRoleData","grantedPermissions","handelPermissions","getAllPermissions","editRole","handleEditRole","allPermissions","_Fragment","_authStore$allPermiss2","p","groupedPermissions","permissions","displayPermissions","deleteRole","allRoles","EditRoleModal","handleCreateRole","createNewRole","displayRoleInf","useMemo","activeSection","setActiveSection","sectionComponents","Users","UsersModal","Create_New_User","CreateNewUserModal","Roles","UsersRolesModal","Create_New_Role","CreateNewRoleModal","Sidebar","SidebarItems","SidebarItemGroup","SidebarCollapse","FaUsers","label","SidebarItem","href","CiRoute","zIndex","Link","to","logout","faRightFromBracket","faGears","Management","ResetPassModal","ProfileInfModal","ChangePassModal","getStationsByType","city","arguments","County","AreaName","Town","Street","City","Type","fetchStationById","fetchObservations","datastreamId","start","end","updateStation","deleteStation","fetchAllCities","createStation","getWaterLevelTypes","getRainTypes","fetchCountiesWithAreasAndStations","stationType","stationsByType","WaterLevel","Rain","Sewer","FloodNtc","selectedStationId","selectedStationType","stationsMetaByType","isLoadingByType","WaterLevelIsActive","RainIsActive","SewerIsActive","FloodNtcIsActive","panelIsOpen","panelSelectedType","displayCityName","allWaterLevelStations","allRainLevelStations","allSewerLevelStations","allFloodNtcStations","effectiveWaterLevelIsActive","effectiveRainIsActive","effectiveSewerIsActive","effectiveFloodNtcIsActive","togglingWaterLevel","togglingRain","togglingSewer","togglingFloodNtc","setPanelOpen","setPanelSelectedType","clearMessages","_response$data","_response$data$result","_result$stations","stationService","stations","_error$response$data$","setSelectedStation","clearSelectedStation","isSelected","getStationById","getLastObservations","dataStreamId","editStation","effectiveToken","sessionStorage","getItem","_error$response2$data2","_error$response3","_error$response3$data","_error$response3$data2","getAllCities","StationsTable","selectedOption","currentPage","setCurrentPage","totalPages","Math","ceil","pageData","slice","timeNow","utcTime","localDate","Date","toString","toLocaleString","striped","Head","HeadCell","obs","idx","Row","Cell","obsTimestamp","Pagination","layout","onPageChange","page","previousLabel","nextLabel","showIcons","showMore","setShowMore","stationsStore","_form$alertL","updatedData","longitude","latitude","alertL1","alertL2","alertL3","handleEdit","addR_E","address","admicode","alert","StationsChart","chartData","waterLevelStation","indexedChartData","reverse","item","time","userPermissions","EditStationModal","faTrash","ResponsiveContainer","width","height","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","hide","tick","_indexedChartData$pay","x","y","payload","lines","split","textAnchor","fill","line","dy","ticks","floor","tickFormatter","YAxis","domain","minY","_waterLevelStation$al","results","minNumb","min","maxY","maxNumb","Tooltip","labelFormatter","whiteSpace","Line","stroke","strokeWidth","dot","ReferenceLine","position","formatWarningStatus","status","AboveLevel_1","AboveLevel_2","AboveLevel_3","normal","Danger","Warning","Normal","unknown","lvl_above_1","lvl_above_2","lvl_above_3","level_above_1","level_above_2","level_above_3","above_level_1","above_level_2","above_level_3","getWarningStatusColor","InfDataTable","_waterLevelStation$da","_waterLevelStation$da2","_waterLevelStation$da3","_waterLevelStation$da4","_waterLevelStation$da5","_waterLevelStation$da6","_waterLevelStation$al2","_waterLevelStation$da7","_waterLevelStation$da8","_waterLevelStation$da9","_timeNow","_waterLevelStation$da10","_waterLevelStation$da11","_waterLevelStation$da12","_timeNow2","_waterLevelStation$da13","_waterLevelStation$da14","_waterLevelStation$da15","dataStreamType","scope","datastreams","stream","latestObservation","warningStatus","stationNumber","toFixed","lastResult","lastTimestamp","CrossSectionChart","station","waterLevelValue","jsonX","jsonY","yDomain","xDomain","xArr","Array","isArray","JSON","parse","yArr","len","arr","Number","isFinite","sort","a","b","wl","stacked","bedClamped","waterSegment","max","yValues","Infinity","padding","xs","minX","ComposedChart","margin","top","right","left","bottom","vertical","horizontal","fontSize","angle","formatter","val","content","alertInfo","entry","info","Legend","verticalAlign","Area","stackId","fillOpacity","isAnimationActive","offset","fontWeight","WaterLevelGauge","currentValue","maxValue","chartRef","useRef","script","document","createElement","src","onload","window","google","charts","load","packages","setOnLoadCallback","drawChart","head","appendChild","current","visualization","arrayToDataTable","higherAlert","lowerAlert","options","redFrom","redTo","yellowFrom","yellowTo","greenFrom","greenTo","minorTicks","majorTicks","animation","duration","easing","greenColor","yellowColor","redColor","Gauge","draw","setTimeout","svgText","querySelector","setAttribute","parentNode","removeChild","ref","from","_selectedOption","elementId","stationName","setWaterLevelStation","setSelectedOption","viewMode","setViewMode","res","elementDataStreamId","hours","now","lastHours","getTime","toISOString","Select","Alert","forwardRef","props","clusterRef","textContent","useImperativeHandle","declusterStation","stationId","cluster","find","s","layer","getLayers","zoomToShowLayer","iconHtml","renderToStaticMarkup","faDroplet","faIcon","L","html","iconSize","iconAnchor","selectedIcon","markers","selectedStation","Marker","zIndexOffset","eventHandlers","click","StationsModal","direction","opacity","permanent","faStopwatch","iconCreateFunction","hasSelectedStation","getChildCount","getAllChildMarkers","some","marker","isClusterExpanded","clusterBounds","getBounds","boundsWidth","getEast","getWest","boundsHeight","getNorth","getSouth","bgColor","borderClass","MarkerClusterGroup","chunkedLoading","maxClusterRadius","showCoverageOnHover","spiderfyOnMaxZoom","FilterLayer","checkedLayersValue","storedCityValue","checkedLayers","setCheckedLayers","activeTab","setActiveTab","setIsOpen","storedCity","layers","layerConfig","toggle","setItem","stringify","storedLayers","forEach","layerType","isChecked","config","Card","onWheel","stopPropagation","onTouchMove","interpolateSize","faChevronLeft","Tabs","onActiveTabChange","tabIndex","theme","tablist","tabitem","base","Item","title","Checkbox","newCheckedState","toggleLayer","onMouseDown","faChevronRight","faRainbow","spiderfyOnClick","faScrewdriver","TABLE_CONFIGS","columns","key","header","cellClass","render","county","_timeStr$slice","_timeStr$slice2","timeStr","_timeStr$slice3","_timeStr$slice4","StationsDataTable","filteredItems","openDetails","selectedType","handleTogglePanel","useMap","tableConfig","getTableConfig","minWidth","totalWidth","col","getTableMinWidth","getRowClass","root","column","flyTo","faCircleInfo","setSelectedType","search","setSearch","cities","setCities","setCity","TYPE_LABELS","isLoading","hasData","dataLength","storeError","then","catch","err","loadCities","currentStationsData","priority","keys","itemsArray","q","toLowerCase","filtered","area","Boolean","v","String","_priority$a$warningSt","_priority$b$warningSt","TypeButton","panelRef","disableScrollPropagation","disableClickPropagation","_","Badge","_ref3","_warn$aboveLevel_","_ref4","_warn$aboveLevel_2","_warn$unknown","_op$active","_op$inactive","_op$maintenance","_op$outOfService","meta","warn","warningStatusCounts","op","operationStatusCounts","aboveLevel_3","aboveLevel_2","aboveLevel_1","danger","aboveLevel_4","inactive","maintenance","outOfService","TextInput","placeholder","onChangeCity","c","Spinner","lastTime","faHouseFloodWater","allCounties","setAllCounties","DisplayAllCounties","Dropdown","renderTrigger","faBars","onWheelCapture","onPointerDown","onScroll","background","countyName","placement","countyAreas","areaName","areaStations","DropdownItem","openStationModal","RemoveDefaultZoom","zoomControl","remove","waterLevelsRef","rainRef","sewerRef","floodNtcRef","GetComprehensiveApplicationInfo","user","getUserPermissions","MapContainer","attributionControl","center","zoom","cursor","Nav","CountiesDropDown","StationsSidePanel","TileLayer","url","ZoomControl","WaterLevelsStations","RainStations","SewerStations","FloodNtcStations","ModalsDisplay"],"sourceRoot":""}