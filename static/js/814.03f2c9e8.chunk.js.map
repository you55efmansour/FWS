{"version":3,"file":"static/js/814.03f2c9e8.chunk.js","mappings":"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","sources":["components/login/Login.jsx"],"sourcesContent":["import { React, useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEye,\r\n  faEyeSlash,\r\n  faTriangleExclamation,\r\n  faSpinner,\r\n  faGlobe,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { observer } from \"mobx-react\";\r\nimport authStore from \"../../stores/AuthStore\";\r\nimport { Button } from \"flowbite-react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { changeLanguage } from \"../../i18n\";\r\n\r\nconst Login = observer(() => {\r\n  const { t, i18n } = useTranslation();\r\n  \r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [logInf, setLogInf] = useState({\r\n    userNameOrEmailAddress: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const toggleLanguage = () => {\r\n    const newLang = i18n.language === \"en\" ? \"zh\" : \"en\";\r\n    changeLanguage(newLang);\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setIsLoading(true);\r\n    await authStore.login(logInf);\r\n    if (authStore.token || authStore.error) {\r\n      setIsLoading(false);\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    authStore.error = null;\r\n    return()=>{\r\n      authStore.error = null;\r\n    }\r\n  }, []);\r\n  \r\n  if (authStore.token) {\r\n  \r\n    return <Navigate to=\"/home\" />\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-page text-slate-50\">\r\n      \r\n      <div className=\"z-10 relative flex min-h-screen flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\r\n        {/* Language Toggle Button */}\r\n        <div className=\"mt-4 flex justify-center\">\r\n            <button\r\n              onClick={toggleLanguage}\r\n              className=\"flex items-center gap-2 px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-200\"\r\n              title={t(\"login.languageToggle\")}\r\n            >\r\n              <FontAwesomeIcon icon={faGlobe} className=\"text-white\" />\r\n              <span>{i18n.language === \"en\" ? \"中文\" : \"English\"}</span>\r\n            </button>\r\n          </div>\r\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\r\n          <h2 className=\"mt-10 text-center text-4xl md:text-5xl/9  font-bold tracking-tight\">\r\n            {t(\"login.header\")}\r\n          </h2>\r\n          \r\n          \r\n        </div>\r\n\r\n        <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\r\n          <form className=\"space-y-6 border p-3 rounded border-red-200 bg-black bg-opacity-50\" onSubmit={(e) => handleSubmit(e)}>\r\n            \r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm/6 font-medium \">\r\n                {t(\"login.userName\")}\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  required\r\n                  autoComplete=\"email\"\r\n                  className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base  outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                  onChange={(event) =>\r\n                    setLogInf((prev) => ({\r\n                      ...prev,\r\n                      userNameOrEmailAddress: event.target.value,\r\n                    }))\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <label\r\n                  htmlFor=\"password\"\r\n                  className=\"block text-sm/6 font-medium \"\r\n                >\r\n                  {t(\"login.password\")}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"mt-2 flex items-center\">\r\n                <input\r\n                  onChange={(event) =>\r\n                    setLogInf((prev) => ({\r\n                      ...prev,\r\n                      password: event.target.value,\r\n                    }))\r\n                  }\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  required\r\n                  autoComplete=\"current-password\"\r\n                  className=\"block w-full text-black rounded-md bg-white px-3 py-1.5 text-base  outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\r\n                />\r\n                <span\r\n                  className=\"hover:cursor-pointer ms-1\"\r\n                  onClick={() => {\r\n                    togglePasswordVisibility();\r\n                  }}\r\n                >\r\n                  <FontAwesomeIcon icon={showPassword ? faEye : faEyeSlash} />\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n              {/* btns */}\r\n             \r\n            <div className=\"flex gap-11\">\r\n\r\n              <div\r\n                className=\"flex w-full justify-center items-center rounded-md border border-red-500 px-3 py-1.5 text-sm/6 font-semibold reset text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"               \r\n              >\r\n                {t(\"login.forgetPassword\")}\r\n              </div>\r\n              \r\n              <Button\r\n                className=\"flex w-full justify-center items-center rounded-md bg-blue-600 px-3 py-1.5 text-sm/6 font-semibold text-white shadow-sm hover:bg-blue-500 hover:cursor-pointer focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n                type = \"submit\"\r\n              >\r\n                {isLoading ? (\r\n                  <FontAwesomeIcon\r\n                    className=\"text-xl font-bold\"\r\n                    icon={faSpinner}\r\n                    spin\r\n                  />\r\n                ) : (\r\n                  `${t(\"login.login\")}`\r\n                )}\r\n              </Button>\r\n            </div>\r\n             {/* ==== btns ====*/}\r\n            <div className=\"error\">\r\n              {authStore.error ? (\r\n                <div className=\"font-bold text-red-600 mt-5  text-center\">\r\n                  <FontAwesomeIcon\r\n                    icon={faTriangleExclamation}\r\n                    beat\r\n                    style={{ color: \"#c70000\" }}\r\n                  />{\" \"}\r\n                  {authStore.error} !\r\n                </div>\r\n              ) : (\r\n                <div className=\"font-bold text-red-600 mt-2\"></div>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Login;\r\n"],"names":["observer","t","i18n","useTranslation","showPassword","setShowPassword","useState","isLoading","setIsLoading","logInf","setLogInf","userNameOrEmailAddress","password","useEffect","authStore","error","token","_jsx","Navigate","to","className","children","_jsxs","onClick","toggleLanguage","newLang","language","changeLanguage","title","FontAwesomeIcon","icon","faGlobe","onSubmit","e","async","preventDefault","login","handleSubmit","htmlFor","id","name","type","required","autoComplete","onChange","event","prev","target","value","faEye","faEyeSlash","Button","faSpinner","spin","faTriangleExclamation","beat","style","color"],"sourceRoot":""}